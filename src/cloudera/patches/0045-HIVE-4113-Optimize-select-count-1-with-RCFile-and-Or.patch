From c5da33e68ddf3d263a3ec0a359ab32697ab40176 Mon Sep 17 00:00:00 2001
From: Ashutosh Chauhan <hashutosh@apache.org>
Date: Sun, 22 Sep 2013 06:10:15 +0000
Subject: [PATCH 045/375] HIVE-4113 : Optimize select count(1) with RCFile and Orc (Brock Noland and Yin Huai via Ashutosh Chauhan)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1525322 13f79535-47bb-0310-9956-ffa450edef68
---
 .../java/org/apache/hadoop/hive/conf/HiveConf.java |    1 -
 conf/hive-default.xml.template                     |    6 -
 .../results/clientpositive/serde_typedbytes.q.out  |    2 +
 .../results/clientpositive/serde_typedbytes2.q.out |    2 +
 .../results/clientpositive/serde_typedbytes3.q.out |    2 +
 .../results/clientpositive/serde_typedbytes5.q.out |    2 +
 .../results/clientpositive/udf_row_sequence.q.out  |    1 +
 .../hive/hbase/HiveHBaseTableInputFormat.java      |    6 +-
 .../src/test/results/positive/hbase_queries.q.out  |    3 +
 .../hbase_single_sourced_multi_insert.q.out        |    2 +
 .../hcatalog/mapreduce/HCatBaseInputFormat.java    |   13 ++-
 .../hcatalog/mapreduce/TestHCatPartitioned.java    |   17 ++--
 .../apache/hive/hcatalog/pig/TestHCatLoader.java   |    8 ++
 ql/src/java/org/apache/hadoop/hive/ql/Driver.java  |   10 +--
 .../org/apache/hadoop/hive/ql/exec/FetchTask.java  |    6 +-
 .../hadoop/hive/ql/exec/SMBMapJoinOperator.java    |   36 +++---
 .../hadoop/hive/ql/exec/TableScanOperator.java     |   26 +++-
 .../hadoop/hive/ql/exec/mr/MapredLocalTask.java    |   22 +---
 .../hive/ql/io/BucketizedHiveInputFormat.java      |   12 +-
 .../apache/hadoop/hive/ql/io/HiveInputFormat.java  |   36 ++----
 .../java/org/apache/hadoop/hive/ql/io/RCFile.java  |   22 ++--
 .../hadoop/hive/ql/io/RCFileRecordReader.java      |    8 +-
 .../hadoop/hive/ql/io/orc/OrcInputFormat.java      |   15 +--
 .../hive/ql/optimizer/ColumnPrunerProcFactory.java |    8 +-
 .../hadoop/hive/ql/optimizer/GenMRFileSink1.java   |    3 +-
 .../hadoop/hive/ql/optimizer/GenMRUnion1.java      |   35 +-----
 .../hadoop/hive/ql/optimizer/GenMapRedUtils.java   |  117 +++++++++++-------
 .../apache/hadoop/hive/ql/optimizer/Optimizer.java |    4 +-
 .../optimizer/physical/GenMRSkewJoinProcessor.java |   30 +++--
 .../optimizer/physical/MetadataOnlyOptimizer.java  |   14 ++-
 .../hive/ql/io/PerformTestRCFileAndSeqFile.java    |    9 +-
 .../org/apache/hadoop/hive/ql/io/TestRCFile.java   |   23 +++--
 .../hive/ql/io/orc/TestInputOutputFormat.java      |   30 +++--
 .../queries/clientpositive/binary_table_colserde.q |    1 +
 .../test/results/clientpositive/auto_join0.q.out   |    1 +
 .../test/results/clientpositive/auto_join15.q.out  |    1 +
 .../test/results/clientpositive/auto_join18.q.out  |    3 +
 .../auto_join18_multi_distinct.q.out               |    3 +
 .../test/results/clientpositive/auto_join20.q.out  |    4 +-
 .../test/results/clientpositive/auto_join27.q.out  |    1 +
 .../test/results/clientpositive/auto_join30.q.out  |   61 +++++++++
 .../test/results/clientpositive/auto_join31.q.out  |   10 ++
 .../auto_join_reordering_values.q.out              |    6 +
 .../clientpositive/auto_smb_mapjoin_14.q.out       |   11 ++
 .../clientpositive/auto_sortmerge_join_10.q.out    |    2 +
 .../clientpositive/auto_sortmerge_join_6.q.out     |    8 ++
 .../clientpositive/auto_sortmerge_join_9.q.out     |   18 +++
 .../clientpositive/binary_output_format.q.out      |    4 +
 .../clientpositive/binary_table_colserde.q.out     |   12 ++-
 ql/src/test/results/clientpositive/bucket5.q.out   |    6 +
 .../clientpositive/bucketizedhiveinputformat.q.out |    2 +
 .../results/clientpositive/bucketmapjoin1.q.out    |    8 ++
 .../results/clientpositive/bucketmapjoin2.q.out    |   12 ++
 .../results/clientpositive/bucketmapjoin3.q.out    |    8 ++
 .../results/clientpositive/bucketmapjoin4.q.out    |    8 ++
 .../results/clientpositive/bucketmapjoin5.q.out    |    8 ++
 .../clientpositive/bucketmapjoin_negative.q.out    |    4 +
 .../clientpositive/bucketmapjoin_negative2.q.out   |    4 +
 .../results/clientpositive/case_sensitivity.q.out  |    2 +
 ql/src/test/results/clientpositive/cast1.q.out     |    2 +
 ql/src/test/results/clientpositive/cluster.q.out   |    4 +
 .../clientpositive/column_access_stats.q.out       |    5 +
 .../clientpositive/correlationoptimizer1.q.out     |   33 +++++
 .../clientpositive/correlationoptimizer10.q.out    |   10 ++
 .../clientpositive/correlationoptimizer11.q.out    |    2 +
 .../clientpositive/correlationoptimizer12.q.out    |    2 +
 .../clientpositive/correlationoptimizer13.q.out    |    3 +
 .../clientpositive/correlationoptimizer14.q.out    |   14 ++
 .../clientpositive/correlationoptimizer15.q.out    |    4 +
 .../clientpositive/correlationoptimizer2.q.out     |   26 ++++
 .../clientpositive/correlationoptimizer3.q.out     |   12 ++
 .../clientpositive/correlationoptimizer4.q.out     |   18 +++
 .../clientpositive/correlationoptimizer5.q.out     |    8 ++
 .../clientpositive/correlationoptimizer6.q.out     |   42 ++++++
 .../clientpositive/correlationoptimizer7.q.out     |    4 +
 .../clientpositive/correlationoptimizer8.q.out     |    6 +
 .../clientpositive/correlationoptimizer9.q.out     |    8 ++
 .../test/results/clientpositive/ctas_colname.q.out |    1 +
 .../results/clientpositive/ctas_hadoop20.q.out     |    7 +-
 .../ctas_uses_database_location.q.out              |    2 +
 .../test/results/clientpositive/decimal_udf.q.out  |    1 +
 .../clientpositive/filter_join_breaktask.q.out     |    2 +
 ql/src/test/results/clientpositive/groupby1.q.out  |    1 +
 ql/src/test/results/clientpositive/groupby10.q.out |    6 +
 ql/src/test/results/clientpositive/groupby11.q.out |    2 +
 .../results/clientpositive/groupby1_limit.q.out    |    1 +
 .../results/clientpositive/groupby1_map_skew.q.out |    1 +
 ql/src/test/results/clientpositive/groupby3.q.out  |    1 +
 .../results/clientpositive/groupby3_map_skew.q.out |    1 +
 ql/src/test/results/clientpositive/groupby4.q.out  |    1 +
 ql/src/test/results/clientpositive/groupby5.q.out  |    1 +
 ql/src/test/results/clientpositive/groupby6.q.out  |    1 +
 .../results/clientpositive/groupby6_map_skew.q.out |    2 +
 .../test/results/clientpositive/groupby7_map.q.out |    1 +
 .../results/clientpositive/groupby7_map_skew.q.out |    3 +
 .../results/clientpositive/groupby7_noskew.q.out   |    1 +
 .../groupby7_noskew_multi_single_reducer.q.out     |    2 +
 ql/src/test/results/clientpositive/groupby8.q.out  |    4 +
 .../test/results/clientpositive/groupby8_map.q.out |    2 +
 .../results/clientpositive/groupby8_map_skew.q.out |    2 +
 .../results/clientpositive/groupby8_noskew.q.out   |    2 +
 ql/src/test/results/clientpositive/groupby9.q.out  |    9 ++
 .../clientpositive/groupby_complex_types.q.out     |    2 +
 ...roupby_complex_types_multi_single_reducer.q.out |    3 +
 .../results/clientpositive/groupby_cube1.q.out     |    4 +
 .../clientpositive/groupby_distinct_samekey.q.out  |    1 +
 .../clientpositive/groupby_grouping_sets2.q.out    |    3 +
 .../clientpositive/groupby_grouping_sets3.q.out    |    1 +
 .../clientpositive/groupby_grouping_sets4.q.out    |    8 ++
 .../clientpositive/groupby_grouping_sets5.q.out    |    3 +
 .../groupby_multi_insert_common_distinct.q.out     |    3 +
 .../groupby_multi_single_reducer.q.out             |    2 +
 .../results/clientpositive/groupby_position.q.out  |    7 +-
 .../results/clientpositive/groupby_rollup1.q.out   |    4 +
 .../results/clientpositive/groupby_sort_1.q.out    |   42 ++++++
 .../results/clientpositive/groupby_sort_3.q.out    |    4 +
 .../results/clientpositive/groupby_sort_5.q.out    |    4 +
 .../results/clientpositive/groupby_sort_7.q.out    |    2 +
 .../clientpositive/groupby_sort_skew_1.q.out       |   58 +++++++++
 .../test/results/clientpositive/index_auto.q.out   |    2 +
 .../clientpositive/index_auto_file_format.q.out    |    4 +
 .../clientpositive/index_auto_mult_tables.q.out    |    3 +
 .../index_auto_mult_tables_compact.q.out           |    7 +
 .../clientpositive/index_auto_multiple.q.out       |    2 +
 .../clientpositive/index_auto_partitioned.q.out    |    2 +
 .../clientpositive/index_auto_self_join.q.out      |    2 +
 .../results/clientpositive/index_auto_update.q.out |    4 +
 .../results/clientpositive/index_bitmap3.q.out     |    1 +
 .../results/clientpositive/index_bitmap_auto.q.out |    1 +
 .../results/clientpositive/index_compression.q.out |    2 +
 .../test/results/clientpositive/index_serde.q.out  |    2 +
 .../infer_bucket_sort_map_operators.q.out          |    4 +
 ql/src/test/results/clientpositive/innerjoin.q.out |    1 +
 ql/src/test/results/clientpositive/input11.q.out   |    2 +
 .../results/clientpositive/input12_hadoop20.q.out  |    6 +
 ql/src/test/results/clientpositive/input13.q.out   |    8 ++
 .../results/clientpositive/input14_limit.q.out     |    1 +
 .../test/results/clientpositive/input1_limit.q.out |    1 +
 ql/src/test/results/clientpositive/input34.q.out   |    2 +
 ql/src/test/results/clientpositive/input35.q.out   |    2 +
 ql/src/test/results/clientpositive/input36.q.out   |    2 +
 ql/src/test/results/clientpositive/input38.q.out   |    2 +
 .../results/clientpositive/input39_hadoop20.q.out  |    2 +-
 .../test/results/clientpositive/input3_limit.q.out |    1 +
 .../test/results/clientpositive/input4_limit.q.out |    1 +
 ql/src/test/results/clientpositive/input6.q.out    |    2 +
 ql/src/test/results/clientpositive/input7.q.out    |    2 +
 ql/src/test/results/clientpositive/input8.q.out    |    2 +
 ql/src/test/results/clientpositive/input9.q.out    |    2 +
 .../clientpositive/input_dynamicserde.q.out        |    2 +
 .../test/results/clientpositive/input_part1.q.out  |    4 +
 .../test/results/clientpositive/input_part2.q.out  |    8 ++
 .../test/results/clientpositive/input_part5.q.out  |    3 +-
 .../clientpositive/input_testsequencefile.q.out    |    2 +
 .../results/clientpositive/input_testxpath.q.out   |    2 +
 .../results/clientpositive/input_testxpath2.q.out  |    2 +
 ql/src/test/results/clientpositive/insert1.q.out   |   12 ++
 .../test/results/clientpositive/insert_into3.q.out |    2 +
 .../test/results/clientpositive/insert_into4.q.out |    2 +
 .../test/results/clientpositive/insert_into5.q.out |    6 +
 .../test/results/clientpositive/insert_into6.q.out |    2 +
 ql/src/test/results/clientpositive/join0.q.out     |    1 +
 ql/src/test/results/clientpositive/join13.q.out    |    1 +
 ql/src/test/results/clientpositive/join15.q.out    |    1 +
 ql/src/test/results/clientpositive/join18.q.out    |    2 +
 .../clientpositive/join18_multi_distinct.q.out     |    3 +
 ql/src/test/results/clientpositive/join19.q.out    |    2 +
 ql/src/test/results/clientpositive/join2.q.out     |    1 +
 ql/src/test/results/clientpositive/join20.q.out    |    2 +
 ql/src/test/results/clientpositive/join21.q.out    |    1 +
 ql/src/test/results/clientpositive/join22.q.out    |    1 +
 ql/src/test/results/clientpositive/join23.q.out    |    1 +
 ql/src/test/results/clientpositive/join25.q.out    |    2 +
 ql/src/test/results/clientpositive/join26.q.out    |    4 +
 ql/src/test/results/clientpositive/join27.q.out    |    2 +
 ql/src/test/results/clientpositive/join29.q.out    |    6 +
 ql/src/test/results/clientpositive/join31.q.out    |    7 +
 .../results/clientpositive/join32_lessSize.q.out   |   17 +++-
 ql/src/test/results/clientpositive/join36.q.out    |    2 +
 ql/src/test/results/clientpositive/join37.q.out    |    2 +
 ql/src/test/results/clientpositive/join39.q.out    |    2 +
 ql/src/test/results/clientpositive/join40.q.out    |    3 +
 .../results/clientpositive/join_hive_626.q.out     |    1 +
 .../test/results/clientpositive/join_map_ppr.q.out |    8 ++
 .../results/clientpositive/join_nullsafe.q.out     |    5 +
 .../test/results/clientpositive/join_reorder.q.out |    2 +
 .../results/clientpositive/join_reorder2.q.out     |    3 +
 .../results/clientpositive/join_reorder3.q.out     |    3 +
 ql/src/test/results/clientpositive/join_vc.q.out   |    2 +
 .../test/results/clientpositive/lateral_view.q.out |    1 +
 .../results/clientpositive/lateral_view_cp.q.out   |    1 +
 .../clientpositive/lateral_view_noalias.q.out      |    2 +
 .../results/clientpositive/limit_pushdown.q.out    |    4 +
 .../clientpositive/limit_pushdown_negative.q.out   |    1 +
 ql/src/test/results/clientpositive/lineage1.q.out  |    2 +
 .../results/clientpositive/load_dyn_part1.q.out    |    4 +
 .../results/clientpositive/load_dyn_part14.q.out   |    2 +
 .../results/clientpositive/mapjoin_distinct.q.out  |    2 +
 ql/src/test/results/clientpositive/merge1.q.out    |    6 +
 ql/src/test/results/clientpositive/merge2.q.out    |    6 +
 ql/src/test/results/clientpositive/merge3.q.out    |   12 ++
 ql/src/test/results/clientpositive/merge4.q.out    |    6 +
 .../clientpositive/merge_dynamic_partition.q.out   |    4 +
 .../clientpositive/merge_dynamic_partition2.q.out  |    2 +
 .../clientpositive/merge_dynamic_partition3.q.out  |    2 +
 .../test/results/clientpositive/mergejoins.q.out   |    1 +
 .../results/clientpositive/mergejoins_mixed.q.out  |   16 +++
 .../results/clientpositive/metadataonly1.q.out     |    4 +
 .../results/clientpositive/multiMapJoin1.q.out     |   21 +++
 .../results/clientpositive/multiMapJoin2.q.out     |   18 +++
 .../test/results/clientpositive/multi_insert.q.out |   24 ++++
 .../results/clientpositive/multi_insert_gby.q.out  |    4 +
 .../results/clientpositive/multi_insert_gby2.q.out |    1 +
 .../results/clientpositive/multi_insert_gby3.q.out |    4 +
 .../clientpositive/multi_insert_lateral_view.q.out |   10 ++
 ...ulti_insert_move_tasks_share_dependencies.q.out |   48 +++++++
 .../clientpositive/multigroupby_singlemr.q.out     |    5 +
 ql/src/test/results/clientpositive/no_hooks.q.out  |    1 +
 .../clientpositive/nonblock_op_deduplicate.q.out   |    3 +
 ql/src/test/results/clientpositive/nullgroup.q.out |    1 +
 .../test/results/clientpositive/nullgroup2.q.out   |    2 +
 .../test/results/clientpositive/nullgroup4.q.out   |    2 +
 .../results/clientpositive/orc_createas1.q.out     |    5 +-
 .../clientpositive/orc_predicate_pushdown.q.out    |    2 +
 ql/src/test/results/clientpositive/parallel.q.out  |    1 +
 ql/src/test/results/clientpositive/pcr.q.out       |   20 +++
 ql/src/test/results/clientpositive/ppd2.q.out      |    1 +
 .../results/clientpositive/ppd_clusterby.q.out     |    2 +
 .../results/clientpositive/ppd_constant_expr.q.out |    4 +
 ql/src/test/results/clientpositive/ppd_gby2.q.out  |    2 +
 .../test/results/clientpositive/ppd_gby_join.q.out |    2 +
 ql/src/test/results/clientpositive/ppd_join2.q.out |    2 +
 .../results/clientpositive/ppd_join_filter.q.out   |    8 ++
 .../clientpositive/ppd_repeated_alias.q.out        |    1 +
 .../test/results/clientpositive/ppd_udf_case.q.out |    2 +
 ql/src/test/results/clientpositive/ppd_vc.q.out    |    2 +
 .../clientpositive/ql_rewrite_gbtoidx.q.out        |    6 +
 ql/src/test/results/clientpositive/quote1.q.out    |    2 +
 .../clientpositive/rand_partitionpruner2.q.out     |    4 +
 .../results/clientpositive/rcfile_merge1.q.out     |    2 +
 .../results/clientpositive/rcfile_merge4.q.out     |    2 +
 .../reduce_deduplicate_exclude_join.q.out          |    1 +
 .../reduce_deduplicate_extended.q.out              |    4 +
 ql/src/test/results/clientpositive/regex_col.q.out |    1 +
 ql/src/test/results/clientpositive/sample1.q.out   |    4 +
 ql/src/test/results/clientpositive/sample10.q.out  |    2 +
 ql/src/test/results/clientpositive/sample2.q.out   |    5 +
 ql/src/test/results/clientpositive/sample4.q.out   |    5 +
 ql/src/test/results/clientpositive/sample5.q.out   |    5 +
 ql/src/test/results/clientpositive/sample6.q.out   |    5 +
 ql/src/test/results/clientpositive/sample7.q.out   |    5 +
 ql/src/test/results/clientpositive/sample8.q.out   |    2 +
 ql/src/test/results/clientpositive/semijoin.q.out  |   19 +++
 ql/src/test/results/clientpositive/skewjoin.q.out  |   16 +++
 .../results/clientpositive/skewjoinopt13.q.out     |    1 +
 .../test/results/clientpositive/skewjoinopt9.q.out |    1 +
 .../test/results/clientpositive/smb_mapjoin9.q.out |    2 +
 .../results/clientpositive/smb_mapjoin_14.q.out    |    2 +
 .../results/clientpositive/smb_mapjoin_25.q.out    |    2 +
 .../results/clientpositive/smb_mapjoin_6.q.out     |    8 ++
 .../results/clientpositive/smb_mapjoin_7.q.out     |    2 +
 ql/src/test/results/clientpositive/stats0.q.out    |    6 +
 ql/src/test/results/clientpositive/stats11.q.out   |    8 ++
 ql/src/test/results/clientpositive/stats4.q.out    |    4 +
 .../clientpositive/stats_empty_dyn_part.q.out      |    2 +
 ql/src/test/results/clientpositive/subq.q.out      |    2 +
 ql/src/test/results/clientpositive/udf1.q.out      |    2 +
 .../test/results/clientpositive/udf_10_trims.q.out |    2 +
 .../clientpositive/udf_case_column_pruning.q.out   |    1 +
 .../test/results/clientpositive/udf_explode.q.out  |    4 +
 .../test/results/clientpositive/udf_length.q.out   |    2 +
 .../test/results/clientpositive/udf_reverse.q.out  |    2 +
 .../test/results/clientpositive/udtf_explode.q.out |    4 +
 .../results/clientpositive/udtf_json_tuple.q.out   |    1 +
 ql/src/test/results/clientpositive/union.q.out     |    2 +
 ql/src/test/results/clientpositive/union10.q.out   |    2 +
 ql/src/test/results/clientpositive/union12.q.out   |    2 +
 ql/src/test/results/clientpositive/union17.q.out   |    2 +
 ql/src/test/results/clientpositive/union18.q.out   |    4 +
 ql/src/test/results/clientpositive/union24.q.out   |    2 +
 ql/src/test/results/clientpositive/union28.q.out   |    2 +
 ql/src/test/results/clientpositive/union29.q.out   |    2 +
 ql/src/test/results/clientpositive/union3.q.out    |    2 +
 ql/src/test/results/clientpositive/union30.q.out   |    2 +
 ql/src/test/results/clientpositive/union31.q.out   |    1 +
 ql/src/test/results/clientpositive/union33.q.out   |    6 +
 ql/src/test/results/clientpositive/union4.q.out    |    2 +
 ql/src/test/results/clientpositive/union6.q.out    |    2 +
 .../results/compiler/plan/case_sensitivity.q.xml   |   23 ++++
 ql/src/test/results/compiler/plan/input1.q.xml     |   23 ++++
 ql/src/test/results/compiler/plan/input2.q.xml     |   69 ++++++++++
 ql/src/test/results/compiler/plan/input3.q.xml     |   86 +++++++++++++
 ql/src/test/results/compiler/plan/input6.q.xml     |   23 ++++
 ql/src/test/results/compiler/plan/input7.q.xml     |   23 ++++
 ql/src/test/results/compiler/plan/input9.q.xml     |   23 ++++
 .../compiler/plan/input_testsequencefile.q.xml     |   23 ++++
 ql/src/test/results/compiler/plan/join2.q.xml      |   23 ++++
 ql/src/test/results/compiler/plan/sample2.q.xml    |   23 ++++
 ql/src/test/results/compiler/plan/sample3.q.xml    |   23 ++++
 ql/src/test/results/compiler/plan/sample4.q.xml    |   23 ++++
 ql/src/test/results/compiler/plan/sample5.q.xml    |   23 ++++
 ql/src/test/results/compiler/plan/sample6.q.xml    |   23 ++++
 ql/src/test/results/compiler/plan/sample7.q.xml    |   23 ++++
 ql/src/test/results/compiler/plan/subq.q.xml       |   23 ++++
 ql/src/test/results/compiler/plan/union.q.xml      |   23 ++++
 .../hadoop/hive/serde2/ColumnProjectionUtils.java  |  132 ++++++++++----------
 .../hadoop/hive/serde2/columnar/ColumnarSerDe.java |   27 +++--
 .../hive/serde2/columnar/ColumnarStruct.java       |   18 +---
 .../hive/serde2/columnar/ColumnarStructBase.java   |   11 +--
 .../serde2/columnar/LazyBinaryColumnarSerDe.java   |   17 ++-
 .../serde2/columnar/LazyBinaryColumnarStruct.java  |   14 +--
 .../hive/serde2/TestColumnProjectionUtils.java     |   86 +++++++++++++
 312 files changed, 2242 insertions(+), 379 deletions(-)
 create mode 100644 serde/src/test/org/apache/hadoop/hive/serde2/TestColumnProjectionUtils.java

diff --git a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
index c99ec78..cb19248 100644
--- a/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
+++ b/src/common/src/java/org/apache/hadoop/hive/conf/HiveConf.java
@@ -562,7 +562,6 @@
     HIVE_COMBINE_INPUT_FORMAT_SUPPORTS_SPLITTABLE("hive.hadoop.supports.splittable.combineinputformat", false),
 
     // Optimizer
-    HIVEOPTCP("hive.optimize.cp", true), // column pruner
     HIVEOPTINDEXFILTER("hive.optimize.index.filter", false), // automatically use indexes
     HIVEINDEXAUTOUPDATE("hive.optimize.index.autoupdate", false), //automatically update stale indexes
     HIVEOPTPPD("hive.optimize.ppd", true), // predicate pushdown
diff --git a/src/conf/hive-default.xml.template b/src/conf/hive-default.xml.template
index bc965c8..e9e0189 100644
--- a/src/conf/hive-default.xml.template
+++ b/src/conf/hive-default.xml.template
@@ -461,12 +461,6 @@
 </property>
 
 <property>
-  <name>hive.optimize.cp</name>
-  <value>true</value>
-  <description>Whether to enable column pruner</description>
-</property>
-
-<property>
   <name>hive.optimize.index.filter</name>
   <value>false</value>
   <description>Whether to enable automatic use of indexes</description>
diff --git a/src/contrib/src/test/results/clientpositive/serde_typedbytes.q.out b/src/contrib/src/test/results/clientpositive/serde_typedbytes.q.out
index 8c22399..6189601 100644
--- a/src/contrib/src/test/results/clientpositive/serde_typedbytes.q.out
+++ b/src/contrib/src/test/results/clientpositive/serde_typedbytes.q.out
@@ -103,6 +103,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -116,6 +117,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/contrib/src/test/results/clientpositive/serde_typedbytes2.q.out b/src/contrib/src/test/results/clientpositive/serde_typedbytes2.q.out
index 1e4881f..08d9872 100644
--- a/src/contrib/src/test/results/clientpositive/serde_typedbytes2.q.out
+++ b/src/contrib/src/test/results/clientpositive/serde_typedbytes2.q.out
@@ -103,6 +103,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -116,6 +117,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/contrib/src/test/results/clientpositive/serde_typedbytes3.q.out b/src/contrib/src/test/results/clientpositive/serde_typedbytes3.q.out
index 0186983..e37d190 100644
--- a/src/contrib/src/test/results/clientpositive/serde_typedbytes3.q.out
+++ b/src/contrib/src/test/results/clientpositive/serde_typedbytes3.q.out
@@ -103,6 +103,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -116,6 +117,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/contrib/src/test/results/clientpositive/serde_typedbytes5.q.out b/src/contrib/src/test/results/clientpositive/serde_typedbytes5.q.out
index ece8e43..4bbbf48 100644
--- a/src/contrib/src/test/results/clientpositive/serde_typedbytes5.q.out
+++ b/src/contrib/src/test/results/clientpositive/serde_typedbytes5.q.out
@@ -103,6 +103,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -116,6 +117,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/contrib/src/test/results/clientpositive/udf_row_sequence.q.out b/src/contrib/src/test/results/clientpositive/udf_row_sequence.q.out
index f745840..7d0da95 100644
--- a/src/contrib/src/test/results/clientpositive/udf_row_sequence.q.out
+++ b/src/contrib/src/test/results/clientpositive/udf_row_sequence.q.out
@@ -80,6 +80,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java b/src/hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java
index 766056b..8ee7b49 100644
--- a/src/hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java
+++ b/src/hbase-handler/src/java/org/apache/hadoop/hive/hbase/HiveHBaseTableInputFormat.java
@@ -105,14 +105,14 @@
       throw new IOException("Cannot read more columns than the given table contains.");
     }
 
-    boolean addAll = (readColIDs.size() == 0);
+    boolean readAllColumns = ColumnProjectionUtils.isReadAllColumns(jobConf);
     Scan scan = new Scan();
     boolean empty = true;
 
     // The list of families that have been added to the scan
     List<String> addedFamilies = new ArrayList<String>();
 
-    if (!addAll) {
+    if (!readAllColumns) {
       for (int i : readColIDs) {
         ColumnMapping colMap = columnsMapping.get(i);
         if (colMap.hbaseRowKey) {
@@ -151,7 +151,7 @@
           scan.addColumn(colMap.familyNameBytes, colMap.qualifierNameBytes);
         }
 
-        if (!addAll) {
+        if (!readAllColumns) {
           break;
         }
       }
diff --git a/src/hbase-handler/src/test/results/positive/hbase_queries.q.out b/src/hbase-handler/src/test/results/positive/hbase_queries.q.out
index 0bd55f6..e22d9fe 100644
--- a/src/hbase-handler/src/test/results/positive/hbase_queries.q.out
+++ b/src/hbase-handler/src/test/results/positive/hbase_queries.q.out
@@ -188,6 +188,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -364,6 +365,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -586,6 +588,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: UDFToDouble(_col0)
diff --git a/src/hbase-handler/src/test/results/positive/hbase_single_sourced_multi_insert.q.out b/src/hbase-handler/src/test/results/positive/hbase_single_sourced_multi_insert.q.out
index 92e8175..2a95a75 100644
--- a/src/hbase-handler/src/test/results/positive/hbase_single_sourced_multi_insert.q.out
+++ b/src/hbase-handler/src/test/results/positive/hbase_single_sourced_multi_insert.q.out
@@ -113,6 +113,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -126,6 +127,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/hcatalog/core/src/main/java/org/apache/hive/hcatalog/mapreduce/HCatBaseInputFormat.java b/src/hcatalog/core/src/main/java/org/apache/hive/hcatalog/mapreduce/HCatBaseInputFormat.java
index 553446a..4d06675 100644
--- a/src/hcatalog/core/src/main/java/org/apache/hive/hcatalog/mapreduce/HCatBaseInputFormat.java
+++ b/src/hcatalog/core/src/main/java/org/apache/hive/hcatalog/mapreduce/HCatBaseInputFormat.java
@@ -127,11 +127,13 @@ public static void setOutputSchema(Job job, HCatSchema hcatSchema)
 
       HCatSchema allCols = new HCatSchema(new LinkedList<HCatFieldSchema>());
       for (HCatFieldSchema field :
-        inputJobInfo.getTableInfo().getDataColumns().getFields())
+        inputJobInfo.getTableInfo().getDataColumns().getFields()) {
         allCols.append(field);
+      }
       for (HCatFieldSchema field :
-        inputJobInfo.getTableInfo().getPartitionColumns().getFields())
+        inputJobInfo.getTableInfo().getPartitionColumns().getFields()) {
         allCols.append(field);
+      }
 
       HCatUtil.copyJobPropertiesToJobConf(jobProperties, jobConf);
 
@@ -227,6 +229,7 @@ public static void setOutputSchema(Job job, HCatSchema hcatSchema)
    * @see org.apache.hive.hcatalog.mapreduce.HCatBaseInputFormat#getTableSchema(org.apache.hadoop.conf.Configuration)
    * @deprecated Use {@link #getTableSchema(org.apache.hadoop.conf.Configuration)}
    */
+  @Deprecated
   public static HCatSchema getTableSchema(JobContext context)
     throws IOException {
     return getTableSchema(context.getConfiguration());
@@ -247,11 +250,13 @@ public static HCatSchema getTableSchema(Configuration conf)
     InputJobInfo inputJobInfo = getJobInfo(conf);
     HCatSchema allCols = new HCatSchema(new LinkedList<HCatFieldSchema>());
     for (HCatFieldSchema field :
-      inputJobInfo.getTableInfo().getDataColumns().getFields())
+      inputJobInfo.getTableInfo().getDataColumns().getFields()) {
       allCols.append(field);
+    }
     for (HCatFieldSchema field :
-      inputJobInfo.getTableInfo().getPartitionColumns().getFields())
+      inputJobInfo.getTableInfo().getPartitionColumns().getFields()) {
       allCols.append(field);
+    }
     return allCols;
   }
 
diff --git a/src/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitioned.java b/src/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitioned.java
index 577e06d..6a9d662 100644
--- a/src/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitioned.java
+++ b/src/hcatalog/core/src/test/java/org/apache/hive/hcatalog/mapreduce/TestHCatPartitioned.java
@@ -38,6 +38,7 @@
 import org.junit.Test;
 
 import static junit.framework.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
 import static org.junit.Assert.assertTrue;
 
 public class TestHCatPartitioned extends HCatMapReduceTest {
@@ -106,7 +107,7 @@ public void testHCatPartitionedTable() throws Exception {
       exc = e;
     }
 
-    assertTrue(exc != null);
+    assertNotNull(exc);
     assertTrue(exc instanceof HCatException);
     assertEquals(ErrorType.ERROR_DUPLICATE_PARTITION, ((HCatException) exc).getErrorType());
 
@@ -122,7 +123,7 @@ public void testHCatPartitionedTable() throws Exception {
       exc = e;
     }
 
-    assertTrue(exc != null);
+    assertNotNull(exc);
     assertTrue(exc instanceof HCatException);
     assertEquals(ErrorType.ERROR_MISSING_PARTITION_KEY, ((HCatException) exc).getErrorType());
 
@@ -137,7 +138,7 @@ public void testHCatPartitionedTable() throws Exception {
       exc = e;
     }
 
-    assertTrue(exc != null);
+    assertNotNull(exc);
     assertTrue(exc instanceof HCatException);
     assertEquals(ErrorType.ERROR_INVALID_PARTITION_VALUES, ((HCatException) exc).getErrorType());
 
@@ -263,11 +264,11 @@ private void tableSchemaTest() throws Exception {
     Integer i = 0;
     for (HCatRecord rec : records) {
       assertEquals(5, rec.size());
-      assertTrue(rec.get(0).equals(i));
-      assertTrue(rec.get(1).equals("c2value" + i));
-      assertTrue(rec.get(2).equals("c3value" + i));
-      assertTrue(rec.get(3).equals("p1value6"));
-      assertTrue(rec.get(4).equals("p0value6"));
+      assertEquals(rec.get(0), i);
+      assertEquals(rec.get(1), "c2value" + i);
+      assertEquals(rec.get(2), "c3value" + i);
+      assertEquals(rec.get(3), "p1value6");
+      assertEquals(rec.get(4), "p0value6");
       i++;
     }
   }
diff --git a/src/hcatalog/hcatalog-pig-adapter/src/test/java/org/apache/hive/hcatalog/pig/TestHCatLoader.java b/src/hcatalog/hcatalog-pig-adapter/src/test/java/org/apache/hive/hcatalog/pig/TestHCatLoader.java
index d38bb8d..268d965 100644
--- a/src/hcatalog/hcatalog-pig-adapter/src/test/java/org/apache/hive/hcatalog/pig/TestHCatLoader.java
+++ b/src/hcatalog/hcatalog-pig-adapter/src/test/java/org/apache/hive/hcatalog/pig/TestHCatLoader.java
@@ -207,6 +207,8 @@ public void testReadDataBasic() throws IOException {
     while (XIter.hasNext()) {
       Tuple t = XIter.next();
       assertEquals(2, t.size());
+      assertNotNull(t.get(0));
+      assertNotNull(t.get(1));
       assertTrue(t.get(0).getClass() == Integer.class);
       assertTrue(t.get(1).getClass() == String.class);
       assertEquals(t.get(0), basicInputData.get(numTuplesRead).first);
@@ -299,6 +301,9 @@ public void testReadPartitionedBasic() throws IOException, CommandNeedRetryExcep
     while (WIter.hasNext()) {
       Tuple t = WIter.next();
       assertTrue(t.size() == 3);
+      assertNotNull(t.get(0));
+      assertNotNull(t.get(1));
+      assertNotNull(t.get(2));
       assertTrue(t.get(0).getClass() == Integer.class);
       assertTrue(t.get(1).getClass() == String.class);
       assertTrue(t.get(2).getClass() == String.class);
@@ -366,6 +371,7 @@ public void testProjectionsBasic() throws IOException {
     while (Y2Iter.hasNext()) {
       Tuple t = Y2Iter.next();
       assertEquals(t.size(), 1);
+      assertNotNull(t.get(0));
       assertTrue(t.get(0).getClass() == Integer.class);
       assertEquals(t.get(0), basicInputData.get(numTuplesRead).first);
       numTuplesRead++;
@@ -375,8 +381,10 @@ public void testProjectionsBasic() throws IOException {
     while (Y3Iter.hasNext()) {
       Tuple t = Y3Iter.next();
       assertEquals(t.size(), 2);
+      assertNotNull(t.get(0));
       assertTrue(t.get(0).getClass() == String.class);
       assertEquals(t.get(0), basicInputData.get(numTuplesRead).second);
+      assertNotNull(t.get(1));
       assertTrue(t.get(1).getClass() == Integer.class);
       assertEquals(t.get(1), basicInputData.get(numTuplesRead).first);
       numTuplesRead++;
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java b/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
index 31a52ba..5308e2c 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/Driver.java
@@ -615,14 +615,8 @@ private void doAuthorization(BaseSemanticAnalyzer sem)
             List<Integer> neededColumnIds = tableScanOp.getNeededColumnIDs();
             List<FieldSchema> columns = tbl.getCols();
             List<String> cols = new ArrayList<String>();
-            if (neededColumnIds != null && neededColumnIds.size() > 0) {
-              for (int i = 0; i < neededColumnIds.size(); i++) {
-                cols.add(columns.get(neededColumnIds.get(i)).getName());
-              }
-            } else {
-              for (int i = 0; i < columns.size(); i++) {
-                cols.add(columns.get(i).getName());
-              }
+            for (int i = 0; i < neededColumnIds.size(); i++) {
+              cols.add(columns.get(neededColumnIds.get(i)).getName());
             }
             //map may not contain all sources, since input list may have been optimized out
             //or non-existent tho such sources may still be referenced by the TableScanOperator
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java
index df2ccf1..343f760 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/FetchTask.java
@@ -27,7 +27,6 @@
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.CommandNeedRetryException;
-import org.apache.hadoop.hive.ql.Context;
 import org.apache.hadoop.hive.ql.DriverContext;
 import org.apache.hadoop.hive.ql.QueryPlan;
 import org.apache.hadoop.hive.ql.io.HiveInputFormat;
@@ -70,8 +69,11 @@ public void initialize(HiveConf conf, QueryPlan queryPlan, DriverContext ctx) {
       Operator<?> source = work.getSource();
       if (source instanceof TableScanOperator) {
         TableScanOperator ts = (TableScanOperator) source;
+        // push down projections
+        ColumnProjectionUtils.appendReadColumns(
+            job, ts.getNeededColumnIDs(), ts.getNeededColumns());
+        // push down filters
         HiveInputFormat.pushFilters(job, ts);
-        ColumnProjectionUtils.appendReadColumnIDs(job, ts.getNeededColumnIDs());
       }
       sink = work.getSink();
       fetch = new FetchOperator(work, job, source, getVirtualColumns(source));
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java
index ab0494e..cde1a59 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/SMBMapJoinOperator.java
@@ -33,6 +33,7 @@
 import org.apache.hadoop.hive.common.ObjectPair;
 import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.exec.persistence.RowContainer;
+import org.apache.hadoop.hive.ql.io.HiveInputFormat;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
 import org.apache.hadoop.hive.ql.plan.BucketMapJoinContext;
 import org.apache.hadoop.hive.ql.plan.FetchWork;
@@ -125,8 +126,8 @@ protected void initializeOp(Configuration hconf) throws HiveException {
 
     int bucketSize;
 
-    // For backwards compatibility reasons we honor the older 
-    // HIVEMAPJOINBUCKETCACHESIZE if set different from default. 
+    // For backwards compatibility reasons we honor the older
+    // HIVEMAPJOINBUCKETCACHESIZE if set different from default.
     // By hive 0.13 we should remove this code.
     int oldVar = HiveConf.getIntVar(hconf, HiveConf.ConfVars.HIVEMAPJOINBUCKETCACHESIZE);
     if (oldVar != 100) {
@@ -186,36 +187,31 @@ public void initializeMapredLocalWork(MapJoinDesc mjConf, Configuration hconf,
       String alias = entry.getKey();
       FetchWork fetchWork = entry.getValue();
 
-      Operator<? extends OperatorDesc> forwardOp = aliasToWork.get(alias);
-      forwardOp.setExecContext(getExecContext());
+      JobConf jobClone = new JobConf(hconf);
+
+      TableScanOperator ts = (TableScanOperator)aliasToWork.get(alias);
+      // push down projections
+      ColumnProjectionUtils.appendReadColumns(
+          jobClone, ts.getNeededColumnIDs(), ts.getNeededColumns());
+      // push down filters
+      HiveInputFormat.pushFilters(jobClone, ts);
+
+
+      ts.setExecContext(getExecContext());
 
-      JobConf jobClone = cloneJobConf(hconf, forwardOp);
       FetchOperator fetchOp = new FetchOperator(fetchWork, jobClone);
-      forwardOp.initialize(jobClone, new ObjectInspector[]{fetchOp.getOutputObjectInspector()});
+      ts.initialize(jobClone, new ObjectInspector[]{fetchOp.getOutputObjectInspector()});
       fetchOp.clearFetchContext();
 
       DummyStoreOperator sinkOp = aliasToSinkWork.get(alias);
 
-      MergeQueue mergeQueue = new MergeQueue(alias, fetchWork, jobClone, forwardOp, sinkOp);
+      MergeQueue mergeQueue = new MergeQueue(alias, fetchWork, jobClone, ts, sinkOp);
 
       aliasToMergeQueue.put(alias, mergeQueue);
       l4j.info("fetch operators for " + alias + " initialized");
     }
   }
 
-  private JobConf cloneJobConf(Configuration hconf, Operator<?> op) {
-    JobConf jobClone = new JobConf(hconf);
-    if (op instanceof TableScanOperator) {
-      List<Integer> list = ((TableScanOperator)op).getNeededColumnIDs();
-      if (list != null) {
-        ColumnProjectionUtils.appendReadColumnIDs(jobClone, list);
-      }
-    } else {
-      ColumnProjectionUtils.setFullyReadColumns(jobClone);
-    }
-    return jobClone;
-  }
-
   private byte tagForAlias(String alias) {
     for (byte tag = 0; tag < tagToAlias.length; tag++) {
       if (alias.equals(tagToAlias[tag])) {
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java
index ab2de9d..ba02130 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/TableScanOperator.java
@@ -18,7 +18,6 @@
 
 package org.apache.hadoop.hive.ql.exec;
 
-import java.io.IOException;
 import java.io.Serializable;
 import java.util.ArrayList;
 import java.util.HashMap;
@@ -31,6 +30,7 @@
 import org.apache.hadoop.hive.ql.ErrorMsg;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
 import org.apache.hadoop.hive.ql.metadata.VirtualColumn;
+import org.apache.hadoop.hive.ql.plan.OperatorDesc;
 import org.apache.hadoop.hive.ql.plan.TableDesc;
 import org.apache.hadoop.hive.ql.plan.TableScanDesc;
 import org.apache.hadoop.hive.ql.plan.api.OperatorType;
@@ -237,18 +237,22 @@ static public String getOperatorName() {
     return "TS";
   }
 
-  // this 'neededColumnIDs' field is included in this operator class instead of
+  // This 'neededColumnIDs' field is included in this operator class instead of
   // its desc class.The reason is that 1)tableScanDesc can not be instantiated,
   // and 2) it will fail some join and union queries if this is added forcibly
-  // into tableScanDesc
-  java.util.ArrayList<Integer> neededColumnIDs;
+  // into tableScanDesc.
+  // Both neededColumnIDs and neededColumns should never be null.
+  // When neededColumnIDs is an empty list,
+  // it means no needed column (e.g. we do not need any column to evaluate
+  // SELECT count(*) FROM t).
+  List<Integer> neededColumnIDs;
   List<String> neededColumns;
 
-  public void setNeededColumnIDs(java.util.ArrayList<Integer> orign_columns) {
+  public void setNeededColumnIDs(List<Integer> orign_columns) {
     neededColumnIDs = orign_columns;
   }
 
-  public java.util.ArrayList<Integer> getNeededColumnIDs() {
+  public List<Integer> getNeededColumnIDs() {
     return neededColumnIDs;
   }
 
@@ -324,4 +328,14 @@ public boolean supportSkewJoinOptimization() {
   public boolean supportAutomaticSortMergeJoin() {
     return true;
   }
+
+  @Override
+  public Operator<? extends OperatorDesc> clone()
+    throws CloneNotSupportedException {
+    TableScanOperator ts = (TableScanOperator) super.clone();
+    ts.setNeededColumnIDs(new ArrayList<Integer>(getNeededColumnIDs()));
+    ts.setNeededColumns(new ArrayList<String>(getNeededColumns()));
+    return ts;
+  }
+
 }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/mr/MapredLocalTask.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/mr/MapredLocalTask.java
index 0f29a0e..ac451d4 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/mr/MapredLocalTask.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/mr/MapredLocalTask.java
@@ -25,7 +25,6 @@
 import java.lang.management.ManagementFactory;
 import java.lang.management.MemoryMXBean;
 import java.text.SimpleDateFormat;
-import java.util.ArrayList;
 import java.util.Calendar;
 import java.util.Collection;
 import java.util.HashMap;
@@ -55,6 +54,7 @@
 import org.apache.hadoop.hive.ql.exec.Utilities.StreamPrinter;
 import org.apache.hadoop.hive.ql.exec.mapjoin.MapJoinMemoryExhaustionException;
 import org.apache.hadoop.hive.ql.exec.persistence.MapJoinTableContainerSerDe;
+import org.apache.hadoop.hive.ql.io.HiveInputFormat;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
 import org.apache.hadoop.hive.ql.plan.BucketMapJoinContext;
 import org.apache.hadoop.hive.ql.plan.FetchWork;
@@ -376,20 +376,12 @@ private void initializeOperators(Map<FetchOperator, JobConf> fetchOpJobConfMap)
     for (Map.Entry<String, FetchWork> entry : work.getAliasToFetchWork().entrySet()) {
       JobConf jobClone = new JobConf(job);
 
-      Operator<? extends OperatorDesc> tableScan =
-        work.getAliasToWork().get(entry.getKey());
-      boolean setColumnsNeeded = false;
-      if (tableScan instanceof TableScanOperator) {
-        ArrayList<Integer> list = ((TableScanOperator) tableScan).getNeededColumnIDs();
-        if (list != null) {
-          ColumnProjectionUtils.appendReadColumnIDs(jobClone, list);
-          setColumnsNeeded = true;
-        }
-      }
-
-      if (!setColumnsNeeded) {
-        ColumnProjectionUtils.setFullyReadColumns(jobClone);
-      }
+      TableScanOperator ts = (TableScanOperator)work.getAliasToWork().get(entry.getKey());
+      // push down projections
+      ColumnProjectionUtils.appendReadColumns(
+          jobClone, ts.getNeededColumnIDs(), ts.getNeededColumns());
+      // push down filters
+      HiveInputFormat.pushFilters(jobClone, ts);
 
       // create a fetch operator
       FetchOperator fetchOp = new FetchOperator(entry.getValue(), jobClone);
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/io/BucketizedHiveInputFormat.java b/src/ql/src/java/org/apache/hadoop/hive/ql/io/BucketizedHiveInputFormat.java
index 49145b7..8b99db1 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/io/BucketizedHiveInputFormat.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/io/BucketizedHiveInputFormat.java
@@ -66,16 +66,14 @@ public RecordReader getRecordReader(InputSplit split, JobConf job,
       throw new IOException("cannot find class " + inputFormatClassName);
     }
 
-    // clone a jobConf for setting needed columns for reading
-    JobConf cloneJobConf = new JobConf(job);
-    pushProjectionsAndFilters(cloneJobConf, inputFormatClass, hsplit.getPath()
+    pushProjectionsAndFilters(job, inputFormatClass, hsplit.getPath()
         .toString(), hsplit.getPath().toUri().getPath());
 
-    InputFormat inputFormat = getInputFormatFromCache(inputFormatClass,
-        cloneJobConf);
-    BucketizedHiveRecordReader<K, V> rr= new BucketizedHiveRecordReader(inputFormat, hsplit, cloneJobConf,
+    InputFormat inputFormat = getInputFormatFromCache(inputFormatClass, job);
+
+    BucketizedHiveRecordReader<K, V> rr= new BucketizedHiveRecordReader(inputFormat, hsplit, job,
         reporter);
-    rr.initIOContext(hsplit, cloneJobConf, inputFormatClass);
+    rr.initIOContext(hsplit, job, inputFormatClass);
     return rr;
   }
 
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/io/HiveInputFormat.java b/src/ql/src/java/org/apache/hadoop/hive/ql/io/HiveInputFormat.java
index cccdc1b..8751502 100755
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/io/HiveInputFormat.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/io/HiveInputFormat.java
@@ -217,9 +217,6 @@ public RecordReader getRecordReader(InputSplit split, JobConf job,
       throw new IOException("cannot find class " + inputFormatClassName, e);
     }
 
-    // clone a jobConf for setting needed columns for reading
-    JobConf cloneJobConf = new JobConf(job);
-
     if (this.mrwork == null) {
       init(job);
     }
@@ -227,22 +224,20 @@ public RecordReader getRecordReader(InputSplit split, JobConf job,
     boolean nonNative = false;
     PartitionDesc part = pathToPartitionInfo.get(hsplit.getPath().toString());
     if ((part != null) && (part.getTableDesc() != null)) {
-      Utilities.copyTableJobPropertiesToConf(part.getTableDesc(), cloneJobConf);
+      Utilities.copyTableJobPropertiesToConf(part.getTableDesc(), job);
       nonNative = part.getTableDesc().isNonNative();
     }
 
-    pushProjectionsAndFilters(cloneJobConf, inputFormatClass, hsplit.getPath()
+    pushProjectionsAndFilters(job, inputFormatClass, hsplit.getPath()
       .toString(), hsplit.getPath().toUri().getPath(), nonNative);
 
-    InputFormat inputFormat = getInputFormatFromCache(inputFormatClass,
-        cloneJobConf);
+    InputFormat inputFormat = getInputFormatFromCache(inputFormatClass, job);
     RecordReader innerReader = null;
     try {
-      innerReader = inputFormat.getRecordReader(inputSplit,
-        cloneJobConf, reporter);
+      innerReader = inputFormat.getRecordReader(inputSplit, job, reporter);
     } catch (Exception e) {
       innerReader = HiveIOExceptionHandlerUtil
-          .handleRecordReaderCreationException(e, cloneJobConf);
+          .handleRecordReaderCreationException(e, job);
     }
     HiveRecordReader<K,V> rr = new HiveRecordReader(innerReader, job);
     rr.initIOContext(hsplit, job, inputFormatClass, innerReader);
@@ -420,20 +415,13 @@ protected void pushProjectionsAndFilters(JobConf jobConf, Class inputFormatClass
     for (String alias : aliases) {
       Operator<? extends OperatorDesc> op = this.mrwork.getAliasToWork().get(
         alias);
-      if (op != null && op instanceof TableScanOperator) {
-        TableScanOperator tableScan = (TableScanOperator) op;
-
-        // push down projections
-        ArrayList<Integer> list = tableScan.getNeededColumnIDs();
-        if (list != null) {
-          ColumnProjectionUtils.appendReadColumnIDs(jobConf, list);
-        } else {
-          ColumnProjectionUtils.setFullyReadColumns(jobConf);
-        }
-        ColumnProjectionUtils.appendReadColumnNames(jobConf,
-            tableScan.getNeededColumns());
-
-        pushFilters(jobConf, tableScan);
+      if (op instanceof TableScanOperator) {
+        TableScanOperator ts = (TableScanOperator) op;
+        // push down projections.
+        ColumnProjectionUtils.appendReadColumns(
+            jobConf, ts.getNeededColumnIDs(), ts.getNeededColumns());
+        // push down filters
+        pushFilters(jobConf, ts);
       }
     }
   }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFile.java b/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFile.java
index a83f223..3bc7e43 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFile.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFile.java
@@ -27,6 +27,7 @@
 import java.rmi.server.UID;
 import java.security.MessageDigest;
 import java.util.Arrays;
+import java.util.List;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -1379,27 +1380,22 @@ public Reader(FileSystem fs, Path file, int bufferSize, Configuration conf,
       columnNumber = Integer.parseInt(metadata.get(
           new Text(COLUMN_NUMBER_METADATA_STR)).toString());
 
-      java.util.ArrayList<Integer> notSkipIDs = ColumnProjectionUtils
+      List<Integer> notSkipIDs = ColumnProjectionUtils
           .getReadColumnIDs(conf);
       boolean[] skippedColIDs = new boolean[columnNumber];
-      if (notSkipIDs.size() > 0) {
-        for (int i = 0; i < skippedColIDs.length; i++) {
-          skippedColIDs[i] = true;
-        }
+      if(ColumnProjectionUtils.isReadAllColumns(conf)) {
+        Arrays.fill(skippedColIDs, false);
+      } else if (notSkipIDs.size() > 0) {
+        Arrays.fill(skippedColIDs, true);
         for (int read : notSkipIDs) {
           if (read < columnNumber) {
             skippedColIDs[read] = false;
           }
         }
       } else {
-        // TODO: if no column name is specified e.g, in select count(1) from tt;
-        // skip all columns, this should be distinguished from the case:
-        // select * from tt;
-        for (int i = 0; i < skippedColIDs.length; i++) {
-          skippedColIDs[i] = false;
-        }
+        // select count(1)
+        Arrays.fill(skippedColIDs, true);
       }
-
       loadColumnNum = columnNumber;
       if (skippedColIDs.length > 0) {
         for (boolean skippedColID : skippedColIDs) {
@@ -1584,7 +1580,7 @@ public synchronized void sync(long position) throws IOException {
         byte[] buffer = new byte[prefix+n];
         n = (int)Math.min(n, end - in.getPos());
         /* fill array with a pattern that will never match sync */
-        Arrays.fill(buffer, (byte)(~sync[0])); 
+        Arrays.fill(buffer, (byte)(~sync[0]));
         while(n > 0 && (in.getPos() + n) <= end) {
           position = in.getPos();
           in.readFully(buffer, prefix, n);
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFileRecordReader.java b/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFileRecordReader.java
index 9521060..ea6337c 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFileRecordReader.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/io/RCFileRecordReader.java
@@ -19,14 +19,14 @@
 package org.apache.hadoop.hive.ql.io;
 
 import java.io.IOException;
-import java.util.Map;
-import java.util.ArrayList;
 import java.util.Collections;
+import java.util.Map;
 import java.util.WeakHashMap;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
+import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.io.RCFile.KeyBuffer;
 import org.apache.hadoop.hive.ql.io.RCFile.Reader;
 import org.apache.hadoop.hive.serde2.columnar.BytesRefArrayWritable;
@@ -35,8 +35,6 @@
 import org.apache.hadoop.mapred.RecordReader;
 import org.apache.hadoop.util.ReflectionUtils;
 
-import org.apache.hadoop.hive.conf.HiveConf;
-
 /**
  * RCFileRecordReader.
  *
@@ -71,7 +69,7 @@ public RCFileSyncCache() {
 
     public void put(FileSplit split, long endSync) {
       Path path = split.getPath();
-      long end = split.getStart() + split.getLength();       
+      long end = split.getStart() + split.getLength();
       String key = path.toString()+"+"+String.format("%d",end);
 
       RCFileSyncEntry entry = new RCFileSyncEntry();
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.java b/src/ql/src/java/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.java
index 8ed354a..3a188b0 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/io/orc/OrcInputFormat.java
@@ -18,7 +18,10 @@
 
 package org.apache.hadoop.hive.ql.io.orc;
 
-import com.google.common.collect.Lists;
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
@@ -42,10 +45,6 @@
 import org.apache.hadoop.mapred.RecordReader;
 import org.apache.hadoop.mapred.Reporter;
 
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-
 /**
  * A MapReduce/Hive input format for ORC files.
  */
@@ -95,7 +94,7 @@
       } else {
         LOG.info("No ORC pushdown predicate");
       }
-      this.reader = file.rows(offset, length,includeColumn, sarg, columnNames);
+      this.reader = file.rows(offset, length, includeColumn, sarg, columnNames);
       this.offset = offset;
       this.length = length;
     }
@@ -167,9 +166,7 @@ private static void includeColumnRecursive(List<OrcProto.Type> types,
    */
   private static boolean[] findIncludedColumns(List<OrcProto.Type> types,
                                                Configuration conf) {
-    String includedStr =
-        conf.get(ColumnProjectionUtils.READ_COLUMN_IDS_CONF_STR);
-    if (includedStr == null || includedStr.trim().length() == 0) {
+    if (ColumnProjectionUtils.isReadAllColumns(conf)) {
       return null;
     } else {
       int numColumns = types.size();
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcFactory.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcFactory.java
index ed14e82..52c47d4 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcFactory.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/ColumnPrunerProcFactory.java
@@ -301,7 +301,7 @@ public Object process(Node nd, Stack<Node> stack, NodeProcessorCtx ctx,
           .genColLists((Operator<? extends OperatorDesc>) nd);
       cppCtx.getPrunedColLists().put((Operator<? extends OperatorDesc>) nd,
           cols);
-      ArrayList<Integer> needed_columns = new ArrayList<Integer>();
+      List<Integer> neededColumnIds = new ArrayList<Integer>();
       List<String> neededColumnNames = new ArrayList<String>();
       RowResolver inputRR = cppCtx.getOpToParseCtxMap().get(scanOp).getRowResolver();
       TableScanDesc desc = scanOp.getConf();
@@ -332,15 +332,15 @@ public Object process(Node nd, Stack<Node> stack, NodeProcessorCtx ctx,
           continue;
         }
         int position = inputRR.getPosition(cols.get(i));
-        if (position >=0) {
+        if (position >= 0) {
           // get the needed columns by id and name
-          needed_columns.add(position);
+          neededColumnIds.add(position);
           neededColumnNames.add(cols.get(i));
         }
       }
 
       desc.setVirtualCols(newVirtualCols);
-      scanOp.setNeededColumnIDs(needed_columns);
+      scanOp.setNeededColumnIDs(neededColumnIds);
       scanOp.setNeededColumns(neededColumnNames);
       return null;
     }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRFileSink1.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRFileSink1.java
index 1ede6d7..686a380 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRFileSink1.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRFileSink1.java
@@ -64,7 +64,6 @@
 import org.apache.hadoop.hive.ql.plan.PartitionDesc;
 import org.apache.hadoop.hive.ql.plan.StatsWork;
 import org.apache.hadoop.hive.ql.plan.TableDesc;
-import org.apache.hadoop.hive.ql.plan.TableScanDesc;
 import org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory;
 import org.apache.hadoop.mapred.InputFormat;
 
@@ -299,7 +298,7 @@ private void createMRWorkForMergingFiles (FileSinkOperator fsInput, GenMRProcCon
     // Create a TableScan operator
     RowSchema inputRS = fsInput.getSchema();
     Operator<? extends OperatorDesc> tsMerge =
-        OperatorFactory.get(TableScanDesc.class, inputRS);
+        GenMapRedUtils.createTemporaryTableScanOperator(inputRS);
 
     // Create a FileSink operator
     TableDesc ts = (TableDesc) fsInputDesc.getTableInfo().clone();
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRUnion1.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRUnion1.java
index 52e9e6b..c580818 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRUnion1.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMRUnion1.java
@@ -19,15 +19,12 @@
 package org.apache.hadoop.hive.ql.optimizer;
 
 import java.io.Serializable;
-import java.util.ArrayList;
-import java.util.List;
 import java.util.Map;
 import java.util.Stack;
 
-import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.Context;
 import org.apache.hadoop.hive.ql.exec.Operator;
-import org.apache.hadoop.hive.ql.exec.OperatorFactory;
+import org.apache.hadoop.hive.ql.exec.TableScanOperator;
 import org.apache.hadoop.hive.ql.exec.Task;
 import org.apache.hadoop.hive.ql.exec.TaskFactory;
 import org.apache.hadoop.hive.ql.exec.UnionOperator;
@@ -41,12 +38,10 @@
 import org.apache.hadoop.hive.ql.optimizer.unionproc.UnionProcFactory;
 import org.apache.hadoop.hive.ql.parse.ParseContext;
 import org.apache.hadoop.hive.ql.parse.SemanticException;
-import org.apache.hadoop.hive.ql.plan.FileSinkDesc;
 import org.apache.hadoop.hive.ql.plan.MapredWork;
 import org.apache.hadoop.hive.ql.plan.OperatorDesc;
 import org.apache.hadoop.hive.ql.plan.PlanUtils;
 import org.apache.hadoop.hive.ql.plan.TableDesc;
-import org.apache.hadoop.hive.ql.plan.TableScanDesc;
 
 /**
  * Processor for the rule - TableScan followed by Union.
@@ -131,33 +126,15 @@ private void processSubQueryUnionCreateIntermediate(
     Context baseCtx = parseCtx.getContext();
     String taskTmpDir = baseCtx.getMRTmpFileURI();
 
-    // Create a file sink operator for this file name
-    Operator<? extends OperatorDesc> fs_op = OperatorFactory.get(
-        new FileSinkDesc(taskTmpDir, tt_desc, parseCtx.getConf().getBoolVar(
-            HiveConf.ConfVars.COMPRESSINTERMEDIATE)), parent.getSchema());
-
-    assert parent.getChildOperators().size() == 1;
-    parent.getChildOperators().set(0, fs_op);
-
-    List<Operator<? extends OperatorDesc>> parentOpList =
-        new ArrayList<Operator<? extends OperatorDesc>>();
-    parentOpList.add(parent);
-    fs_op.setParentOperators(parentOpList);
-
-    // Create a dummy table scan operator
-    Operator<? extends OperatorDesc> ts_op = OperatorFactory.get(
-        new TableScanDesc(), parent.getSchema());
-    List<Operator<? extends OperatorDesc>> childOpList =
-        new ArrayList<Operator<? extends OperatorDesc>>();
-    childOpList.add(child);
-    ts_op.setChildOperators(childOpList);
-    child.replaceParent(parent, ts_op);
+    // Create the temporary file, its corresponding FileSinkOperaotr, and
+    // its corresponding TableScanOperator.
+    TableScanOperator tableScanOp =
+        GenMapRedUtils.createTemporaryFile(parent, child, taskTmpDir, tt_desc, parseCtx);
 
     // Add the path to alias mapping
-
     uCtxTask.addTaskTmpDir(taskTmpDir);
     uCtxTask.addTTDesc(tt_desc);
-    uCtxTask.addListTopOperators(ts_op);
+    uCtxTask.addListTopOperators(tableScanOp);
 
     // The union task is empty. The files created for all the inputs are
     // assembled in the union context and later used to initialize the union
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
index 2259977..9cd8c9c 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/GenMapRedUtils.java
@@ -34,12 +34,14 @@
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.Context;
+import org.apache.hadoop.hive.ql.exec.ColumnInfo;
 import org.apache.hadoop.hive.ql.exec.ConditionalTask;
 import org.apache.hadoop.hive.ql.exec.DemuxOperator;
 import org.apache.hadoop.hive.ql.exec.JoinOperator;
 import org.apache.hadoop.hive.ql.exec.Operator;
 import org.apache.hadoop.hive.ql.exec.OperatorFactory;
 import org.apache.hadoop.hive.ql.exec.ReduceSinkOperator;
+import org.apache.hadoop.hive.ql.exec.RowSchema;
 import org.apache.hadoop.hive.ql.exec.TableScanOperator;
 import org.apache.hadoop.hive.ql.exec.Task;
 import org.apache.hadoop.hive.ql.exec.TaskFactory;
@@ -864,6 +866,70 @@ public static MapredWork getMapRedWorkFromConf(HiveConf conf) {
     return op;
   }
 
+  public static TableScanOperator createTemporaryTableScanOperator(RowSchema rowSchema) {
+    TableScanOperator tableScanOp =
+        (TableScanOperator) OperatorFactory.get(new TableScanDesc(), rowSchema);
+    // Set needed columns for this dummy TableScanOperator
+    List<Integer> neededColumnIds = new ArrayList<Integer>();
+    List<String> neededColumnNames = new ArrayList<String>();
+    List<ColumnInfo> parentColumnInfos = rowSchema.getSignature();
+    for (int i = 0 ; i < parentColumnInfos.size(); i++) {
+      neededColumnIds.add(i);
+      neededColumnNames.add(parentColumnInfos.get(i).getInternalName());
+    }
+    tableScanOp.setNeededColumnIDs(neededColumnIds);
+    tableScanOp.setNeededColumns(neededColumnNames);
+    return tableScanOp;
+  }
+
+  /**
+   * Break the pipeline between parent and child, and then
+   * output data generated by parent to a temporary file stored in taskTmpDir.
+   * A FileSinkOperator is added after parent to output the data.
+   * Before child, we add a TableScanOperator to load data stored in the temporary
+   * file back.
+   * @param parent
+   * @param child
+   * @param taskTmpDir
+   * @param tt_desc
+   * @param parseCtx
+   * @return The TableScanOperator inserted before child.
+   */
+  protected static TableScanOperator createTemporaryFile(
+      Operator<? extends OperatorDesc> parent, Operator<? extends OperatorDesc> child,
+      String taskTmpDir, TableDesc tt_desc, ParseContext parseCtx) {
+
+    // Create a FileSinkOperator for the file name of taskTmpDir
+    boolean compressIntermediate =
+        parseCtx.getConf().getBoolVar(HiveConf.ConfVars.COMPRESSINTERMEDIATE);
+    FileSinkDesc desc = new FileSinkDesc(taskTmpDir, tt_desc, compressIntermediate);
+    if (compressIntermediate) {
+      desc.setCompressCodec(parseCtx.getConf().getVar(
+          HiveConf.ConfVars.COMPRESSINTERMEDIATECODEC));
+      desc.setCompressType(parseCtx.getConf().getVar(
+          HiveConf.ConfVars.COMPRESSINTERMEDIATETYPE));
+    }
+    Operator<? extends OperatorDesc> fileSinkOp = putOpInsertMap(OperatorFactory
+        .get(desc, parent.getSchema()), null, parseCtx);
+
+    // Connect parent to fileSinkOp
+    parent.replaceChild(child, fileSinkOp);
+    fileSinkOp.setParentOperators(Utilities.makeList(parent));
+
+    // Create a dummy TableScanOperator for the file generated through fileSinkOp
+    RowResolver parentRowResolver =
+        parseCtx.getOpParseCtx().get(parent).getRowResolver();
+    TableScanOperator tableScanOp = (TableScanOperator) putOpInsertMap(
+        createTemporaryTableScanOperator(parent.getSchema()),
+        parentRowResolver, parseCtx);
+
+    // Connect this TableScanOperator to child.
+    tableScanOp.setChildOperators(Utilities.makeList(child));
+    child.replaceParent(parent, tableScanOp);
+
+    return tableScanOp;
+  }
+
   @SuppressWarnings("nls")
   /**
    * Split two tasks by creating a temporary file between them.
@@ -891,7 +957,7 @@ private static void splitTasks(ReduceSinkOperator op,
       rootTasks.remove(childTask);
     }
 
-    // generate the temporary file
+    // Generate the temporary file name
     Context baseCtx = parseCtx.getContext();
     String taskTmpDir = baseCtx.getMRTmpFileURI();
 
@@ -899,55 +965,18 @@ private static void splitTasks(ReduceSinkOperator op,
     TableDesc tt_desc = PlanUtils.getIntermediateFileTableDesc(PlanUtils
         .getFieldSchemasFromRowSchema(parent.getSchema(), "temporarycol"));
 
-    // Create a file sink operator for this file name
-    boolean compressIntermediate = parseCtx.getConf().getBoolVar(
-        HiveConf.ConfVars.COMPRESSINTERMEDIATE);
-    FileSinkDesc desc = new FileSinkDesc(taskTmpDir, tt_desc,
-        compressIntermediate);
-    if (compressIntermediate) {
-      desc.setCompressCodec(parseCtx.getConf().getVar(
-          HiveConf.ConfVars.COMPRESSINTERMEDIATECODEC));
-      desc.setCompressType(parseCtx.getConf().getVar(
-          HiveConf.ConfVars.COMPRESSINTERMEDIATETYPE));
-    }
-    Operator<? extends OperatorDesc> fs_op = putOpInsertMap(OperatorFactory
-        .get(desc, parent.getSchema()), null, parseCtx);
-
-    // replace the reduce child with this operator
-    List<Operator<? extends OperatorDesc>> childOpList = parent
-        .getChildOperators();
-    for (int pos = 0; pos < childOpList.size(); pos++) {
-      if (childOpList.get(pos) == op) {
-        childOpList.set(pos, fs_op);
-        break;
-      }
-    }
-
-    List<Operator<? extends OperatorDesc>> parentOpList =
-        new ArrayList<Operator<? extends OperatorDesc>>();
-    parentOpList.add(parent);
-    fs_op.setParentOperators(parentOpList);
-
-    // create a dummy tableScan operator on top of op
-    // TableScanOperator is implicitly created here for each MapOperator
-    RowResolver rowResolver = opProcCtx.getParseCtx().getOpParseCtx().get(parent).getRowResolver();
-    Operator<? extends OperatorDesc> ts_op = putOpInsertMap(OperatorFactory
-        .get(TableScanDesc.class, parent.getSchema()), rowResolver, parseCtx);
-
-    childOpList = new ArrayList<Operator<? extends OperatorDesc>>();
-    childOpList.add(op);
-    ts_op.setChildOperators(childOpList);
-    op.getParentOperators().set(0, ts_op);
+    // Create the temporary file, its corresponding FileSinkOperaotr, and
+    // its corresponding TableScanOperator.
+    TableScanOperator tableScanOp =
+        createTemporaryFile(parent, op, taskTmpDir, tt_desc, parseCtx);
 
     Map<Operator<? extends OperatorDesc>, GenMapRedCtx> mapCurrCtx =
         opProcCtx.getMapCurrCtx();
-    mapCurrCtx.put(ts_op, new GenMapRedCtx(childTask, null));
+    mapCurrCtx.put(tableScanOp, new GenMapRedCtx(childTask, null));
 
     String streamDesc = taskTmpDir;
     MapredWork cplan = (MapredWork) childTask.getWork();
 
-    Operator<? extends OperatorDesc> reducer = op.getChildOperators().get(0);
-
     if (needsTagging(cplan.getReduceWork())) {
       String origStreamDesc;
       streamDesc = "$INTNAME";
@@ -963,7 +992,7 @@ private static void splitTasks(ReduceSinkOperator op,
     }
 
     // Add the path to alias mapping
-    setTaskPlan(taskTmpDir, streamDesc, ts_op, cplan.getMapWork(), false, tt_desc);
+    setTaskPlan(taskTmpDir, streamDesc, tableScanOp, cplan.getMapWork(), false, tt_desc);
     opProcCtx.setCurrTopOp(null);
     opProcCtx.setCurrAliasId(null);
     opProcCtx.setCurrTask(childTask);
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/Optimizer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/Optimizer.java
index b97d869..3a76bfc 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/Optimizer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/Optimizer.java
@@ -61,9 +61,7 @@ public void initialize(HiveConf hiveConf) {
         transformations.add(new ListBucketingPruner());
       }
     }
-    if (HiveConf.getBoolVar(hiveConf, HiveConf.ConfVars.HIVEOPTCP)) {
-      transformations.add(new ColumnPruner());
-    }
+    transformations.add(new ColumnPruner());
     if (HiveConf.getBoolVar(hiveConf, HiveConf.ConfVars.HIVE_OPTIMIZE_SKEWJOIN_COMPILETIME)) {
       transformations.add(new SkewJoinOptimizer());
     }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java
index 48587ba..167aefb 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/GenMRSkewJoinProcessor.java
@@ -27,6 +27,7 @@
 
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.hive.conf.HiveConf;
+import org.apache.hadoop.hive.ql.exec.ColumnInfo;
 import org.apache.hadoop.hive.ql.exec.ConditionalTask;
 import org.apache.hadoop.hive.ql.exec.JoinOperator;
 import org.apache.hadoop.hive.ql.exec.MapJoinOperator;
@@ -38,6 +39,7 @@
 import org.apache.hadoop.hive.ql.exec.TaskFactory;
 import org.apache.hadoop.hive.ql.exec.Utilities;
 import org.apache.hadoop.hive.ql.io.HiveInputFormat;
+import org.apache.hadoop.hive.ql.optimizer.GenMapRedUtils;
 import org.apache.hadoop.hive.ql.parse.ParseContext;
 import org.apache.hadoop.hive.ql.parse.SemanticException;
 import org.apache.hadoop.hive.ql.plan.ConditionalResolverSkewJoin;
@@ -54,7 +56,6 @@
 import org.apache.hadoop.hive.ql.plan.PartitionDesc;
 import org.apache.hadoop.hive.ql.plan.PlanUtils;
 import org.apache.hadoop.hive.ql.plan.TableDesc;
-import org.apache.hadoop.hive.ql.plan.TableScanDesc;
 import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;
 import org.apache.hadoop.hive.serde2.typeinfo.TypeInfoFactory;
 
@@ -157,6 +158,7 @@ public static void processSkewJoin(JoinOperator joinOp,
         .getProperties());
 
     Map<Byte, TableDesc> tableDescList = new HashMap<Byte, TableDesc>();
+    Map<Byte, RowSchema> rowSchemaList = new HashMap<Byte, RowSchema>();
     Map<Byte, List<ExprNodeDesc>> newJoinValues = new HashMap<Byte, List<ExprNodeDesc>>();
     Map<Byte, List<ExprNodeDesc>> newJoinKeys = new HashMap<Byte, List<ExprNodeDesc>>();
     // used for create mapJoinDesc, should be in order
@@ -174,13 +176,17 @@ public static void processSkewJoin(JoinOperator joinOp,
       int columnSize = valueCols.size();
       List<ExprNodeDesc> newValueExpr = new ArrayList<ExprNodeDesc>();
       List<ExprNodeDesc> newKeyExpr = new ArrayList<ExprNodeDesc>();
+      ArrayList<ColumnInfo> columnInfos = new ArrayList<ColumnInfo>();
 
       boolean first = true;
       for (int k = 0; k < columnSize; k++) {
         TypeInfo type = valueCols.get(k).getTypeInfo();
         String newColName = i + "_VALUE_" + k; // any name, it does not matter.
-        newValueExpr
-            .add(new ExprNodeColumnDesc(type, newColName, "" + i, false));
+        ColumnInfo columnInfo = new ColumnInfo(newColName, type, alias.toString(), false);
+        columnInfos.add(columnInfo);
+        newValueExpr.add(new ExprNodeColumnDesc(
+            columnInfo.getType(), columnInfo.getInternalName(),
+            columnInfo.getTabAlias(), false));
         if (!first) {
           colNames = colNames + ",";
           colTypes = colTypes + ",";
@@ -199,14 +205,18 @@ public static void processSkewJoin(JoinOperator joinOp,
         first = false;
         colNames = colNames + joinKeys.get(k);
         colTypes = colTypes + joinKeyTypes.get(k);
-        newKeyExpr.add(new ExprNodeColumnDesc(TypeInfoFactory
-            .getPrimitiveTypeInfo(joinKeyTypes.get(k)), joinKeys.get(k),
-            "" + i, false));
+        ColumnInfo columnInfo = new ColumnInfo(joinKeys.get(k), TypeInfoFactory
+            .getPrimitiveTypeInfo(joinKeyTypes.get(k)), alias.toString(), false);
+        columnInfos.add(columnInfo);
+        newKeyExpr.add(new ExprNodeColumnDesc(
+            columnInfo.getType(), columnInfo.getInternalName(),
+            columnInfo.getTabAlias(), false));
       }
 
       newJoinValues.put(alias, newValueExpr);
       newJoinKeys.put(alias, newKeyExpr);
       tableDescList.put(alias, Utilities.getTableDesc(colNames, colTypes));
+      rowSchemaList.put(alias, new RowSchema(columnInfos));
 
       // construct value table Desc
       String valueColNames = "";
@@ -243,8 +253,8 @@ public static void processSkewJoin(JoinOperator joinOp,
 
       Operator<? extends OperatorDesc>[] parentOps = new TableScanOperator[tags.length];
       for (int k = 0; k < tags.length; k++) {
-        Operator<? extends OperatorDesc> ts = OperatorFactory.get(
-            TableScanDesc.class, (RowSchema) null);
+        Operator<? extends OperatorDesc> ts =
+            GenMapRedUtils.createTemporaryTableScanOperator(rowSchemaList.get((byte)k));
         ((TableScanOperator)ts).setTableDesc(tableDescList.get((byte)k));
         parentOps[k] = ts;
       }
@@ -256,13 +266,9 @@ public static void processSkewJoin(JoinOperator joinOp,
       String bigKeyDirPath = bigKeysDirMap.get(src);
       newPlan.getPathToAliases().put(bigKeyDirPath, aliases);
 
-
-
-
       newPlan.getAliasToWork().put(alias, tblScan_op);
       PartitionDesc part = new PartitionDesc(tableDescList.get(src), null);
 
-
       newPlan.getPathToPartitionInfo().put(bigKeyDirPath, part);
       newPlan.getAliasToPartnInfo().put(alias, part);
 
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/MetadataOnlyOptimizer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/MetadataOnlyOptimizer.java
index 0550bf6..bdc039a 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/MetadataOnlyOptimizer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/optimizer/physical/MetadataOnlyOptimizer.java
@@ -53,6 +53,7 @@
 import org.apache.hadoop.hive.ql.plan.MapredWork;
 import org.apache.hadoop.hive.ql.plan.OperatorDesc;
 import org.apache.hadoop.hive.ql.plan.PartitionDesc;
+import org.apache.hadoop.hive.ql.plan.TableScanDesc;
 import org.apache.hadoop.hive.serde2.NullStructSerDe;
 
 /**
@@ -128,12 +129,15 @@ public TableScanProcessor() {
     public Object process(Node nd, Stack<Node> stack, NodeProcessorCtx procCtx,
         Object... nodeOutputs) throws SemanticException {
       TableScanOperator node = (TableScanOperator) nd;
+      TableScanOperator tsOp = (TableScanOperator) nd;
       WalkerCtx walkerCtx = (WalkerCtx) procCtx;
-      if (((node.getNeededColumnIDs() == null) || (node.getNeededColumnIDs().size() == 0))
-          && ((node.getConf() == null) ||
-              (node.getConf().getVirtualCols() == null) ||
-              (node.getConf().getVirtualCols().isEmpty()))) {
-        walkerCtx.setMayBeMetadataOnly(node);
+      List<Integer> colIDs = tsOp.getNeededColumnIDs();
+      TableScanDesc desc = tsOp.getConf();
+      boolean noColNeeded = (colIDs == null) || (colIDs.isEmpty());
+      boolean noVCneeded = (desc == null) || (desc.getVirtualCols() == null)
+                             || (desc.getVirtualCols().isEmpty());
+      if (noColNeeded && noVCneeded) {
+        walkerCtx.setMayBeMetadataOnly(tsOp);
       }
       return nd;
     }
diff --git a/src/ql/src/test/org/apache/hadoop/hive/ql/io/PerformTestRCFileAndSeqFile.java b/src/ql/src/test/org/apache/hadoop/hive/ql/io/PerformTestRCFileAndSeqFile.java
index fb9fca1..9f2a6a1 100644
--- a/src/ql/src/test/org/apache/hadoop/hive/ql/io/PerformTestRCFileAndSeqFile.java
+++ b/src/ql/src/test/org/apache/hadoop/hive/ql/io/PerformTestRCFileAndSeqFile.java
@@ -17,6 +17,8 @@
  */
 package org.apache.hadoop.hive.ql.io;
 
+import static org.junit.Assert.assertEquals;
+
 import java.io.IOException;
 import java.util.Random;
 
@@ -32,7 +34,6 @@
 import org.apache.hadoop.io.SequenceFile.CompressionType;
 import org.apache.hadoop.io.compress.CompressionCodec;
 import org.apache.hadoop.io.compress.DefaultCodec;
-import static org.junit.Assert.*;
 
 /**
  * PerformTestRCFileAndSeqFile.
@@ -300,7 +301,7 @@ public int performRCFileReadFirstColumnTest(FileSystem fs, Path file,
 
     java.util.ArrayList<Integer> readCols = new java.util.ArrayList<Integer>();
     readCols.add(Integer.valueOf(0));
-    ColumnProjectionUtils.setReadColumnIDs(conf, readCols);
+    ColumnProjectionUtils.appendReadColumns(conf, readCols);
     RCFile.Reader reader = new RCFile.Reader(fs, file, conf);
 
     LongWritable rowID = new LongWritable();
@@ -335,7 +336,7 @@ public int performRCFileReadFirstAndLastColumnTest(FileSystem fs, Path file,
     java.util.ArrayList<Integer> readCols = new java.util.ArrayList<Integer>();
     readCols.add(Integer.valueOf(0));
     readCols.add(Integer.valueOf(allColumnsNumber - 1));
-    ColumnProjectionUtils.setReadColumnIDs(conf, readCols);
+    ColumnProjectionUtils.appendReadColumns(conf, readCols);
     RCFile.Reader reader = new RCFile.Reader(fs, file, conf);
 
     LongWritable rowID = new LongWritable();
@@ -370,7 +371,7 @@ public int performRCFileFullyReadColumnTest(FileSystem fs, Path file,
 
     int actualReadCount = 0;
 
-    ColumnProjectionUtils.setFullyReadColumns(conf);
+    ColumnProjectionUtils.setReadAllColumns(conf);
     RCFile.Reader reader = new RCFile.Reader(fs, file, conf);
 
     LongWritable rowID = new LongWritable();
diff --git a/src/ql/src/test/org/apache/hadoop/hive/ql/io/TestRCFile.java b/src/ql/src/test/org/apache/hadoop/hive/ql/io/TestRCFile.java
index dd1276d..a10842a 100644
--- a/src/ql/src/test/org/apache/hadoop/hive/ql/io/TestRCFile.java
+++ b/src/ql/src/test/org/apache/hadoop/hive/ql/io/TestRCFile.java
@@ -18,6 +18,14 @@
 
 package org.apache.hadoop.hive.ql.io;
 
+import static org.junit.Assert.assertArrayEquals;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertNotNull;
+import static org.junit.Assert.assertSame;
+import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.fail;
+
 import java.io.DataInputStream;
 import java.io.IOException;
 import java.io.InputStream;
@@ -28,8 +36,6 @@
 import java.util.Properties;
 import java.util.Random;
 
-import static org.junit.Assert.*;
-
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
@@ -58,11 +64,11 @@
 import org.apache.hadoop.io.Writable;
 import org.apache.hadoop.io.compress.CompressionCodec;
 import org.apache.hadoop.io.compress.DefaultCodec;
+import org.apache.hadoop.mapred.FileSplit;
 import org.apache.hadoop.mapred.InputSplit;
 import org.apache.hadoop.mapred.JobConf;
 import org.apache.hadoop.mapred.RecordReader;
 import org.apache.hadoop.mapred.Reporter;
-import org.apache.hadoop.mapred.FileSplit;
 import org.junit.After;
 import org.junit.Before;
 import org.junit.Test;
@@ -83,20 +89,21 @@
 
   // Data
 
-  private Writable[] expectedFieldsData = {
+  private final Writable[] expectedFieldsData = {
       new ByteWritable((byte) 123), new ShortWritable((short) 456),
       new IntWritable(789), new LongWritable(1000), new DoubleWritable(5.3),
       new Text("hive and hadoop"), null, null};
 
-  private Object[] expectedPartitalFieldsData = {null, null,
+  private final Object[] expectedPartitalFieldsData = {null, null,
       new IntWritable(789), new LongWritable(1000), null, null, null, null};
-  private BytesRefArrayWritable patialS = new BytesRefArrayWritable();
+  private final BytesRefArrayWritable patialS = new BytesRefArrayWritable();
   private byte[][] bytesArray;
   private BytesRefArrayWritable s;
 
   @Before
   public void setup() throws Exception {
     conf = new Configuration();
+    ColumnProjectionUtils.setReadAllColumns(conf);
     fs = FileSystem.getLocal(conf);
     dir = new Path(System.getProperty("test.data.dir", ".") + "/mapred");
     file = new Path(dir, "test_rcfile");
@@ -511,7 +518,7 @@ public void fullyReadTest(FileSystem fs, int count, Path file)
       throws IOException, SerDeException {
     LOG.debug("reading " + count + " records");
     long start = System.currentTimeMillis();
-    ColumnProjectionUtils.setFullyReadColumns(conf);
+    ColumnProjectionUtils.setReadAllColumns(conf);
     RCFile.Reader reader = new RCFile.Reader(fs, file, conf);
 
     LongWritable rowID = new LongWritable();
@@ -556,7 +563,7 @@ private void partialReadTest(FileSystem fs, int count, Path file)
     java.util.ArrayList<Integer> readCols = new java.util.ArrayList<Integer>();
     readCols.add(Integer.valueOf(2));
     readCols.add(Integer.valueOf(3));
-    ColumnProjectionUtils.setReadColumnIDs(conf, readCols);
+    ColumnProjectionUtils.appendReadColumns(conf, readCols);
     RCFile.Reader reader = new RCFile.Reader(fs, file, conf);
 
     LongWritable rowID = new LongWritable();
diff --git a/src/ql/src/test/org/apache/hadoop/hive/ql/io/orc/TestInputOutputFormat.java b/src/ql/src/test/org/apache/hadoop/hive/ql/io/orc/TestInputOutputFormat.java
index 785f0b1..67be06c 100644
--- a/src/ql/src/test/org/apache/hadoop/hive/ql/io/orc/TestInputOutputFormat.java
+++ b/src/ql/src/test/org/apache/hadoop/hive/ql/io/orc/TestInputOutputFormat.java
@@ -17,6 +17,20 @@
  */
 package org.apache.hadoop.hive.ql.io.orc;
 
+import static org.junit.Assert.assertArrayEquals;
+import static org.junit.Assert.assertEquals;
+
+import java.io.DataInput;
+import java.io.DataOutput;
+import java.io.IOException;
+import java.net.URI;
+import java.net.URISyntaxException;
+import java.nio.charset.Charset;
+import java.util.ArrayList;
+import java.util.Collections;
+import java.util.List;
+import java.util.Properties;
+
 import org.apache.hadoop.fs.FileStatus;
 import org.apache.hadoop.fs.FileSystem;
 import org.apache.hadoop.fs.Path;
@@ -24,6 +38,7 @@
 import org.apache.hadoop.hive.ql.exec.FileSinkOperator;
 import org.apache.hadoop.hive.ql.io.HiveOutputFormat;
 import org.apache.hadoop.hive.ql.io.InputFormatChecker;
+import org.apache.hadoop.hive.serde2.ColumnProjectionUtils;
 import org.apache.hadoop.hive.serde2.SerDe;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspectorFactory;
@@ -45,15 +60,6 @@
 import org.junit.Test;
 import org.junit.rules.TestName;
 
-import java.io.DataInput;
-import java.io.DataOutput;
-import java.io.IOException;
-import java.util.ArrayList;
-import java.util.List;
-import java.util.Properties;
-
-import static org.junit.Assert.assertEquals;
-
 public class TestInputOutputFormat {
 
   Path workDir = new Path(System.getProperty("test.tmp.dir","target/test/tmp"));
@@ -156,7 +162,7 @@ public void testInOutFormat() throws Exception {
     reader.close();
 
     // read just the first column
-    conf.set("hive.io.file.readcolumn.ids", "0");
+    ColumnProjectionUtils.appendReadColumns(conf, Collections.singletonList(0));
     reader = in.getRecordReader(splits[0], conf, Reporter.NULL);
     key = reader.createKey();
     value = (Writable) reader.createValue();
@@ -171,7 +177,7 @@ public void testInOutFormat() throws Exception {
     reader.close();
 
     // test the mapping of empty string to all columns
-    conf.set("hive.io.file.readcolumn.ids", "");
+    ColumnProjectionUtils.setReadAllColumns(conf);
     reader = in.getRecordReader(splits[0], conf, Reporter.NULL);
     key = reader.createKey();
     value = (Writable) reader.createValue();
@@ -237,7 +243,7 @@ public void testMROutput() throws Exception {
     FileInputFormat.setInputPaths(conf, testFilePath.toString());
     InputSplit[] splits = in.getSplits(conf, 1);
     assertEquals(1, splits.length);
-    conf.set("hive.io.file.readcolumn.ids", "1");
+    ColumnProjectionUtils.appendReadColumns(conf, Collections.singletonList(1));
     org.apache.hadoop.mapred.RecordReader reader =
         in.getRecordReader(splits[0], conf, Reporter.NULL);
     Object key = reader.createKey();
diff --git a/src/ql/src/test/queries/clientpositive/binary_table_colserde.q b/src/ql/src/test/queries/clientpositive/binary_table_colserde.q
index eadf07d..1f5c98a 100644
--- a/src/ql/src/test/queries/clientpositive/binary_table_colserde.q
+++ b/src/ql/src/test/queries/clientpositive/binary_table_colserde.q
@@ -3,6 +3,7 @@ drop table ba_test;
 -- Everything in ba_table1.q + columnar serde in RCFILE.
 
 create table ba_test (ba_key binary, ba_val binary) stored as rcfile;
+alter table ba_test set serde 'org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe';
 
 describe extended ba_test;
 
diff --git a/src/ql/src/test/results/clientpositive/auto_join0.q.out b/src/ql/src/test/results/clientpositive/auto_join0.q.out
index a75c01c..6425aee 100644
--- a/src/ql/src/test/results/clientpositive/auto_join0.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join0.q.out
@@ -154,6 +154,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/auto_join15.q.out b/src/ql/src/test/results/clientpositive/auto_join15.q.out
index 6fb0ea6..ba95400 100644
--- a/src/ql/src/test/results/clientpositive/auto_join15.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join15.q.out
@@ -126,6 +126,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/auto_join18.q.out b/src/ql/src/test/results/clientpositive/auto_join18.q.out
index 945af67..934843a 100644
--- a/src/ql/src/test/results/clientpositive/auto_join18.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join18.q.out
@@ -101,6 +101,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -116,6 +117,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -167,6 +169,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/auto_join18_multi_distinct.q.out b/src/ql/src/test/results/clientpositive/auto_join18_multi_distinct.q.out
index 500df42..0f9e41b 100644
--- a/src/ql/src/test/results/clientpositive/auto_join18_multi_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join18_multi_distinct.q.out
@@ -109,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -126,6 +127,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -179,6 +181,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/auto_join20.q.out b/src/ql/src/test/results/clientpositive/auto_join20.q.out
index 6dd8ff7..67a1f42 100644
--- a/src/ql/src/test/results/clientpositive/auto_join20.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join20.q.out
@@ -184,6 +184,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -213,7 +214,6 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
-
 PREHOOK: query: select sum(hash(a.k1,a.v1,a.k2,a.v2,a.k3,a.v3))
 from (
 SELECT src1.key as k1, src1.value as v1, src2.key as k2, src2.value as v2 , src3.key as k3, src3.value as v3 
@@ -419,6 +419,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -448,7 +449,6 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
-
 PREHOOK: query: select sum(hash(a.k1,a.v1,a.k2,a.v2,a.k3,a.v3))
 from (
 SELECT src1.key as k1, src1.value as v1, src2.key as k2, src2.value as v2 , src3.key as k3, src3.value as v3  
diff --git a/src/ql/src/test/results/clientpositive/auto_join27.q.out b/src/ql/src/test/results/clientpositive/auto_join27.q.out
index aac778c..8b9e20b 100644
--- a/src/ql/src/test/results/clientpositive/auto_join27.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join27.q.out
@@ -201,6 +201,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/auto_join30.q.out b/src/ql/src/test/results/clientpositive/auto_join30.q.out
index b5b313c..b86fc35 100644
--- a/src/ql/src/test/results/clientpositive/auto_join30.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join30.q.out
@@ -74,6 +74,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -88,6 +89,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -126,6 +128,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -159,6 +162,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -173,6 +177,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -211,6 +216,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -221,6 +227,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -395,6 +402,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -409,6 +417,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Left Outer Join0 to 1
@@ -447,6 +456,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -476,6 +486,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -486,6 +497,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -660,6 +672,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -674,6 +687,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Right Outer Join0 to 1
@@ -712,6 +726,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -741,6 +756,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -751,6 +767,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -939,6 +956,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -951,6 +969,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 0
         $INTNAME2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -967,6 +986,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1008,6 +1028,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1044,6 +1065,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1056,6 +1078,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 1
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1072,6 +1095,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME2 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1120,6 +1144,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1132,6 +1157,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 2
         $INTNAME2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1148,6 +1174,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1189,6 +1216,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1199,6 +1227,7 @@ STAGE PLANS:
                     type: string
               tag: 2
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1209,6 +1238,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME2 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1436,6 +1466,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1448,6 +1479,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 0
         $INTNAME2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1464,6 +1496,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1505,6 +1538,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1541,6 +1575,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1553,6 +1588,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 1
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1569,6 +1605,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME2 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1610,6 +1647,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1620,6 +1658,7 @@ STAGE PLANS:
                     type: string
               tag: 2
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1630,6 +1669,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME2 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1855,6 +1895,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1867,6 +1908,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 0
         $INTNAME2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1883,6 +1925,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Left Outer Join0 to 1
@@ -1924,6 +1967,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1953,6 +1997,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1963,6 +2008,7 @@ STAGE PLANS:
                     type: string
               tag: 2
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1973,6 +2019,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME2 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2198,6 +2245,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -2210,6 +2258,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 2
         $INTNAME2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -2226,6 +2275,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Left Outer Join0 to 1
@@ -2267,6 +2317,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2296,6 +2347,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2306,6 +2358,7 @@ STAGE PLANS:
                     type: string
               tag: 2
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2316,6 +2369,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME2 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2541,6 +2595,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -2553,6 +2608,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 2
         $INTNAME2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -2569,6 +2625,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Right Outer Join0 to 1
@@ -2610,6 +2667,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2639,6 +2697,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2649,6 +2708,7 @@ STAGE PLANS:
                     type: string
               tag: 2
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2659,6 +2719,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME2 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/auto_join31.q.out b/src/ql/src/test/results/clientpositive/auto_join31.q.out
index ee8204f..64e005c 100644
--- a/src/ql/src/test/results/clientpositive/auto_join31.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join31.q.out
@@ -84,6 +84,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -96,6 +97,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 1
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -112,6 +114,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME2 
+          TableScan
             Map Join Operator
               condition map:
                    Right Outer Join0 to 1
@@ -153,6 +156,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -189,6 +193,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -201,6 +206,7 @@ STAGE PLANS:
                 2 [Column[_col0]]
               Position of Big Table: 2
         $INTNAME2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -217,6 +223,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Right Outer Join0 to 1
@@ -258,6 +265,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -268,6 +276,7 @@ STAGE PLANS:
                     type: string
               tag: 2
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -278,6 +287,7 @@ STAGE PLANS:
                     type: string
               tag: 0
         $INTNAME2 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/auto_join_reordering_values.q.out b/src/ql/src/test/results/clientpositive/auto_join_reordering_values.q.out
index 53ce112..22a32a0 100644
--- a/src/ql/src/test/results/clientpositive/auto_join_reordering_values.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_join_reordering_values.q.out
@@ -221,6 +221,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -347,6 +349,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col10
@@ -470,6 +474,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col18
diff --git a/src/ql/src/test/results/clientpositive/auto_smb_mapjoin_14.q.out b/src/ql/src/test/results/clientpositive/auto_smb_mapjoin_14.q.out
index 2bc99fa..28f57c4 100644
--- a/src/ql/src/test/results/clientpositive/auto_smb_mapjoin_14.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_smb_mapjoin_14.q.out
@@ -238,6 +238,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -424,6 +425,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -439,6 +441,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -480,6 +483,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1255,6 +1259,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1834,6 +1839,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1847,6 +1853,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1888,6 +1895,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1901,6 +1909,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2216,6 +2225,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2229,6 +2239,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/auto_sortmerge_join_10.q.out b/src/ql/src/test/results/clientpositive/auto_sortmerge_join_10.q.out
index 0cd7734..857382f 100644
--- a/src/ql/src/test/results/clientpositive/auto_sortmerge_join_10.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_sortmerge_join_10.q.out
@@ -201,6 +201,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -385,6 +386,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
diff --git a/src/ql/src/test/results/clientpositive/auto_sortmerge_join_6.q.out b/src/ql/src/test/results/clientpositive/auto_sortmerge_join_6.q.out
index 1274b76..f8ec003 100644
--- a/src/ql/src/test/results/clientpositive/auto_sortmerge_join_6.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_sortmerge_join_6.q.out
@@ -170,6 +170,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -313,6 +314,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -456,6 +458,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -619,6 +622,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1071,6 +1075,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1210,6 +1215,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1373,6 +1379,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2114,6 +2121,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/auto_sortmerge_join_9.q.out b/src/ql/src/test/results/clientpositive/auto_sortmerge_join_9.q.out
index 96fcd2b..8c5287a 100644
--- a/src/ql/src/test/results/clientpositive/auto_sortmerge_join_9.q.out
+++ b/src/ql/src/test/results/clientpositive/auto_sortmerge_join_9.q.out
@@ -236,6 +236,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -398,6 +399,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -596,6 +598,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1}
@@ -610,6 +613,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -644,6 +648,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -678,6 +683,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1}
@@ -692,6 +698,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -726,6 +733,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -741,6 +749,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2437,6 +2446,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2787,6 +2797,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -3178,6 +3189,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1}
@@ -3192,6 +3204,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -3226,6 +3239,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3260,6 +3274,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1}
@@ -3274,6 +3289,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -3308,6 +3324,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3323,6 +3340,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/binary_output_format.q.out b/src/ql/src/test/results/clientpositive/binary_output_format.q.out
index ad245f2..30ea3dd 100644
--- a/src/ql/src/test/results/clientpositive/binary_output_format.q.out
+++ b/src/ql/src/test/results/clientpositive/binary_output_format.q.out
@@ -201,6 +201,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -269,6 +271,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/binary_table_colserde.q.out b/src/ql/src/test/results/clientpositive/binary_table_colserde.q.out
index 69a6c6e..aa8be39 100644
--- a/src/ql/src/test/results/clientpositive/binary_table_colserde.q.out
+++ b/src/ql/src/test/results/clientpositive/binary_table_colserde.q.out
@@ -11,12 +11,20 @@ POSTHOOK: query: -- Everything in ba_table1.q + columnar serde in RCFILE.
 create table ba_test (ba_key binary, ba_val binary) stored as rcfile
 POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@ba_test
+PREHOOK: query: alter table ba_test set serde 'org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe'
+PREHOOK: type: ALTERTABLE_SERIALIZER
+PREHOOK: Input: default@ba_test
+PREHOOK: Output: default@ba_test
+POSTHOOK: query: alter table ba_test set serde 'org.apache.hadoop.hive.serde2.columnar.ColumnarSerDe'
+POSTHOOK: type: ALTERTABLE_SERIALIZER
+POSTHOOK: Input: default@ba_test
+POSTHOOK: Output: default@ba_test
 PREHOOK: query: describe extended ba_test
 PREHOOK: type: DESCTABLE
 POSTHOOK: query: describe extended ba_test
 POSTHOOK: type: DESCTABLE
-ba_key              	binary              	None                
-ba_val              	binary              	None                
+ba_key              	binary              	from deserializer   
+ba_val              	binary              	from deserializer   
 	 	 
 #### A masked pattern was here ####
 PREHOOK: query: from src insert overwrite table ba_test select cast (src.key as binary), cast (src.value as binary)
diff --git a/src/ql/src/test/results/clientpositive/bucket5.q.out b/src/ql/src/test/results/clientpositive/bucket5.q.out
index 41e4a3e..d5aca60 100644
--- a/src/ql/src/test/results/clientpositive/bucket5.q.out
+++ b/src/ql/src/test/results/clientpositive/bucket5.q.out
@@ -207,6 +207,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -316,6 +318,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -381,6 +385,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat.q.out b/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat.q.out
index e4beebc..8a1f10a 100644
--- a/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketizedhiveinputformat.q.out
@@ -98,6 +98,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -153,6 +154,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
index 122d061..78a97a8 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin1.q.out
@@ -563,6 +563,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -628,6 +630,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1063,6 +1067,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1143,6 +1149,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
index 955b8a2..842617b 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin2.q.out
@@ -309,6 +309,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -374,6 +376,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -859,6 +863,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -939,6 +945,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1643,6 +1651,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1723,6 +1733,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
index e0b86ae..20dfe93 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin3.q.out
@@ -326,6 +326,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -391,6 +393,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -876,6 +880,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -956,6 +962,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin4.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin4.q.out
index bed6a0a..c759927 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin4.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin4.q.out
@@ -277,6 +277,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -342,6 +344,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -766,6 +770,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -846,6 +852,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
index 21a47c0..c92a0ab 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin5.q.out
@@ -366,6 +366,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -431,6 +433,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -918,6 +922,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -998,6 +1004,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin_negative.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin_negative.q.out
index 2feec49..03ebcd4 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin_negative.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin_negative.q.out
@@ -281,6 +281,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -346,6 +348,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/bucketmapjoin_negative2.q.out b/src/ql/src/test/results/clientpositive/bucketmapjoin_negative2.q.out
index e524220..acc8ae0 100644
--- a/src/ql/src/test/results/clientpositive/bucketmapjoin_negative2.q.out
+++ b/src/ql/src/test/results/clientpositive/bucketmapjoin_negative2.q.out
@@ -341,6 +341,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -406,6 +408,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/case_sensitivity.q.out b/src/ql/src/test/results/clientpositive/case_sensitivity.q.out
index 40fc7e2..3a04b71 100644
--- a/src/ql/src/test/results/clientpositive/case_sensitivity.q.out
+++ b/src/ql/src/test/results/clientpositive/case_sensitivity.q.out
@@ -77,6 +77,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -90,6 +91,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/cast1.q.out b/src/ql/src/test/results/clientpositive/cast1.q.out
index 2bc2803..07eab50 100644
--- a/src/ql/src/test/results/clientpositive/cast1.q.out
+++ b/src/ql/src/test/results/clientpositive/cast1.q.out
@@ -85,6 +85,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -98,6 +99,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/cluster.q.out b/src/ql/src/test/results/clientpositive/cluster.q.out
index e139b60..127703c 100644
--- a/src/ql/src/test/results/clientpositive/cluster.q.out
+++ b/src/ql/src/test/results/clientpositive/cluster.q.out
@@ -636,6 +636,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -766,6 +767,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -898,6 +900,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1026,6 +1029,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/column_access_stats.q.out b/src/ql/src/test/results/clientpositive/column_access_stats.q.out
index 991c492..79831dd 100644
--- a/src/ql/src/test/results/clientpositive/column_access_stats.q.out
+++ b/src/ql/src/test/results/clientpositive/column_access_stats.q.out
@@ -515,6 +515,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -685,6 +686,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -825,6 +827,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -964,6 +967,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1022,6 +1026,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer1.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer1.q.out
index 2b8a149..dff2724 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer1.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer1.q.out
@@ -94,6 +94,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -141,6 +142,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -294,6 +296,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -477,6 +480,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -633,6 +637,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -680,6 +685,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -845,6 +851,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -989,6 +996,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1036,6 +1044,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1189,6 +1198,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1333,6 +1343,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1380,6 +1391,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1518,6 +1530,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1565,6 +1578,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1709,6 +1723,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1756,6 +1771,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1909,6 +1925,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2053,6 +2070,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2100,6 +2118,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2238,6 +2257,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2285,6 +2305,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2431,6 +2452,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2478,6 +2500,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2616,6 +2639,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2663,6 +2687,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2809,6 +2834,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2865,6 +2891,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -3014,6 +3041,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3070,6 +3098,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -3223,6 +3252,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3270,6 +3300,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -3416,6 +3447,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3463,6 +3495,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer10.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer10.q.out
index 5886d4c..b000d9b 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer10.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer10.q.out
@@ -101,6 +101,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -141,6 +142,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -206,6 +208,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -424,6 +427,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -600,6 +604,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -653,6 +658,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -861,6 +867,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1027,6 +1034,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1080,6 +1088,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1300,6 +1309,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer11.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer11.q.out
index 72439f8..0d48aaf 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer11.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer11.q.out
@@ -134,6 +134,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -428,6 +429,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer12.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer12.q.out
index 22dfce9..7e55fd0 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer12.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer12.q.out
@@ -67,6 +67,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -82,6 +83,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer13.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer13.q.out
index 5eed255..af557f0 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer13.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer13.q.out
@@ -134,6 +134,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -155,6 +156,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -210,6 +212,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer14.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer14.q.out
index 99263aa..698b705 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer14.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer14.q.out
@@ -79,6 +79,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -94,6 +95,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -238,6 +240,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -253,6 +256,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -400,6 +404,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -415,6 +420,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -818,6 +824,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -833,6 +840,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -982,6 +990,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -997,6 +1006,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1144,6 +1154,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1159,6 +1170,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1582,6 +1594,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1597,6 +1610,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer15.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer15.q.out
index 76318b5..eed6b75 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer15.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer15.q.out
@@ -93,6 +93,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -133,6 +134,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -191,6 +193,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -430,6 +433,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer2.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer2.q.out
index 6b97a78..175edf5 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer2.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer2.q.out
@@ -97,6 +97,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -112,6 +113,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -166,6 +168,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -485,6 +488,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -638,6 +642,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -653,6 +658,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -707,6 +713,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1026,6 +1033,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1179,6 +1187,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1194,6 +1203,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1248,6 +1258,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1567,6 +1578,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1720,6 +1732,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1735,6 +1748,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1789,6 +1803,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2108,6 +2123,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2260,6 +2276,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2270,6 +2287,7 @@ STAGE PLANS:
                     type: string
               tag: 1
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2316,6 +2334,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2363,6 +2382,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2665,6 +2685,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2712,6 +2733,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2863,6 +2885,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2878,6 +2901,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2932,6 +2956,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -3245,6 +3270,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer3.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer3.q.out
index a6691ae..994ca26 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer3.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer3.q.out
@@ -102,6 +102,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -142,6 +143,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -157,6 +159,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -206,6 +209,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -518,6 +522,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -805,6 +810,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -949,6 +955,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -962,6 +969,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1013,6 +1021,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1112,6 +1121,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1370,6 +1380,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1657,6 +1668,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer4.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer4.q.out
index 3605619..d316ea9 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer4.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer4.q.out
@@ -139,6 +139,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -186,6 +187,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -355,6 +357,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -556,6 +559,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -714,6 +718,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -761,6 +766,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -930,6 +936,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1090,6 +1097,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1137,6 +1145,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1295,6 +1304,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1342,6 +1352,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1511,6 +1522,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1671,6 +1683,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1718,6 +1731,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1876,6 +1890,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1923,6 +1938,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -2077,6 +2093,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2124,6 +2141,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer5.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer5.q.out
index 17692f5..925e155 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer5.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer5.q.out
@@ -150,6 +150,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -163,6 +164,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -612,6 +614,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -626,6 +629,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -677,6 +681,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -691,6 +696,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -725,6 +731,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -738,6 +745,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer6.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer6.q.out
index d8e1f29..a9de81c 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer6.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer6.q.out
@@ -97,6 +97,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -137,6 +138,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -152,6 +154,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -197,6 +200,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -291,6 +295,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -568,6 +573,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -879,6 +885,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1039,6 +1046,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1097,6 +1105,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1302,6 +1311,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1461,6 +1471,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1501,6 +1512,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1559,6 +1571,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1776,6 +1789,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1935,6 +1949,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1975,6 +1990,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2033,6 +2049,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2272,6 +2289,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2457,6 +2475,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2497,6 +2516,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2569,6 +2589,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2838,6 +2859,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3025,6 +3047,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3065,6 +3088,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3137,6 +3161,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3396,6 +3421,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3583,6 +3609,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3596,6 +3623,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3649,6 +3677,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3694,6 +3723,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3760,6 +3790,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4222,6 +4253,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4429,6 +4461,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4477,6 +4510,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4494,6 +4528,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4541,6 +4576,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4639,6 +4675,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4812,6 +4849,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4860,6 +4898,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4996,6 +5035,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5224,6 +5264,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5362,6 +5403,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer7.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer7.q.out
index 7a17edf..318b1f9 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer7.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer7.q.out
@@ -139,6 +139,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -418,6 +419,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -641,6 +643,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -920,6 +923,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer8.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer8.q.out
index 2a60d81..476b14f 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer8.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer8.q.out
@@ -178,6 +178,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -530,6 +531,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -782,6 +784,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1164,6 +1167,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1428,6 +1432,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1709,6 +1714,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/correlationoptimizer9.q.out b/src/ql/src/test/results/clientpositive/correlationoptimizer9.q.out
index 4a8fea8..80ff857 100644
--- a/src/ql/src/test/results/clientpositive/correlationoptimizer9.q.out
+++ b/src/ql/src/test/results/clientpositive/correlationoptimizer9.q.out
@@ -112,6 +112,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -127,6 +128,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -172,6 +174,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -489,6 +492,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -662,6 +666,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -683,6 +688,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -738,6 +744,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1105,6 +1112,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/ctas_colname.q.out b/src/ql/src/test/results/clientpositive/ctas_colname.q.out
index 6c4ee22..c4ea1c4 100644
--- a/src/ql/src/test/results/clientpositive/ctas_colname.q.out
+++ b/src/ql/src/test/results/clientpositive/ctas_colname.q.out
@@ -369,6 +369,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/ctas_hadoop20.q.out b/src/ql/src/test/results/clientpositive/ctas_hadoop20.q.out
index 48bf035..97b3288 100644
--- a/src/ql/src/test/results/clientpositive/ctas_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/ctas_hadoop20.q.out
@@ -70,6 +70,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -229,6 +230,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -388,6 +390,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -615,6 +618,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -834,6 +838,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -918,7 +924,6 @@ STAGE PLANS:
     Stats-Aggr Operator
 #### A masked pattern was here ####
 
-
 PREHOOK: query: create table nzhang_ctas5 row format delimited fields terminated by ',' lines terminated by '\012' stored as textfile as select key, value from src sort by key, value limit 10
 PREHOOK: type: CREATETABLE_AS_SELECT
 PREHOOK: Input: default@src
diff --git a/src/ql/src/test/results/clientpositive/ctas_uses_database_location.q.out b/src/ql/src/test/results/clientpositive/ctas_uses_database_location.q.out
index fd7abc0..5b6f68a 100644
--- a/src/ql/src/test/results/clientpositive/ctas_uses_database_location.q.out
+++ b/src/ql/src/test/results/clientpositive/ctas_uses_database_location.q.out
@@ -89,6 +89,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -101,6 +102,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/decimal_udf.q.out b/src/ql/src/test/results/clientpositive/decimal_udf.q.out
index 2627b71..6a010bd 100644
--- a/src/ql/src/test/results/clientpositive/decimal_udf.q.out
+++ b/src/ql/src/test/results/clientpositive/decimal_udf.q.out
@@ -1563,6 +1563,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out b/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out
index 9560d20..11bbd4d 100644
--- a/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out
+++ b/src/ql/src/test/results/clientpositive/filter_join_breaktask.q.out
@@ -161,6 +161,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col6
diff --git a/src/ql/src/test/results/clientpositive/groupby1.q.out b/src/ql/src/test/results/clientpositive/groupby1.q.out
index 73171ba..062f668 100644
--- a/src/ql/src/test/results/clientpositive/groupby1.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby1.q.out
@@ -65,6 +65,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby10.q.out b/src/ql/src/test/results/clientpositive/groupby10.q.out
index 0d867e6..8a7670d 100644
--- a/src/ql/src/test/results/clientpositive/groupby10.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby10.q.out
@@ -99,6 +99,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -159,6 +160,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -390,6 +392,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -450,6 +453,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -707,6 +711,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -767,6 +772,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby11.q.out b/src/ql/src/test/results/clientpositive/groupby11.q.out
index f3f3dc3..fb4678f 100644
--- a/src/ql/src/test/results/clientpositive/groupby11.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby11.q.out
@@ -94,6 +94,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -156,6 +157,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby1_limit.q.out b/src/ql/src/test/results/clientpositive/groupby1_limit.q.out
index bc9ba73..d98cbd3 100644
--- a/src/ql/src/test/results/clientpositive/groupby1_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby1_limit.q.out
@@ -82,6 +82,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out
index c51758a..c0dfe35 100644
--- a/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out
@@ -74,6 +74,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby3.q.out b/src/ql/src/test/results/clientpositive/groupby3.q.out
index bcb96eb..cf4ef04 100644
--- a/src/ql/src/test/results/clientpositive/groupby3.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby3.q.out
@@ -85,6 +85,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/groupby3_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby3_map_skew.q.out
index 6e6aaf4..479bbed 100644
--- a/src/ql/src/test/results/clientpositive/groupby3_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby3_map_skew.q.out
@@ -121,6 +121,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/groupby4.q.out b/src/ql/src/test/results/clientpositive/groupby4.q.out
index 763ef08..3ff1ff4 100644
--- a/src/ql/src/test/results/clientpositive/groupby4.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby4.q.out
@@ -60,6 +60,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby5.q.out b/src/ql/src/test/results/clientpositive/groupby5.q.out
index 5758b6e..67c9922 100644
--- a/src/ql/src/test/results/clientpositive/groupby5.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby5.q.out
@@ -71,6 +71,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby6.q.out b/src/ql/src/test/results/clientpositive/groupby6.q.out
index c27030c..1806dfc 100644
--- a/src/ql/src/test/results/clientpositive/groupby6.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby6.q.out
@@ -60,6 +60,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby6_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby6_map_skew.q.out
index aae7430..3f37281 100644
--- a/src/ql/src/test/results/clientpositive/groupby6_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby6_map_skew.q.out
@@ -67,6 +67,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -111,6 +112,7 @@ STAGE PLANS:
   Stage: Stage-3
     Stats-Aggr Operator
 
+
 PREHOOK: query: FROM src
 INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(src.value,5,1)
 PREHOOK: type: QUERY
diff --git a/src/ql/src/test/results/clientpositive/groupby7_map.q.out b/src/ql/src/test/results/clientpositive/groupby7_map.q.out
index a12e3fe..a308c9b 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_map.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_map.q.out
@@ -129,6 +129,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out
index cce662c..f38d4ff 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out
@@ -109,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -164,6 +165,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -197,6 +199,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby7_noskew.q.out b/src/ql/src/test/results/clientpositive/groupby7_noskew.q.out
index 4c8f8de..2fe9fc6 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_noskew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_noskew.q.out
@@ -111,6 +111,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: key
diff --git a/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out b/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out
index 461f8d6..c630324 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out
@@ -109,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -153,6 +154,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/groupby8.q.out b/src/ql/src/test/results/clientpositive/groupby8.q.out
index aa5ead8..d7c0f1a 100644
--- a/src/ql/src/test/results/clientpositive/groupby8.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby8.q.out
@@ -86,6 +86,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -141,6 +142,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -935,6 +937,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -990,6 +993,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby8_map.q.out b/src/ql/src/test/results/clientpositive/groupby8_map.q.out
index 2edda9f..482e234 100644
--- a/src/ql/src/test/results/clientpositive/groupby8_map.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby8_map.q.out
@@ -86,6 +86,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -141,6 +142,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out
index 2edda9f..482e234 100644
--- a/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out
@@ -86,6 +86,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -141,6 +142,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out b/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out
index 2edda9f..482e234 100644
--- a/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out
@@ -86,6 +86,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -141,6 +142,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby9.q.out b/src/ql/src/test/results/clientpositive/groupby9.q.out
index 089b3c8..72b7398 100644
--- a/src/ql/src/test/results/clientpositive/groupby9.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby9.q.out
@@ -90,6 +90,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -145,6 +146,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -955,6 +957,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1010,6 +1013,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1840,6 +1844,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1895,6 +1900,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2786,6 +2792,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3656,6 +3663,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3711,6 +3719,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_complex_types.q.out b/src/ql/src/test/results/clientpositive/groupby_complex_types.q.out
index a83de15..ea380f7 100644
--- a/src/ql/src/test/results/clientpositive/groupby_complex_types.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_complex_types.q.out
@@ -159,6 +159,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -214,6 +215,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_complex_types_multi_single_reducer.q.out b/src/ql/src/test/results/clientpositive/groupby_complex_types_multi_single_reducer.q.out
index 9e2979a..38afa6b 100644
--- a/src/ql/src/test/results/clientpositive/groupby_complex_types_multi_single_reducer.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_complex_types_multi_single_reducer.q.out
@@ -115,6 +115,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -152,6 +153,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -193,6 +195,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/groupby_cube1.q.out b/src/ql/src/test/results/clientpositive/groupby_cube1.q.out
index 9bb7509..11a1b69 100644
--- a/src/ql/src/test/results/clientpositive/groupby_cube1.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_cube1.q.out
@@ -319,6 +319,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -630,6 +631,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -697,6 +699,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -738,6 +741,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_distinct_samekey.q.out b/src/ql/src/test/results/clientpositive/groupby_distinct_samekey.q.out
index aa4696c..9483177 100644
--- a/src/ql/src/test/results/clientpositive/groupby_distinct_samekey.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_distinct_samekey.q.out
@@ -99,6 +99,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_grouping_sets2.q.out b/src/ql/src/test/results/clientpositive/groupby_grouping_sets2.q.out
index 28c8272..e235439 100644
--- a/src/ql/src/test/results/clientpositive/groupby_grouping_sets2.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_grouping_sets2.q.out
@@ -91,6 +91,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -251,6 +252,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -436,6 +438,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_grouping_sets3.q.out b/src/ql/src/test/results/clientpositive/groupby_grouping_sets3.q.out
index 77e40cd..4970494 100644
--- a/src/ql/src/test/results/clientpositive/groupby_grouping_sets3.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_grouping_sets3.q.out
@@ -246,6 +246,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_grouping_sets4.q.out b/src/ql/src/test/results/clientpositive/groupby_grouping_sets4.q.out
index e625f53..ca8a476 100644
--- a/src/ql/src/test/results/clientpositive/groupby_grouping_sets4.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_grouping_sets4.q.out
@@ -124,6 +124,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -141,6 +142,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -192,6 +194,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -440,6 +443,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -494,6 +498,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -511,6 +516,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -562,6 +568,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -665,6 +672,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_grouping_sets5.q.out b/src/ql/src/test/results/clientpositive/groupby_grouping_sets5.q.out
index b35de8b..16546ce 100644
--- a/src/ql/src/test/results/clientpositive/groupby_grouping_sets5.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_grouping_sets5.q.out
@@ -115,6 +115,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -296,6 +297,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -337,6 +339,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_multi_insert_common_distinct.q.out b/src/ql/src/test/results/clientpositive/groupby_multi_insert_common_distinct.q.out
index fdf577d..5d843d4 100644
--- a/src/ql/src/test/results/clientpositive/groupby_multi_insert_common_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_multi_insert_common_distinct.q.out
@@ -88,6 +88,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -143,6 +144,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -382,6 +384,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_multi_single_reducer.q.out b/src/ql/src/test/results/clientpositive/groupby_multi_single_reducer.q.out
index 5e97258..c23392a 100644
--- a/src/ql/src/test/results/clientpositive/groupby_multi_single_reducer.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_multi_single_reducer.q.out
@@ -590,6 +590,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: substr(key, 1, 1)
@@ -686,6 +687,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/groupby_position.q.out b/src/ql/src/test/results/clientpositive/groupby_position.q.out
index 3f02f72..29362c6 100644
--- a/src/ql/src/test/results/clientpositive/groupby_position.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_position.q.out
@@ -149,6 +149,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -424,6 +425,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -669,6 +671,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -695,7 +698,6 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
-
 PREHOOK: query: SELECT t.key, t.value
 FROM (SELECT b.key as key, count(1) as value FROM src b WHERE b.key <= 20 GROUP BY 1) t
 ORDER BY 2 DESC, 1 ASC
@@ -863,6 +865,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -878,6 +881,7 @@ STAGE PLANS:
                     expr: _col1
                     type: string
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -923,6 +927,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_rollup1.q.out b/src/ql/src/test/results/clientpositive/groupby_rollup1.q.out
index bc8396c..5ae32da 100644
--- a/src/ql/src/test/results/clientpositive/groupby_rollup1.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_rollup1.q.out
@@ -313,6 +313,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -618,6 +619,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -685,6 +687,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -726,6 +729,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/groupby_sort_1.q.out b/src/ql/src/test/results/clientpositive/groupby_sort_1.q.out
index fd0bea1..23d1cb4 100644
--- a/src/ql/src/test/results/clientpositive/groupby_sort_1.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_sort_1.q.out
@@ -203,6 +203,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -268,6 +270,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -787,6 +791,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -867,6 +873,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1177,6 +1185,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1257,6 +1267,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1585,6 +1597,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1650,6 +1664,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2914,6 +2930,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2994,6 +3012,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3557,6 +3577,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3637,6 +3659,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4350,6 +4374,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5122,6 +5148,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -5202,6 +5230,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -5645,6 +5675,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -5710,6 +5742,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6123,6 +6157,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6203,6 +6239,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6651,6 +6689,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6731,6 +6771,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/groupby_sort_3.q.out b/src/ql/src/test/results/clientpositive/groupby_sort_3.q.out
index 7a6a809..700df0a 100644
--- a/src/ql/src/test/results/clientpositive/groupby_sort_3.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_sort_3.q.out
@@ -124,6 +124,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -137,6 +138,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -288,6 +290,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -301,6 +304,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/groupby_sort_5.q.out b/src/ql/src/test/results/clientpositive/groupby_sort_5.q.out
index 23cfec3..06afe99 100644
--- a/src/ql/src/test/results/clientpositive/groupby_sort_5.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_sort_5.q.out
@@ -128,6 +128,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -141,6 +142,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -347,6 +349,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -360,6 +363,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/groupby_sort_7.q.out b/src/ql/src/test/results/clientpositive/groupby_sort_7.q.out
index 1c061ae..489178c 100644
--- a/src/ql/src/test/results/clientpositive/groupby_sort_7.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_sort_7.q.out
@@ -131,6 +131,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -144,6 +145,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/groupby_sort_skew_1.q.out b/src/ql/src/test/results/clientpositive/groupby_sort_skew_1.q.out
index 08c64a3..6064325 100644
--- a/src/ql/src/test/results/clientpositive/groupby_sort_skew_1.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_sort_skew_1.q.out
@@ -203,6 +203,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -268,6 +270,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -523,6 +527,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -856,6 +862,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -936,6 +944,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1246,6 +1256,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1326,6 +1338,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1654,6 +1668,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1719,6 +1735,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2020,6 +2038,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2358,6 +2378,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2726,6 +2748,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3190,6 +3214,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3270,6 +3296,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3613,6 +3641,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3898,6 +3928,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3978,6 +4010,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4681,6 +4715,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4760,6 +4796,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5173,6 +5211,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5597,6 +5637,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -5677,6 +5719,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6120,6 +6164,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6185,6 +6231,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6598,6 +6646,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6678,6 +6728,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -7126,6 +7178,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -7206,6 +7260,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -7693,6 +7749,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -8142,6 +8199,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/index_auto.q.out b/src/ql/src/test/results/clientpositive/index_auto.q.out
index c517af7..7dd3fbd 100644
--- a/src/ql/src/test/results/clientpositive/index_auto.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto.q.out
@@ -257,6 +257,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -268,6 +269,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/index_auto_file_format.q.out b/src/ql/src/test/results/clientpositive/index_auto_file_format.q.out
index 2609111..42a2c61 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_file_format.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_file_format.q.out
@@ -124,6 +124,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -135,6 +136,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -275,6 +277,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -286,6 +289,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out b/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out
index 957fc82..65b6a7e 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_mult_tables.q.out
@@ -84,6 +84,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -108,6 +109,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
@@ -399,6 +401,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out b/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out
index 097a239..5424f91 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_mult_tables_compact.q.out
@@ -84,6 +84,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -108,6 +109,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: SELECT a.key, a.value FROM src a JOIN srcpart b ON (a.key = b.key) WHERE a.key > 80 AND a.key < 100 AND b.key > 70 AND b.key < 90 ORDER BY a.key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
@@ -376,6 +378,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -400,6 +403,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -411,6 +415,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -470,6 +475,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -481,6 +487,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/index_auto_multiple.q.out b/src/ql/src/test/results/clientpositive/index_auto_multiple.q.out
index 9b94583..851a73a 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_multiple.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_multiple.q.out
@@ -148,6 +148,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -159,6 +160,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out b/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out
index a9ba77f..d0d3f29 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_partitioned.q.out
@@ -138,6 +138,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -149,6 +150,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/index_auto_self_join.q.out b/src/ql/src/test/results/clientpositive/index_auto_self_join.q.out
index 9020c74..776fb60 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_self_join.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_self_join.q.out
@@ -83,6 +83,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -311,6 +312,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/index_auto_update.q.out b/src/ql/src/test/results/clientpositive/index_auto_update.q.out
index 91b667e..03f3600 100644
--- a/src/ql/src/test/results/clientpositive/index_auto_update.q.out
+++ b/src/ql/src/test/results/clientpositive/index_auto_update.q.out
@@ -208,6 +208,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -221,6 +222,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -357,6 +359,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -368,6 +371,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/index_bitmap3.q.out b/src/ql/src/test/results/clientpositive/index_bitmap3.q.out
index 335a27e..1e45d26 100644
--- a/src/ql/src/test/results/clientpositive/index_bitmap3.q.out
+++ b/src/ql/src/test/results/clientpositive/index_bitmap3.q.out
@@ -252,6 +252,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/index_bitmap_auto.q.out b/src/ql/src/test/results/clientpositive/index_bitmap_auto.q.out
index 0314344..0ea0a47 100644
--- a/src/ql/src/test/results/clientpositive/index_bitmap_auto.q.out
+++ b/src/ql/src/test/results/clientpositive/index_bitmap_auto.q.out
@@ -271,6 +271,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/index_compression.q.out b/src/ql/src/test/results/clientpositive/index_compression.q.out
index 6b0999f..41696ea 100644
--- a/src/ql/src/test/results/clientpositive/index_compression.q.out
+++ b/src/ql/src/test/results/clientpositive/index_compression.q.out
@@ -124,6 +124,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -135,6 +136,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/index_serde.q.out b/src/ql/src/test/results/clientpositive/index_serde.q.out
index 51b7d69..ee9f6e6 100644
--- a/src/ql/src/test/results/clientpositive/index_serde.q.out
+++ b/src/ql/src/test/results/clientpositive/index_serde.q.out
@@ -213,6 +213,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -224,6 +225,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/infer_bucket_sort_map_operators.q.out b/src/ql/src/test/results/clientpositive/infer_bucket_sort_map_operators.q.out
index cf4f32d..b569481 100644
--- a/src/ql/src/test/results/clientpositive/infer_bucket_sort_map_operators.q.out
+++ b/src/ql/src/test/results/clientpositive/infer_bucket_sort_map_operators.q.out
@@ -141,6 +141,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -154,6 +155,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -530,6 +532,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -543,6 +546,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/innerjoin.q.out b/src/ql/src/test/results/clientpositive/innerjoin.q.out
index cf8d952..b3a5d02 100644
--- a/src/ql/src/test/results/clientpositive/innerjoin.q.out
+++ b/src/ql/src/test/results/clientpositive/innerjoin.q.out
@@ -81,6 +81,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/input11.q.out b/src/ql/src/test/results/clientpositive/input11.q.out
index 2f77b85..d0e6c8c 100644
--- a/src/ql/src/test/results/clientpositive/input11.q.out
+++ b/src/ql/src/test/results/clientpositive/input11.q.out
@@ -77,6 +77,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -90,6 +91,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input12_hadoop20.q.out b/src/ql/src/test/results/clientpositive/input12_hadoop20.q.out
index 04e769e..bb3f575 100644
--- a/src/ql/src/test/results/clientpositive/input12_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/input12_hadoop20.q.out
@@ -145,6 +145,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -158,6 +159,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -199,6 +201,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -212,6 +215,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -256,6 +260,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -269,6 +274,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input13.q.out b/src/ql/src/test/results/clientpositive/input13.q.out
index eab1895..e595655 100644
--- a/src/ql/src/test/results/clientpositive/input13.q.out
+++ b/src/ql/src/test/results/clientpositive/input13.q.out
@@ -164,6 +164,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -177,6 +178,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -218,6 +220,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -231,6 +234,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -275,6 +279,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -288,6 +293,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -322,6 +328,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -333,6 +340,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input14_limit.q.out b/src/ql/src/test/results/clientpositive/input14_limit.q.out
index 9eb1bd7..da33b28 100644
--- a/src/ql/src/test/results/clientpositive/input14_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/input14_limit.q.out
@@ -77,6 +77,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/input1_limit.q.out b/src/ql/src/test/results/clientpositive/input1_limit.q.out
index 8927b19..0eba3d9 100644
--- a/src/ql/src/test/results/clientpositive/input1_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/input1_limit.q.out
@@ -110,6 +110,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/input34.q.out b/src/ql/src/test/results/clientpositive/input34.q.out
index 876b6ca..33d3dc0 100644
--- a/src/ql/src/test/results/clientpositive/input34.q.out
+++ b/src/ql/src/test/results/clientpositive/input34.q.out
@@ -95,6 +95,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -108,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input35.q.out b/src/ql/src/test/results/clientpositive/input35.q.out
index 9a0ea31..0902572 100644
--- a/src/ql/src/test/results/clientpositive/input35.q.out
+++ b/src/ql/src/test/results/clientpositive/input35.q.out
@@ -95,6 +95,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -108,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input36.q.out b/src/ql/src/test/results/clientpositive/input36.q.out
index a275ccb..c56370e 100644
--- a/src/ql/src/test/results/clientpositive/input36.q.out
+++ b/src/ql/src/test/results/clientpositive/input36.q.out
@@ -95,6 +95,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -108,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input38.q.out b/src/ql/src/test/results/clientpositive/input38.q.out
index 74d7ccd..af0dd88 100644
--- a/src/ql/src/test/results/clientpositive/input38.q.out
+++ b/src/ql/src/test/results/clientpositive/input38.q.out
@@ -97,6 +97,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -110,6 +111,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out b/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out
index d79aeac..60b1e99 100644
--- a/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out
+++ b/src/ql/src/test/results/clientpositive/input39_hadoop20.q.out
@@ -138,6 +138,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -167,7 +168,6 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
-
 PREHOOK: query: select count(1) from t1 join t2 on t1.key=t2.key where t1.ds='1' and t2.ds='1'
 PREHOOK: type: QUERY
 PREHOOK: Input: default@t1
diff --git a/src/ql/src/test/results/clientpositive/input3_limit.q.out b/src/ql/src/test/results/clientpositive/input3_limit.q.out
index 301e813..c6104f8 100644
--- a/src/ql/src/test/results/clientpositive/input3_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/input3_limit.q.out
@@ -86,6 +86,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/input4_limit.q.out b/src/ql/src/test/results/clientpositive/input4_limit.q.out
index 2492753..074a97f 100644
--- a/src/ql/src/test/results/clientpositive/input4_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/input4_limit.q.out
@@ -51,6 +51,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/input6.q.out b/src/ql/src/test/results/clientpositive/input6.q.out
index 832a849..808cc34 100644
--- a/src/ql/src/test/results/clientpositive/input6.q.out
+++ b/src/ql/src/test/results/clientpositive/input6.q.out
@@ -77,6 +77,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -90,6 +91,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input7.q.out b/src/ql/src/test/results/clientpositive/input7.q.out
index ae89e27..4d2bbba 100644
--- a/src/ql/src/test/results/clientpositive/input7.q.out
+++ b/src/ql/src/test/results/clientpositive/input7.q.out
@@ -73,6 +73,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -86,6 +87,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input8.q.out b/src/ql/src/test/results/clientpositive/input8.q.out
index 1b4ef58..7c036e1 100644
--- a/src/ql/src/test/results/clientpositive/input8.q.out
+++ b/src/ql/src/test/results/clientpositive/input8.q.out
@@ -75,6 +75,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -88,6 +89,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input9.q.out b/src/ql/src/test/results/clientpositive/input9.q.out
index fa55649..2ad5474 100644
--- a/src/ql/src/test/results/clientpositive/input9.q.out
+++ b/src/ql/src/test/results/clientpositive/input9.q.out
@@ -77,6 +77,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -90,6 +91,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input_dynamicserde.q.out b/src/ql/src/test/results/clientpositive/input_dynamicserde.q.out
index 40b1e3f..39c6349 100644
--- a/src/ql/src/test/results/clientpositive/input_dynamicserde.q.out
+++ b/src/ql/src/test/results/clientpositive/input_dynamicserde.q.out
@@ -91,6 +91,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -104,6 +105,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input_part1.q.out b/src/ql/src/test/results/clientpositive/input_part1.q.out
index 2dcbdf0..a8d7eff 100644
--- a/src/ql/src/test/results/clientpositive/input_part1.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part1.q.out
@@ -163,6 +163,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -228,6 +230,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input_part2.q.out b/src/ql/src/test/results/clientpositive/input_part2.q.out
index 9c0d994..ab3ce9a 100644
--- a/src/ql/src/test/results/clientpositive/input_part2.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part2.q.out
@@ -264,6 +264,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -329,6 +331,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -435,6 +439,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -500,6 +506,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input_part5.q.out b/src/ql/src/test/results/clientpositive/input_part5.q.out
index 4219b8b..83356aa 100644
--- a/src/ql/src/test/results/clientpositive/input_part5.q.out
+++ b/src/ql/src/test/results/clientpositive/input_part5.q.out
@@ -81,6 +81,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -94,6 +95,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -109,7 +111,6 @@ STAGE PLANS:
           hdfs directory: true
 #### A masked pattern was here ####
 
-
 PREHOOK: query: insert overwrite table tmptable
 SELECT x.* FROM SRCPART x WHERE x.ds = '2008-04-08' and x.key < 100
 PREHOOK: type: QUERY
diff --git a/src/ql/src/test/results/clientpositive/input_testsequencefile.q.out b/src/ql/src/test/results/clientpositive/input_testsequencefile.q.out
index da790fa..d9d7851 100644
--- a/src/ql/src/test/results/clientpositive/input_testsequencefile.q.out
+++ b/src/ql/src/test/results/clientpositive/input_testsequencefile.q.out
@@ -73,6 +73,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -86,6 +87,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input_testxpath.q.out b/src/ql/src/test/results/clientpositive/input_testxpath.q.out
index 8346fc6..e7485ff 100644
--- a/src/ql/src/test/results/clientpositive/input_testxpath.q.out
+++ b/src/ql/src/test/results/clientpositive/input_testxpath.q.out
@@ -75,6 +75,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -88,6 +89,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/input_testxpath2.q.out b/src/ql/src/test/results/clientpositive/input_testxpath2.q.out
index 56f6bba..aed73c9 100644
--- a/src/ql/src/test/results/clientpositive/input_testxpath2.q.out
+++ b/src/ql/src/test/results/clientpositive/input_testxpath2.q.out
@@ -79,6 +79,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -92,6 +93,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/insert1.q.out b/src/ql/src/test/results/clientpositive/insert1.q.out
index 0c57916..ceadff5 100644
--- a/src/ql/src/test/results/clientpositive/insert1.q.out
+++ b/src/ql/src/test/results/clientpositive/insert1.q.out
@@ -90,6 +90,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -103,6 +104,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -191,6 +193,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -204,6 +207,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -307,6 +311,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -320,6 +325,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -408,6 +414,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -421,6 +428,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -541,6 +549,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -554,6 +563,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -595,6 +605,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -608,6 +619,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/insert_into3.q.out b/src/ql/src/test/results/clientpositive/insert_into3.q.out
index 639e2a7..cc08975 100644
--- a/src/ql/src/test/results/clientpositive/insert_into3.q.out
+++ b/src/ql/src/test/results/clientpositive/insert_into3.q.out
@@ -106,6 +106,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -291,6 +292,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/insert_into4.q.out b/src/ql/src/test/results/clientpositive/insert_into4.q.out
index 0a0b270..0f43122 100644
--- a/src/ql/src/test/results/clientpositive/insert_into4.q.out
+++ b/src/ql/src/test/results/clientpositive/insert_into4.q.out
@@ -282,6 +282,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -295,6 +296,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/insert_into5.q.out b/src/ql/src/test/results/clientpositive/insert_into5.q.out
index 533e0d5..e5d8449 100644
--- a/src/ql/src/test/results/clientpositive/insert_into5.q.out
+++ b/src/ql/src/test/results/clientpositive/insert_into5.q.out
@@ -170,6 +170,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -183,6 +184,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -302,6 +304,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -315,6 +318,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -442,6 +446,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -455,6 +460,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/insert_into6.q.out b/src/ql/src/test/results/clientpositive/insert_into6.q.out
index db3fd2c..e258740 100644
--- a/src/ql/src/test/results/clientpositive/insert_into6.q.out
+++ b/src/ql/src/test/results/clientpositive/insert_into6.q.out
@@ -207,6 +207,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -220,6 +221,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join0.q.out b/src/ql/src/test/results/clientpositive/join0.q.out
index 6d5fc0b..a56b63c 100644
--- a/src/ql/src/test/results/clientpositive/join0.q.out
+++ b/src/ql/src/test/results/clientpositive/join0.q.out
@@ -101,6 +101,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join13.q.out b/src/ql/src/test/results/clientpositive/join13.q.out
index 49d9c9a..c450593 100644
--- a/src/ql/src/test/results/clientpositive/join13.q.out
+++ b/src/ql/src/test/results/clientpositive/join13.q.out
@@ -104,6 +104,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: (_col0 + _col2)
diff --git a/src/ql/src/test/results/clientpositive/join15.q.out b/src/ql/src/test/results/clientpositive/join15.q.out
index a6a0771..ca4cbdf 100644
--- a/src/ql/src/test/results/clientpositive/join15.q.out
+++ b/src/ql/src/test/results/clientpositive/join15.q.out
@@ -81,6 +81,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join18.q.out b/src/ql/src/test/results/clientpositive/join18.q.out
index dda4dd6..7536766 100644
--- a/src/ql/src/test/results/clientpositive/join18.q.out
+++ b/src/ql/src/test/results/clientpositive/join18.q.out
@@ -100,6 +100,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -115,6 +116,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out b/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out
index 8ff5b46..f416748 100644
--- a/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/join18_multi_distinct.q.out
@@ -109,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -126,6 +127,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -173,6 +175,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join19.q.out b/src/ql/src/test/results/clientpositive/join19.q.out
index fc4efde..4636dca 100644
--- a/src/ql/src/test/results/clientpositive/join19.q.out
+++ b/src/ql/src/test/results/clientpositive/join19.q.out
@@ -226,6 +226,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col3
@@ -311,6 +312,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col7
diff --git a/src/ql/src/test/results/clientpositive/join2.q.out b/src/ql/src/test/results/clientpositive/join2.q.out
index 21be94c..1fa75a6 100644
--- a/src/ql/src/test/results/clientpositive/join2.q.out
+++ b/src/ql/src/test/results/clientpositive/join2.q.out
@@ -74,6 +74,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: (_col0 + _col4)
diff --git a/src/ql/src/test/results/clientpositive/join20.q.out b/src/ql/src/test/results/clientpositive/join20.q.out
index c267d68..a513f71 100644
--- a/src/ql/src/test/results/clientpositive/join20.q.out
+++ b/src/ql/src/test/results/clientpositive/join20.q.out
@@ -118,6 +118,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -839,6 +840,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join21.q.out b/src/ql/src/test/results/clientpositive/join21.q.out
index 329aef6..885c2c7 100644
--- a/src/ql/src/test/results/clientpositive/join21.q.out
+++ b/src/ql/src/test/results/clientpositive/join21.q.out
@@ -112,6 +112,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join22.q.out b/src/ql/src/test/results/clientpositive/join22.q.out
index c205cd3..930e92d 100644
--- a/src/ql/src/test/results/clientpositive/join22.q.out
+++ b/src/ql/src/test/results/clientpositive/join22.q.out
@@ -72,6 +72,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col2
diff --git a/src/ql/src/test/results/clientpositive/join23.q.out b/src/ql/src/test/results/clientpositive/join23.q.out
index cdee6a7..db8dc69 100644
--- a/src/ql/src/test/results/clientpositive/join23.q.out
+++ b/src/ql/src/test/results/clientpositive/join23.q.out
@@ -77,6 +77,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join25.q.out b/src/ql/src/test/results/clientpositive/join25.q.out
index 44aebbe..d67c0ed 100644
--- a/src/ql/src/test/results/clientpositive/join25.q.out
+++ b/src/ql/src/test/results/clientpositive/join25.q.out
@@ -112,6 +112,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -125,6 +126,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join26.q.out b/src/ql/src/test/results/clientpositive/join26.q.out
index 4c4977a..f4e60f2 100644
--- a/src/ql/src/test/results/clientpositive/join26.q.out
+++ b/src/ql/src/test/results/clientpositive/join26.q.out
@@ -219,6 +219,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -284,6 +286,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join27.q.out b/src/ql/src/test/results/clientpositive/join27.q.out
index 04ddbb6..75dcf8a 100644
--- a/src/ql/src/test/results/clientpositive/join27.q.out
+++ b/src/ql/src/test/results/clientpositive/join27.q.out
@@ -112,6 +112,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -125,6 +126,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join29.q.out b/src/ql/src/test/results/clientpositive/join29.q.out
index 6f08274..797577d 100644
--- a/src/ql/src/test/results/clientpositive/join29.q.out
+++ b/src/ql/src/test/results/clientpositive/join29.q.out
@@ -102,6 +102,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1}
@@ -116,6 +117,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -169,6 +171,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1}
@@ -183,6 +186,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -219,6 +223,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -232,6 +237,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join31.q.out b/src/ql/src/test/results/clientpositive/join31.q.out
index ac3abca..f432eca 100644
--- a/src/ql/src/test/results/clientpositive/join31.q.out
+++ b/src/ql/src/test/results/clientpositive/join31.q.out
@@ -103,6 +103,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -117,6 +118,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -156,6 +158,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -215,6 +218,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -229,6 +233,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -268,6 +273,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -278,6 +284,7 @@ STAGE PLANS:
                     type: string
               tag: 1
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join32_lessSize.q.out b/src/ql/src/test/results/clientpositive/join32_lessSize.q.out
index fee0212..fe331ff 100644
--- a/src/ql/src/test/results/clientpositive/join32_lessSize.q.out
+++ b/src/ql/src/test/results/clientpositive/join32_lessSize.q.out
@@ -254,6 +254,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -745,6 +747,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -948,6 +952,8 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             HashTable Sink Operator
               condition expressions:
                 0 {_col4}
@@ -1154,6 +1160,8 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             HashTable Sink Operator
               condition expressions:
                 0 {_col4}
@@ -1353,6 +1361,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col4
@@ -1934,6 +1944,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -2075,7 +2087,6 @@ STAGE PLANS:
     Stats-Aggr Operator
 #### A masked pattern was here ####
 
-
 PREHOOK: query: INSERT OVERWRITE TABLE dest_j2
 SELECT res.key, z.value, res.value
 FROM (select x.key, x.value from src1 x JOIN src y ON (x.key = y.key)) res 
@@ -2465,6 +2476,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -2880,6 +2893,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -3186,6 +3200,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
diff --git a/src/ql/src/test/results/clientpositive/join36.q.out b/src/ql/src/test/results/clientpositive/join36.q.out
index da3d6c1..01a6d80 100644
--- a/src/ql/src/test/results/clientpositive/join36.q.out
+++ b/src/ql/src/test/results/clientpositive/join36.q.out
@@ -152,6 +152,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -165,6 +166,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join37.q.out b/src/ql/src/test/results/clientpositive/join37.q.out
index 2074beb..194731f 100644
--- a/src/ql/src/test/results/clientpositive/join37.q.out
+++ b/src/ql/src/test/results/clientpositive/join37.q.out
@@ -112,6 +112,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -125,6 +126,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join39.q.out b/src/ql/src/test/results/clientpositive/join39.q.out
index 2c2ca69..026ad69 100644
--- a/src/ql/src/test/results/clientpositive/join39.q.out
+++ b/src/ql/src/test/results/clientpositive/join39.q.out
@@ -125,6 +125,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -138,6 +139,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join40.q.out b/src/ql/src/test/results/clientpositive/join40.q.out
index e9e35ac..9d3311a 100644
--- a/src/ql/src/test/results/clientpositive/join40.q.out
+++ b/src/ql/src/test/results/clientpositive/join40.q.out
@@ -1901,6 +1901,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2622,6 +2623,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3958,6 +3960,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/join_hive_626.q.out b/src/ql/src/test/results/clientpositive/join_hive_626.q.out
index 70c6c8e..a25ca15 100644
--- a/src/ql/src/test/results/clientpositive/join_hive_626.q.out
+++ b/src/ql/src/test/results/clientpositive/join_hive_626.q.out
@@ -113,6 +113,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col8
diff --git a/src/ql/src/test/results/clientpositive/join_map_ppr.q.out b/src/ql/src/test/results/clientpositive/join_map_ppr.q.out
index ef6cd5a..724d9a7 100644
--- a/src/ql/src/test/results/clientpositive/join_map_ppr.q.out
+++ b/src/ql/src/test/results/clientpositive/join_map_ppr.q.out
@@ -221,6 +221,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -286,6 +288,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -776,6 +780,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -856,6 +862,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/join_nullsafe.q.out b/src/ql/src/test/results/clientpositive/join_nullsafe.q.out
index 1831b87..bf36c07 100644
--- a/src/ql/src/test/results/clientpositive/join_nullsafe.q.out
+++ b/src/ql/src/test/results/clientpositive/join_nullsafe.q.out
@@ -93,6 +93,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -251,6 +252,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -409,6 +411,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -606,6 +609,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -776,6 +780,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/join_reorder.q.out b/src/ql/src/test/results/clientpositive/join_reorder.q.out
index 1a21b42..aa94386 100644
--- a/src/ql/src/test/results/clientpositive/join_reorder.q.out
+++ b/src/ql/src/test/results/clientpositive/join_reorder.q.out
@@ -295,6 +295,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -432,6 +433,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/join_reorder2.q.out b/src/ql/src/test/results/clientpositive/join_reorder2.q.out
index 0599d62..e70ab57 100644
--- a/src/ql/src/test/results/clientpositive/join_reorder2.q.out
+++ b/src/ql/src/test/results/clientpositive/join_reorder2.q.out
@@ -277,6 +277,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -332,6 +333,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: (_col4 + 1)
@@ -410,6 +412,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: SELECT /*+ STREAMTABLE(a) */ *
 FROM T1 a JOIN T2 b ON a.key = b.key
           JOIN T3 c ON a.val = c.val
diff --git a/src/ql/src/test/results/clientpositive/join_reorder3.q.out b/src/ql/src/test/results/clientpositive/join_reorder3.q.out
index 81d3148..d3341b5 100644
--- a/src/ql/src/test/results/clientpositive/join_reorder3.q.out
+++ b/src/ql/src/test/results/clientpositive/join_reorder3.q.out
@@ -277,6 +277,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -332,6 +333,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: (_col4 + 1)
@@ -410,6 +412,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: SELECT /*+ STREAMTABLE(a,c) */ *
 FROM T1 a JOIN T2 b ON a.key = b.key
           JOIN T3 c ON a.val = c.val
diff --git a/src/ql/src/test/results/clientpositive/join_vc.q.out b/src/ql/src/test/results/clientpositive/join_vc.q.out
index f1433f3..3671ddf 100644
--- a/src/ql/src/test/results/clientpositive/join_vc.q.out
+++ b/src/ql/src/test/results/clientpositive/join_vc.q.out
@@ -66,6 +66,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -123,6 +124,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/lateral_view.q.out b/src/ql/src/test/results/clientpositive/lateral_view.q.out
index 5150a63..ffa82d0 100644
--- a/src/ql/src/test/results/clientpositive/lateral_view.q.out
+++ b/src/ql/src/test/results/clientpositive/lateral_view.q.out
@@ -113,6 +113,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/lateral_view_cp.q.out b/src/ql/src/test/results/clientpositive/lateral_view_cp.q.out
index 7c342c1..5323de0 100644
--- a/src/ql/src/test/results/clientpositive/lateral_view_cp.q.out
+++ b/src/ql/src/test/results/clientpositive/lateral_view_cp.q.out
@@ -132,6 +132,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/lateral_view_noalias.q.out b/src/ql/src/test/results/clientpositive/lateral_view_noalias.q.out
index ba93afc..e675a44 100644
--- a/src/ql/src/test/results/clientpositive/lateral_view_noalias.q.out
+++ b/src/ql/src/test/results/clientpositive/lateral_view_noalias.q.out
@@ -209,6 +209,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -224,6 +225,7 @@ STAGE PLANS:
                     expr: _col1
                     type: int
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/limit_pushdown.q.out b/src/ql/src/test/results/clientpositive/limit_pushdown.q.out
index 214fed5..6ae21a2 100644
--- a/src/ql/src/test/results/clientpositive/limit_pushdown.q.out
+++ b/src/ql/src/test/results/clientpositive/limit_pushdown.q.out
@@ -733,6 +733,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -879,6 +880,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -894,6 +896,7 @@ STAGE PLANS:
                     expr: _col1
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -999,6 +1002,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/limit_pushdown_negative.q.out b/src/ql/src/test/results/clientpositive/limit_pushdown_negative.q.out
index 857b6d0..c4df1a5 100644
--- a/src/ql/src/test/results/clientpositive/limit_pushdown_negative.q.out
+++ b/src/ql/src/test/results/clientpositive/limit_pushdown_negative.q.out
@@ -379,6 +379,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/lineage1.q.out b/src/ql/src/test/results/clientpositive/lineage1.q.out
index 9efbdf6..38b2c1c 100644
--- a/src/ql/src/test/results/clientpositive/lineage1.q.out
+++ b/src/ql/src/test/results/clientpositive/lineage1.q.out
@@ -167,6 +167,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -180,6 +181,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out
index 90c2a3e..19f7547 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part1.q.out
@@ -143,6 +143,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -156,6 +157,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -200,6 +202,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -213,6 +216,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out b/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out
index 43b09f0..20c6d13 100644
--- a/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out
+++ b/src/ql/src/test/results/clientpositive/load_dyn_part14.q.out
@@ -179,6 +179,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -192,6 +193,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out b/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out
index f654ca4..6885405 100644
--- a/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/mapjoin_distinct.q.out
@@ -100,6 +100,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -392,6 +393,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/merge1.q.out b/src/ql/src/test/results/clientpositive/merge1.q.out
index c557114..0ef6aa5 100644
--- a/src/ql/src/test/results/clientpositive/merge1.q.out
+++ b/src/ql/src/test/results/clientpositive/merge1.q.out
@@ -109,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -122,6 +123,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -591,6 +593,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -604,6 +607,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -712,6 +716,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -725,6 +730,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/merge2.q.out b/src/ql/src/test/results/clientpositive/merge2.q.out
index c5c4118..d4cd068 100644
--- a/src/ql/src/test/results/clientpositive/merge2.q.out
+++ b/src/ql/src/test/results/clientpositive/merge2.q.out
@@ -109,6 +109,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -122,6 +123,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -591,6 +593,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -604,6 +607,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -712,6 +716,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -725,6 +730,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/merge3.q.out b/src/ql/src/test/results/clientpositive/merge3.q.out
index 244ec7b..2520c45 100644
--- a/src/ql/src/test/results/clientpositive/merge3.q.out
+++ b/src/ql/src/test/results/clientpositive/merge3.q.out
@@ -182,6 +182,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -229,6 +231,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2559,6 +2563,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2627,6 +2633,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -5023,6 +5031,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -5091,6 +5101,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/merge4.q.out b/src/ql/src/test/results/clientpositive/merge4.q.out
index 312f2ab..565c2c8 100644
--- a/src/ql/src/test/results/clientpositive/merge4.q.out
+++ b/src/ql/src/test/results/clientpositive/merge4.q.out
@@ -76,6 +76,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -89,6 +90,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1213,6 +1215,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1226,6 +1229,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2932,6 +2936,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2945,6 +2950,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out
index a9bfc87..974a443 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition.q.out
@@ -705,6 +705,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -718,6 +719,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1362,6 +1364,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1375,6 +1378,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out
index c2231ea..77695c2 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition2.q.out
@@ -119,6 +119,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -132,6 +133,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out b/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out
index 7eaeac0..7b636ff 100644
--- a/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out
+++ b/src/ql/src/test/results/clientpositive/merge_dynamic_partition3.q.out
@@ -167,6 +167,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -180,6 +181,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/mergejoins.q.out b/src/ql/src/test/results/clientpositive/mergejoins.q.out
index 32ac4f7..5913eb4 100644
--- a/src/ql/src/test/results/clientpositive/mergejoins.q.out
+++ b/src/ql/src/test/results/clientpositive/mergejoins.q.out
@@ -131,6 +131,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/mergejoins_mixed.q.out b/src/ql/src/test/results/clientpositive/mergejoins_mixed.q.out
index b76fa01..b0a07a6 100644
--- a/src/ql/src/test/results/clientpositive/mergejoins_mixed.q.out
+++ b/src/ql/src/test/results/clientpositive/mergejoins_mixed.q.out
@@ -618,6 +618,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -788,6 +789,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -958,6 +960,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -1112,6 +1115,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -1167,6 +1171,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col4
@@ -1245,6 +1250,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: explain
 select * from a join a b on (a.key=b.key) left outer join a c on (b.value=c.key) full outer join a d on (a.key=d.key)
 PREHOOK: type: QUERY
@@ -1318,6 +1324,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -1373,6 +1380,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col4
@@ -1451,6 +1459,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: explain
 select * from a join a b on (a.key=b.key) right outer join a c on (b.value=c.key) left outer join a d on (a.key=d.key)
 PREHOOK: type: QUERY
@@ -1524,6 +1533,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -1579,6 +1589,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col4
@@ -1657,6 +1668,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: explain
 select * from a join a b on (a.key=b.key) right outer join a c on (b.value=c.key) full outer join a d on (a.key=d.key)
 PREHOOK: type: QUERY
@@ -1730,6 +1742,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
@@ -1785,6 +1798,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col4
@@ -1863,6 +1877,7 @@ STAGE PLANS:
     Fetch Operator
       limit: -1
 
+
 PREHOOK: query: -- ((a-b)-c-d)
 explain
 select * from a join a b on (a.key=b.key) left outer join a c on (b.value=c.key) left outer join a d on (c.key=d.key)
@@ -1937,6 +1952,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col5
diff --git a/src/ql/src/test/results/clientpositive/metadataonly1.q.out b/src/ql/src/test/results/clientpositive/metadataonly1.q.out
index 11bca7b..59404ae 100644
--- a/src/ql/src/test/results/clientpositive/metadataonly1.q.out
+++ b/src/ql/src/test/results/clientpositive/metadataonly1.q.out
@@ -632,6 +632,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -785,6 +787,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/multiMapJoin1.q.out b/src/ql/src/test/results/clientpositive/multiMapJoin1.q.out
index 83bb2f3..d874a53 100644
--- a/src/ql/src/test/results/clientpositive/multiMapJoin1.q.out
+++ b/src/ql/src/test/results/clientpositive/multiMapJoin1.q.out
@@ -1034,6 +1034,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1097,6 +1098,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1162,6 +1164,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1219,6 +1222,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1287,6 +1291,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1} {_col2} {_col3} {_col4} {_col5} {_col6}
@@ -1360,6 +1365,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col2
@@ -1455,6 +1461,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1} {_col2} {_col3} {_col4} {_col5}
@@ -1513,6 +1520,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -1591,6 +1599,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1} {_col2} {_col3} {_col4}
@@ -1647,6 +1656,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col3
@@ -2620,6 +2630,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -3055,6 +3066,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -3118,6 +3130,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -3183,6 +3196,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -3240,6 +3254,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -3308,6 +3323,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1} {_col2} {_col3} {_col4} {_col5} {_col6}
@@ -3381,6 +3397,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col2
@@ -3476,6 +3493,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1} {_col2} {_col3} {_col4} {_col5}
@@ -3534,6 +3552,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -3612,6 +3631,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0} {_col1} {_col2} {_col3} {_col4}
@@ -3668,6 +3688,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col3
diff --git a/src/ql/src/test/results/clientpositive/multiMapJoin2.q.out b/src/ql/src/test/results/clientpositive/multiMapJoin2.q.out
index e0eb2e1..72a3122 100644
--- a/src/ql/src/test/results/clientpositive/multiMapJoin2.q.out
+++ b/src/ql/src/test/results/clientpositive/multiMapJoin2.q.out
@@ -903,6 +903,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -917,6 +918,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -956,6 +958,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -996,6 +999,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1026,6 +1030,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -1040,6 +1045,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1079,6 +1085,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1089,6 +1096,7 @@ STAGE PLANS:
                     type: string
               tag: 1
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1519,6 +1527,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1703,6 +1712,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -1717,6 +1727,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1756,6 +1767,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1796,6 +1808,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1826,6 +1839,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         $INTNAME1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {_col0}
@@ -1840,6 +1854,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1879,6 +1894,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1889,6 +1905,7 @@ STAGE PLANS:
                     type: string
               tag: 1
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2292,6 +2309,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/multi_insert.q.out b/src/ql/src/test/results/clientpositive/multi_insert.q.out
index dc6c06e..b56ee17 100644
--- a/src/ql/src/test/results/clientpositive/multi_insert.q.out
+++ b/src/ql/src/test/results/clientpositive/multi_insert.q.out
@@ -268,6 +268,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -281,6 +282,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -322,6 +324,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -335,6 +338,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -724,6 +728,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -737,6 +742,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -778,6 +784,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -791,6 +798,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1309,6 +1317,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1322,6 +1331,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1363,6 +1373,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1376,6 +1387,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1887,6 +1899,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1900,6 +1913,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1941,6 +1955,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1954,6 +1969,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2533,6 +2549,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2546,6 +2563,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2587,6 +2605,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2600,6 +2619,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3269,6 +3289,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3282,6 +3303,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3323,6 +3345,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3336,6 +3359,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/multi_insert_gby.q.out b/src/ql/src/test/results/clientpositive/multi_insert_gby.q.out
index a5b5893..b42b58f 100644
--- a/src/ql/src/test/results/clientpositive/multi_insert_gby.q.out
+++ b/src/ql/src/test/results/clientpositive/multi_insert_gby.q.out
@@ -118,6 +118,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -164,6 +165,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -386,6 +388,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -432,6 +435,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/multi_insert_gby2.q.out b/src/ql/src/test/results/clientpositive/multi_insert_gby2.q.out
index eed4387..1817758 100644
--- a/src/ql/src/test/results/clientpositive/multi_insert_gby2.q.out
+++ b/src/ql/src/test/results/clientpositive/multi_insert_gby2.q.out
@@ -78,6 +78,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/multi_insert_gby3.q.out b/src/ql/src/test/results/clientpositive/multi_insert_gby3.q.out
index a473b3d..a8d901b 100644
--- a/src/ql/src/test/results/clientpositive/multi_insert_gby3.q.out
+++ b/src/ql/src/test/results/clientpositive/multi_insert_gby3.q.out
@@ -89,6 +89,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -261,6 +262,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1847,6 +1849,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2041,6 +2044,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/multi_insert_lateral_view.q.out b/src/ql/src/test/results/clientpositive/multi_insert_lateral_view.q.out
index 0780009..292e90d 100644
--- a/src/ql/src/test/results/clientpositive/multi_insert_lateral_view.q.out
+++ b/src/ql/src/test/results/clientpositive/multi_insert_lateral_view.q.out
@@ -188,6 +188,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -201,6 +202,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -242,6 +244,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -255,6 +258,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -572,6 +576,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -881,6 +886,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: key
@@ -1371,6 +1377,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1428,6 +1435,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1944,6 +1952,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2001,6 +2010,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: value
diff --git a/src/ql/src/test/results/clientpositive/multi_insert_move_tasks_share_dependencies.q.out b/src/ql/src/test/results/clientpositive/multi_insert_move_tasks_share_dependencies.q.out
index 757ec26..3fe7535 100644
--- a/src/ql/src/test/results/clientpositive/multi_insert_move_tasks_share_dependencies.q.out
+++ b/src/ql/src/test/results/clientpositive/multi_insert_move_tasks_share_dependencies.q.out
@@ -289,6 +289,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -302,6 +303,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -330,6 +332,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -343,6 +346,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -753,6 +757,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -766,6 +771,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -794,6 +800,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -807,6 +814,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1346,6 +1354,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1359,6 +1368,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1387,6 +1397,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1400,6 +1411,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1932,6 +1944,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1945,6 +1958,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1973,6 +1987,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1986,6 +2001,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2586,6 +2602,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2599,6 +2616,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2627,6 +2645,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2640,6 +2659,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3330,6 +3350,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3343,6 +3364,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3371,6 +3393,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3384,6 +3407,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4406,6 +4430,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4442,6 +4467,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -4657,6 +4683,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4693,6 +4720,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -4908,6 +4936,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -4944,6 +4973,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -5159,6 +5189,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5195,6 +5226,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -5485,6 +5517,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5518,6 +5551,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -5931,6 +5965,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -5964,6 +5999,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -6412,6 +6448,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6425,6 +6462,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6453,6 +6491,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6466,6 +6505,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6485,6 +6525,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -6518,6 +6559,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -6982,6 +7024,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -6995,6 +7038,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -7023,6 +7067,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -7036,6 +7081,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -7055,6 +7101,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -7088,6 +7135,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/multigroupby_singlemr.q.out b/src/ql/src/test/results/clientpositive/multigroupby_singlemr.q.out
index f8f75b5..80e8784 100644
--- a/src/ql/src/test/results/clientpositive/multigroupby_singlemr.q.out
+++ b/src/ql/src/test/results/clientpositive/multigroupby_singlemr.q.out
@@ -148,6 +148,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -333,6 +334,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -542,6 +544,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -930,6 +933,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -993,6 +997,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/no_hooks.q.out b/src/ql/src/test/results/clientpositive/no_hooks.q.out
index 4684fb6..60f452d 100644
--- a/src/ql/src/test/results/clientpositive/no_hooks.q.out
+++ b/src/ql/src/test/results/clientpositive/no_hooks.q.out
@@ -74,6 +74,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/nonblock_op_deduplicate.q.out b/src/ql/src/test/results/clientpositive/nonblock_op_deduplicate.q.out
index c326610..b0440a8 100644
--- a/src/ql/src/test/results/clientpositive/nonblock_op_deduplicate.q.out
+++ b/src/ql/src/test/results/clientpositive/nonblock_op_deduplicate.q.out
@@ -118,6 +118,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: 1
@@ -171,6 +172,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -350,6 +352,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
diff --git a/src/ql/src/test/results/clientpositive/nullgroup.q.out b/src/ql/src/test/results/clientpositive/nullgroup.q.out
index 4e6922f..dc978e0 100644
--- a/src/ql/src/test/results/clientpositive/nullgroup.q.out
+++ b/src/ql/src/test/results/clientpositive/nullgroup.q.out
@@ -191,6 +191,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/nullgroup2.q.out b/src/ql/src/test/results/clientpositive/nullgroup2.q.out
index 2b1d1a2..194f75f 100644
--- a/src/ql/src/test/results/clientpositive/nullgroup2.q.out
+++ b/src/ql/src/test/results/clientpositive/nullgroup2.q.out
@@ -70,6 +70,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -269,6 +270,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/nullgroup4.q.out b/src/ql/src/test/results/clientpositive/nullgroup4.q.out
index f935b54..d9712e4 100644
--- a/src/ql/src/test/results/clientpositive/nullgroup4.q.out
+++ b/src/ql/src/test/results/clientpositive/nullgroup4.q.out
@@ -71,6 +71,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -262,6 +263,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/orc_createas1.q.out b/src/ql/src/test/results/clientpositive/orc_createas1.q.out
index 5d9b662..55b7238 100644
--- a/src/ql/src/test/results/clientpositive/orc_createas1.q.out
+++ b/src/ql/src/test/results/clientpositive/orc_createas1.q.out
@@ -125,6 +125,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -137,6 +138,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -327,6 +329,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -339,6 +342,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -353,7 +357,6 @@ STAGE PLANS:
           hdfs directory: true
 #### A masked pattern was here ####
 
-
 PREHOOK: query: CREATE TABLE orc_createas1c
     STORED AS ORC AS 
         SELECT key, value, PMOD(HASH(key), 50) as part
diff --git a/src/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out b/src/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out
index ffd577f..801c1f7 100644
--- a/src/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out
+++ b/src/ql/src/test/results/clientpositive/orc_predicate_pushdown.q.out
@@ -1369,6 +1369,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col3
@@ -1498,6 +1499,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col3
diff --git a/src/ql/src/test/results/clientpositive/parallel.q.out b/src/ql/src/test/results/clientpositive/parallel.q.out
index 61c5415..614207d 100644
--- a/src/ql/src/test/results/clientpositive/parallel.q.out
+++ b/src/ql/src/test/results/clientpositive/parallel.q.out
@@ -93,6 +93,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/pcr.q.out b/src/ql/src/test/results/clientpositive/pcr.q.out
index 0fec132..1722d3c 100644
--- a/src/ql/src/test/results/clientpositive/pcr.q.out
+++ b/src/ql/src/test/results/clientpositive/pcr.q.out
@@ -2558,6 +2558,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2882,6 +2884,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3874,6 +3878,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -3939,6 +3945,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4045,6 +4053,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4110,6 +4120,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4433,6 +4445,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4513,6 +4527,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4639,6 +4655,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -4719,6 +4737,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/ppd2.q.out b/src/ql/src/test/results/clientpositive/ppd2.q.out
index 26c10d9..10d7289 100644
--- a/src/ql/src/test/results/clientpositive/ppd2.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd2.q.out
@@ -431,6 +431,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/ppd_clusterby.q.out b/src/ql/src/test/results/clientpositive/ppd_clusterby.q.out
index 1da05cc..6a7841e 100644
--- a/src/ql/src/test/results/clientpositive/ppd_clusterby.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_clusterby.q.out
@@ -157,6 +157,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -351,6 +352,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/ppd_constant_expr.q.out b/src/ql/src/test/results/clientpositive/ppd_constant_expr.q.out
index 9078bb9..9598110 100644
--- a/src/ql/src/test/results/clientpositive/ppd_constant_expr.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_constant_expr.q.out
@@ -75,6 +75,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -88,6 +89,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -228,6 +230,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -241,6 +244,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/ppd_gby2.q.out b/src/ql/src/test/results/clientpositive/ppd_gby2.q.out
index 59d2c84..3e067c2 100644
--- a/src/ql/src/test/results/clientpositive/ppd_gby2.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_gby2.q.out
@@ -107,6 +107,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -271,6 +272,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/ppd_gby_join.q.out b/src/ql/src/test/results/clientpositive/ppd_gby_join.q.out
index 8351f88..d74ae75 100644
--- a/src/ql/src/test/results/clientpositive/ppd_gby_join.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_gby_join.q.out
@@ -128,6 +128,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -291,6 +292,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/ppd_join2.q.out b/src/ql/src/test/results/clientpositive/ppd_join2.q.out
index 304e749..867317a 100644
--- a/src/ql/src/test/results/clientpositive/ppd_join2.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_join2.q.out
@@ -118,6 +118,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -1850,6 +1851,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/ppd_join_filter.q.out b/src/ql/src/test/results/clientpositive/ppd_join_filter.q.out
index fef321e..f8c20b1 100644
--- a/src/ql/src/test/results/clientpositive/ppd_join_filter.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_join_filter.q.out
@@ -160,6 +160,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -493,6 +495,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -826,6 +830,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1159,6 +1165,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out b/src/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out
index 4b1e630..f623b4c 100644
--- a/src/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_repeated_alias.q.out
@@ -370,6 +370,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: 0
diff --git a/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out b/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out
index 1ff3349..604291f 100644
--- a/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_udf_case.q.out
@@ -129,6 +129,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -343,6 +344,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/ppd_vc.q.out b/src/ql/src/test/results/clientpositive/ppd_vc.q.out
index 5e73573..c722ac5 100644
--- a/src/ql/src/test/results/clientpositive/ppd_vc.q.out
+++ b/src/ql/src/test/results/clientpositive/ppd_vc.q.out
@@ -662,6 +662,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col2
diff --git a/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out b/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
index 00807d3..1434672 100644
--- a/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
+++ b/src/ql/src/test/results/clientpositive/ql_rewrite_gbtoidx.q.out
@@ -551,6 +551,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -744,6 +745,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -966,6 +968,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -981,6 +984,7 @@ STAGE PLANS:
                     expr: _col2
                     type: bigint
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -3778,6 +3782,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3964,6 +3969,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/quote1.q.out b/src/ql/src/test/results/clientpositive/quote1.q.out
index b6de9e6..7baca6e 100644
--- a/src/ql/src/test/results/clientpositive/quote1.q.out
+++ b/src/ql/src/test/results/clientpositive/quote1.q.out
@@ -79,6 +79,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -92,6 +93,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out b/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out
index 9785fa4..6e55cb1 100644
--- a/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out
+++ b/src/ql/src/test/results/clientpositive/rand_partitionpruner2.q.out
@@ -214,6 +214,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -279,6 +281,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out b/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out
index 385dde5..7e7eed5 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_merge1.q.out
@@ -99,6 +99,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -112,6 +113,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out b/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out
index 8a96122..04514b8 100644
--- a/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out
+++ b/src/ql/src/test/results/clientpositive/rcfile_merge4.q.out
@@ -116,6 +116,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -129,6 +130,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out b/src/ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out
index 8d51bfc..5fc5d67 100644
--- a/src/ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out
+++ b/src/ql/src/test/results/clientpositive/reduce_deduplicate_exclude_join.q.out
@@ -72,6 +72,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
diff --git a/src/ql/src/test/results/clientpositive/reduce_deduplicate_extended.q.out b/src/ql/src/test/results/clientpositive/reduce_deduplicate_extended.q.out
index b154e02..8ff82fd 100644
--- a/src/ql/src/test/results/clientpositive/reduce_deduplicate_extended.q.out
+++ b/src/ql/src/test/results/clientpositive/reduce_deduplicate_extended.q.out
@@ -414,6 +414,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -535,6 +536,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3097,6 +3099,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -3215,6 +3218,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/regex_col.q.out b/src/ql/src/test/results/clientpositive/regex_col.q.out
index af736cc..c116a59 100644
--- a/src/ql/src/test/results/clientpositive/regex_col.q.out
+++ b/src/ql/src/test/results/clientpositive/regex_col.q.out
@@ -304,6 +304,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/sample1.q.out b/src/ql/src/test/results/clientpositive/sample1.q.out
index 4d1f62e..150f22e 100644
--- a/src/ql/src/test/results/clientpositive/sample1.q.out
+++ b/src/ql/src/test/results/clientpositive/sample1.q.out
@@ -167,6 +167,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -232,6 +234,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/sample10.q.out b/src/ql/src/test/results/clientpositive/sample10.q.out
index 0fb283b..03397ec 100644
--- a/src/ql/src/test/results/clientpositive/sample10.q.out
+++ b/src/ql/src/test/results/clientpositive/sample10.q.out
@@ -333,6 +333,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/sample2.q.out b/src/ql/src/test/results/clientpositive/sample2.q.out
index 7b2b427..fb5a627 100644
--- a/src/ql/src/test/results/clientpositive/sample2.q.out
+++ b/src/ql/src/test/results/clientpositive/sample2.q.out
@@ -161,6 +161,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -226,6 +228,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -293,6 +297,7 @@ STAGE PLANS:
           hdfs directory: true
 #### A masked pattern was here ####
 
+
 PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 
 FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 2) s
 PREHOOK: type: QUERY
diff --git a/src/ql/src/test/results/clientpositive/sample4.q.out b/src/ql/src/test/results/clientpositive/sample4.q.out
index a1a28ae..578964a 100644
--- a/src/ql/src/test/results/clientpositive/sample4.q.out
+++ b/src/ql/src/test/results/clientpositive/sample4.q.out
@@ -161,6 +161,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -226,6 +228,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -293,6 +297,7 @@ STAGE PLANS:
           hdfs directory: true
 #### A masked pattern was here ####
 
+
 PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.*
 FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 2 on key) s
 PREHOOK: type: QUERY
diff --git a/src/ql/src/test/results/clientpositive/sample5.q.out b/src/ql/src/test/results/clientpositive/sample5.q.out
index a623545..9608de9 100644
--- a/src/ql/src/test/results/clientpositive/sample5.q.out
+++ b/src/ql/src/test/results/clientpositive/sample5.q.out
@@ -159,6 +159,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -224,6 +226,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -291,6 +295,7 @@ STAGE PLANS:
           hdfs directory: true
 #### A masked pattern was here ####
 
+
 PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* -- here's another test
 FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 5 on key) s
 PREHOOK: type: QUERY
diff --git a/src/ql/src/test/results/clientpositive/sample6.q.out b/src/ql/src/test/results/clientpositive/sample6.q.out
index 4918653..35995a7 100644
--- a/src/ql/src/test/results/clientpositive/sample6.q.out
+++ b/src/ql/src/test/results/clientpositive/sample6.q.out
@@ -159,6 +159,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -224,6 +226,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -291,6 +295,7 @@ STAGE PLANS:
           hdfs directory: true
 #### A masked pattern was here ####
 
+
 PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.*
 FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 4 on key) s
 PREHOOK: type: QUERY
diff --git a/src/ql/src/test/results/clientpositive/sample7.q.out b/src/ql/src/test/results/clientpositive/sample7.q.out
index 6e33901..70c6cf3 100644
--- a/src/ql/src/test/results/clientpositive/sample7.q.out
+++ b/src/ql/src/test/results/clientpositive/sample7.q.out
@@ -161,6 +161,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -226,6 +228,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -293,6 +297,7 @@ STAGE PLANS:
           hdfs directory: true
 #### A masked pattern was here ####
 
+
 PREHOOK: query: INSERT OVERWRITE TABLE dest1 SELECT s.* 
 FROM srcbucket TABLESAMPLE (BUCKET 1 OUT OF 4 on key) s
 WHERE s.key > 100
diff --git a/src/ql/src/test/results/clientpositive/sample8.q.out b/src/ql/src/test/results/clientpositive/sample8.q.out
index 101db85..fb4e6dd 100644
--- a/src/ql/src/test/results/clientpositive/sample8.q.out
+++ b/src/ql/src/test/results/clientpositive/sample8.q.out
@@ -304,6 +304,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/semijoin.q.out b/src/ql/src/test/results/clientpositive/semijoin.q.out
index d6a2694..354d32c 100644
--- a/src/ql/src/test/results/clientpositive/semijoin.q.out
+++ b/src/ql/src/test/results/clientpositive/semijoin.q.out
@@ -186,6 +186,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -313,6 +314,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -442,6 +444,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -565,6 +568,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -701,6 +705,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -825,6 +830,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -949,6 +955,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1070,6 +1077,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1318,6 +1326,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1466,6 +1475,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1619,6 +1629,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -1917,6 +1928,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2072,6 +2084,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2230,6 +2243,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2388,6 +2402,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2546,6 +2561,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2706,6 +2722,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -2861,6 +2878,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
@@ -2910,6 +2928,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/skewjoin.q.out b/src/ql/src/test/results/clientpositive/skewjoin.q.out
index 9579794..e7f2a22 100644
--- a/src/ql/src/test/results/clientpositive/skewjoin.q.out
+++ b/src/ql/src/test/results/clientpositive/skewjoin.q.out
@@ -136,6 +136,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {0_VALUE_0}
@@ -150,6 +151,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         0 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -624,6 +626,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -790,6 +793,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -804,6 +808,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         0 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -843,6 +848,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1022,6 +1028,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 
@@ -1036,6 +1043,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         0 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1075,6 +1083,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1289,6 +1298,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         1 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {0_VALUE_0}
@@ -1301,6 +1311,7 @@ STAGE PLANS:
                 2 [Column[joinkey0]]
               Position of Big Table: 0
         2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {0_VALUE_0}
@@ -1317,6 +1328,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         0 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
@@ -1359,6 +1371,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
@@ -1400,6 +1413,7 @@ STAGE PLANS:
             limit: -1
       Alias -> Map Local Operator Tree:
         0 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {0_VALUE_0}
@@ -1412,6 +1426,7 @@ STAGE PLANS:
                 2 [Column[joinkey0]]
               Position of Big Table: 1
         2 
+          TableScan
             HashTable Sink Operator
               condition expressions:
                 0 {0_VALUE_0}
@@ -1428,6 +1443,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         1 
+          TableScan
             Map Join Operator
               condition map:
                    Inner Join 0 to 1
diff --git a/src/ql/src/test/results/clientpositive/skewjoinopt13.q.out b/src/ql/src/test/results/clientpositive/skewjoinopt13.q.out
index b816ae3..7ecec57 100644
--- a/src/ql/src/test/results/clientpositive/skewjoinopt13.q.out
+++ b/src/ql/src/test/results/clientpositive/skewjoinopt13.q.out
@@ -125,6 +125,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col1
diff --git a/src/ql/src/test/results/clientpositive/skewjoinopt9.q.out b/src/ql/src/test/results/clientpositive/skewjoinopt9.q.out
index c17d2a4..c29f71d 100644
--- a/src/ql/src/test/results/clientpositive/skewjoinopt9.q.out
+++ b/src/ql/src/test/results/clientpositive/skewjoinopt9.q.out
@@ -279,6 +279,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out
index 678e559..dfcbf6d 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin9.q.out
@@ -329,6 +329,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -341,6 +342,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin_14.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin_14.q.out
index b5f010f..427f8a5 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin_14.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin_14.q.out
@@ -236,6 +236,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -398,6 +399,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               sort order: 
               tag: -1
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin_25.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin_25.q.out
index 43002d1..aa3c2f7 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin_25.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin_25.q.out
@@ -110,6 +110,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
         $INTNAME 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -123,6 +124,7 @@ STAGE PLANS:
                     expr: _col0
                     type: int
         $INTNAME1 
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin_6.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin_6.q.out
index b597061..81f918e 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin_6.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin_6.q.out
@@ -134,6 +134,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -147,6 +148,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1389,6 +1391,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1402,6 +1405,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2748,6 +2752,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2761,6 +2766,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2935,6 +2941,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2948,6 +2955,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/smb_mapjoin_7.q.out b/src/ql/src/test/results/clientpositive/smb_mapjoin_7.q.out
index 0012c44..36c1fea 100644
--- a/src/ql/src/test/results/clientpositive/smb_mapjoin_7.q.out
+++ b/src/ql/src/test/results/clientpositive/smb_mapjoin_7.q.out
@@ -701,6 +701,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -714,6 +715,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/stats0.q.out b/src/ql/src/test/results/clientpositive/stats0.q.out
index 8f1fd9c..dcdbc38 100644
--- a/src/ql/src/test/results/clientpositive/stats0.q.out
+++ b/src/ql/src/test/results/clientpositive/stats0.q.out
@@ -1486,6 +1486,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1551,6 +1553,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2252,6 +2256,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -2265,6 +2270,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/stats11.q.out b/src/ql/src/test/results/clientpositive/stats11.q.out
index 761552f..671cbcd 100644
--- a/src/ql/src/test/results/clientpositive/stats11.q.out
+++ b/src/ql/src/test/results/clientpositive/stats11.q.out
@@ -510,6 +510,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -575,6 +577,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1010,6 +1014,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -1090,6 +1096,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/stats4.q.out b/src/ql/src/test/results/clientpositive/stats4.q.out
index ea9343f..a37d512 100644
--- a/src/ql/src/test/results/clientpositive/stats4.q.out
+++ b/src/ql/src/test/results/clientpositive/stats4.q.out
@@ -135,6 +135,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -148,6 +149,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -192,6 +194,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -205,6 +208,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/stats_empty_dyn_part.q.out b/src/ql/src/test/results/clientpositive/stats_empty_dyn_part.q.out
index 6af6a82..38c0883 100644
--- a/src/ql/src/test/results/clientpositive/stats_empty_dyn_part.q.out
+++ b/src/ql/src/test/results/clientpositive/stats_empty_dyn_part.q.out
@@ -83,6 +83,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -96,6 +97,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/subq.q.out b/src/ql/src/test/results/clientpositive/subq.q.out
index 3261a2c..24640b4 100644
--- a/src/ql/src/test/results/clientpositive/subq.q.out
+++ b/src/ql/src/test/results/clientpositive/subq.q.out
@@ -66,6 +66,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -77,6 +78,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/udf1.q.out b/src/ql/src/test/results/clientpositive/udf1.q.out
index 30f946b..47f5072 100644
--- a/src/ql/src/test/results/clientpositive/udf1.q.out
+++ b/src/ql/src/test/results/clientpositive/udf1.q.out
@@ -131,6 +131,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -144,6 +145,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/udf_10_trims.q.out b/src/ql/src/test/results/clientpositive/udf_10_trims.q.out
index 0fcd68a..2752685 100644
--- a/src/ql/src/test/results/clientpositive/udf_10_trims.q.out
+++ b/src/ql/src/test/results/clientpositive/udf_10_trims.q.out
@@ -79,6 +79,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -92,6 +93,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/udf_case_column_pruning.q.out b/src/ql/src/test/results/clientpositive/udf_case_column_pruning.q.out
index e286c1c..fd80143 100644
--- a/src/ql/src/test/results/clientpositive/udf_case_column_pruning.q.out
+++ b/src/ql/src/test/results/clientpositive/udf_case_column_pruning.q.out
@@ -82,6 +82,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/udf_explode.q.out b/src/ql/src/test/results/clientpositive/udf_explode.q.out
index a9c33a9..b13695b 100644
--- a/src/ql/src/test/results/clientpositive/udf_explode.q.out
+++ b/src/ql/src/test/results/clientpositive/udf_explode.q.out
@@ -225,6 +225,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -556,6 +558,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/udf_length.q.out b/src/ql/src/test/results/clientpositive/udf_length.q.out
index 945c382..7c156f9 100644
--- a/src/ql/src/test/results/clientpositive/udf_length.q.out
+++ b/src/ql/src/test/results/clientpositive/udf_length.q.out
@@ -80,6 +80,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -93,6 +94,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/udf_reverse.q.out b/src/ql/src/test/results/clientpositive/udf_reverse.q.out
index ed50f8d..14b75b6 100644
--- a/src/ql/src/test/results/clientpositive/udf_reverse.q.out
+++ b/src/ql/src/test/results/clientpositive/udf_reverse.q.out
@@ -80,6 +80,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -93,6 +94,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/udtf_explode.q.out b/src/ql/src/test/results/clientpositive/udtf_explode.q.out
index 8c97205..af2a826 100644
--- a/src/ql/src/test/results/clientpositive/udtf_explode.q.out
+++ b/src/ql/src/test/results/clientpositive/udtf_explode.q.out
@@ -225,6 +225,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -496,6 +498,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/udtf_json_tuple.q.out b/src/ql/src/test/results/clientpositive/udtf_json_tuple.q.out
index a43a009..77627b0 100644
--- a/src/ql/src/test/results/clientpositive/udtf_json_tuple.q.out
+++ b/src/ql/src/test/results/clientpositive/udtf_json_tuple.q.out
@@ -533,6 +533,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/union.q.out b/src/ql/src/test/results/clientpositive/union.q.out
index 5da5645..950a0a2 100644
--- a/src/ql/src/test/results/clientpositive/union.q.out
+++ b/src/ql/src/test/results/clientpositive/union.q.out
@@ -110,6 +110,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -121,6 +122,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union10.q.out b/src/ql/src/test/results/clientpositive/union10.q.out
index ad05b38..5a48398 100644
--- a/src/ql/src/test/results/clientpositive/union10.q.out
+++ b/src/ql/src/test/results/clientpositive/union10.q.out
@@ -164,6 +164,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -177,6 +178,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union12.q.out b/src/ql/src/test/results/clientpositive/union12.q.out
index 4a1dea6..472fc9c 100644
--- a/src/ql/src/test/results/clientpositive/union12.q.out
+++ b/src/ql/src/test/results/clientpositive/union12.q.out
@@ -164,6 +164,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -177,6 +178,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union17.q.out b/src/ql/src/test/results/clientpositive/union17.q.out
index 5fa6de3..42b5c85 100644
--- a/src/ql/src/test/results/clientpositive/union17.q.out
+++ b/src/ql/src/test/results/clientpositive/union17.q.out
@@ -164,6 +164,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -219,6 +220,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/union18.q.out b/src/ql/src/test/results/clientpositive/union18.q.out
index c59389b..d11cf8c 100644
--- a/src/ql/src/test/results/clientpositive/union18.q.out
+++ b/src/ql/src/test/results/clientpositive/union18.q.out
@@ -196,6 +196,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -209,6 +210,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -250,6 +252,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -263,6 +266,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union24.q.out b/src/ql/src/test/results/clientpositive/union24.q.out
index 703aa0b..9d2abca 100644
--- a/src/ql/src/test/results/clientpositive/union24.q.out
+++ b/src/ql/src/test/results/clientpositive/union24.q.out
@@ -1233,6 +1233,8 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
+            GatherStats: false
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/union28.q.out b/src/ql/src/test/results/clientpositive/union28.q.out
index 32d1b33..a27540e 100644
--- a/src/ql/src/test/results/clientpositive/union28.q.out
+++ b/src/ql/src/test/results/clientpositive/union28.q.out
@@ -224,6 +224,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -237,6 +238,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union29.q.out b/src/ql/src/test/results/clientpositive/union29.q.out
index 39b4140..0710804 100644
--- a/src/ql/src/test/results/clientpositive/union29.q.out
+++ b/src/ql/src/test/results/clientpositive/union29.q.out
@@ -167,6 +167,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -180,6 +181,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union3.q.out b/src/ql/src/test/results/clientpositive/union3.q.out
index 1092d3e..a3f94b0 100644
--- a/src/ql/src/test/results/clientpositive/union3.q.out
+++ b/src/ql/src/test/results/clientpositive/union3.q.out
@@ -223,6 +223,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -285,6 +286,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/union30.q.out b/src/ql/src/test/results/clientpositive/union30.q.out
index 1e759b0..9313116 100644
--- a/src/ql/src/test/results/clientpositive/union30.q.out
+++ b/src/ql/src/test/results/clientpositive/union30.q.out
@@ -283,6 +283,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -296,6 +297,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union31.q.out b/src/ql/src/test/results/clientpositive/union31.q.out
index 89a2d86..3277a8e 100644
--- a/src/ql/src/test/results/clientpositive/union31.q.out
+++ b/src/ql/src/test/results/clientpositive/union31.q.out
@@ -224,6 +224,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
diff --git a/src/ql/src/test/results/clientpositive/union33.q.out b/src/ql/src/test/results/clientpositive/union33.q.out
index 9c9cc22..47d879d 100644
--- a/src/ql/src/test/results/clientpositive/union33.q.out
+++ b/src/ql/src/test/results/clientpositive/union33.q.out
@@ -96,6 +96,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -210,6 +211,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -223,6 +225,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -363,6 +366,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             Reduce Output Operator
               key expressions:
                     expr: _col0
@@ -477,6 +481,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -490,6 +495,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union4.q.out b/src/ql/src/test/results/clientpositive/union4.q.out
index 97d8223..2a95e46 100644
--- a/src/ql/src/test/results/clientpositive/union4.q.out
+++ b/src/ql/src/test/results/clientpositive/union4.q.out
@@ -143,6 +143,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -156,6 +157,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/clientpositive/union6.q.out b/src/ql/src/test/results/clientpositive/union6.q.out
index b07b562..3a17f11 100644
--- a/src/ql/src/test/results/clientpositive/union6.q.out
+++ b/src/ql/src/test/results/clientpositive/union6.q.out
@@ -150,6 +150,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
@@ -163,6 +164,7 @@ STAGE PLANS:
     Map Reduce
       Alias -> Map Operator Tree:
 #### A masked pattern was here ####
+          TableScan
             File Output Operator
               compressed: false
               GlobalTableId: 0
diff --git a/src/ql/src/test/results/compiler/plan/case_sensitivity.q.xml b/src/ql/src/test/results/compiler/plan/case_sensitivity.q.xml
index f704ccb..f3c3c97 100644
--- a/src/ql/src/test/results/compiler/plan/case_sensitivity.q.xml
+++ b/src/ql/src/test/results/compiler/plan/case_sensitivity.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_5</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/input1.q.xml b/src/ql/src/test/results/compiler/plan/input1.q.xml
index 8d2c607..6e92ff1 100755
--- a/src/ql/src/test/results/compiler/plan/input1.q.xml
+++ b/src/ql/src/test/results/compiler/plan/input1.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_5</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/input2.q.xml b/src/ql/src/test/results/compiler/plan/input2.q.xml
index a5895a8..184e32c 100755
--- a/src/ql/src/test/results/compiler/plan/input2.q.xml
+++ b/src/ql/src/test/results/compiler/plan/input2.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_10</string> 
                         </void> 
@@ -743,6 +766,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -759,6 +785,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_12</string> 
                         </void> 
@@ -1260,6 +1306,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -1276,6 +1325,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_14</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/input3.q.xml b/src/ql/src/test/results/compiler/plan/input3.q.xml
index dc9dbef..a1b9c33 100755
--- a/src/ql/src/test/results/compiler/plan/input3.q.xml
+++ b/src/ql/src/test/results/compiler/plan/input3.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_13</string> 
                         </void> 
@@ -743,6 +766,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -759,6 +785,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_15</string> 
                         </void> 
@@ -1260,6 +1306,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -1276,6 +1325,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_17</string> 
                         </void> 
@@ -1699,6 +1768,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -1715,6 +1787,20 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>_col0</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_19</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/input6.q.xml b/src/ql/src/test/results/compiler/plan/input6.q.xml
index 7303d1e..b536a11 100644
--- a/src/ql/src/test/results/compiler/plan/input6.q.xml
+++ b/src/ql/src/test/results/compiler/plan/input6.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_5</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/input7.q.xml b/src/ql/src/test/results/compiler/plan/input7.q.xml
index b9ea690..ac708b5 100644
--- a/src/ql/src/test/results/compiler/plan/input7.q.xml
+++ b/src/ql/src/test/results/compiler/plan/input7.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_3</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/input9.q.xml b/src/ql/src/test/results/compiler/plan/input9.q.xml
index d248634..da16541 100644
--- a/src/ql/src/test/results/compiler/plan/input9.q.xml
+++ b/src/ql/src/test/results/compiler/plan/input9.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_5</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/input_testsequencefile.q.xml b/src/ql/src/test/results/compiler/plan/input_testsequencefile.q.xml
index 1de829e..bea7045 100644
--- a/src/ql/src/test/results/compiler/plan/input_testsequencefile.q.xml
+++ b/src/ql/src/test/results/compiler/plan/input_testsequencefile.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_3</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/join2.q.xml b/src/ql/src/test/results/compiler/plan/join2.q.xml
index 2c7b597..c0a1c01 100644
--- a/src/ql/src/test/results/compiler/plan/join2.q.xml
+++ b/src/ql/src/test/results/compiler/plan/join2.q.xml
@@ -561,6 +561,9 @@
               </void> 
              </object> 
             </void> 
+            <void property="conf"> 
+             <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+            </void> 
             <void property="counterNames"> 
              <object class="java.util.ArrayList"> 
               <void method="add"> 
@@ -577,6 +580,26 @@
               </void> 
              </object> 
             </void> 
+            <void property="neededColumnIDs"> 
+             <object class="java.util.ArrayList"> 
+              <void method="add"> 
+               <int>0</int> 
+              </void> 
+              <void method="add"> 
+               <int>1</int> 
+              </void> 
+             </object> 
+            </void> 
+            <void property="neededColumns"> 
+             <object class="java.util.ArrayList"> 
+              <void method="add"> 
+               <string>_col0</string> 
+              </void> 
+              <void method="add"> 
+               <string>_col4</string> 
+              </void> 
+             </object> 
+            </void> 
             <void property="operatorId"> 
              <string>TS_12</string> 
             </void> 
diff --git a/src/ql/src/test/results/compiler/plan/sample2.q.xml b/src/ql/src/test/results/compiler/plan/sample2.q.xml
index d31196a..c4ee88f 100644
--- a/src/ql/src/test/results/compiler/plan/sample2.q.xml
+++ b/src/ql/src/test/results/compiler/plan/sample2.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_4</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/sample3.q.xml b/src/ql/src/test/results/compiler/plan/sample3.q.xml
index b032f8f..3640bba 100644
--- a/src/ql/src/test/results/compiler/plan/sample3.q.xml
+++ b/src/ql/src/test/results/compiler/plan/sample3.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_4</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/sample4.q.xml b/src/ql/src/test/results/compiler/plan/sample4.q.xml
index d31196a..c4ee88f 100644
--- a/src/ql/src/test/results/compiler/plan/sample4.q.xml
+++ b/src/ql/src/test/results/compiler/plan/sample4.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_4</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/sample5.q.xml b/src/ql/src/test/results/compiler/plan/sample5.q.xml
index 0d5b9be..814c632 100644
--- a/src/ql/src/test/results/compiler/plan/sample5.q.xml
+++ b/src/ql/src/test/results/compiler/plan/sample5.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_4</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/sample6.q.xml b/src/ql/src/test/results/compiler/plan/sample6.q.xml
index 7c805b9..b75e5bc 100644
--- a/src/ql/src/test/results/compiler/plan/sample6.q.xml
+++ b/src/ql/src/test/results/compiler/plan/sample6.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_4</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/sample7.q.xml b/src/ql/src/test/results/compiler/plan/sample7.q.xml
index 8d0b281..8af8d38 100644
--- a/src/ql/src/test/results/compiler/plan/sample7.q.xml
+++ b/src/ql/src/test/results/compiler/plan/sample7.q.xml
@@ -230,6 +230,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -246,6 +249,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>key</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>value</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_6</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/subq.q.xml b/src/ql/src/test/results/compiler/plan/subq.q.xml
index 23f79d5..4304e9f 100644
--- a/src/ql/src/test/results/compiler/plan/subq.q.xml
+++ b/src/ql/src/test/results/compiler/plan/subq.q.xml
@@ -163,6 +163,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -179,6 +182,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>_col0</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>_col1</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_6</string> 
                         </void> 
diff --git a/src/ql/src/test/results/compiler/plan/union.q.xml b/src/ql/src/test/results/compiler/plan/union.q.xml
index ddd66a5..25b890c 100644
--- a/src/ql/src/test/results/compiler/plan/union.q.xml
+++ b/src/ql/src/test/results/compiler/plan/union.q.xml
@@ -163,6 +163,9 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="conf"> 
+                         <object class="org.apache.hadoop.hive.ql.plan.TableScanDesc"/> 
+                        </void> 
                         <void property="counterNames"> 
                          <object class="java.util.ArrayList"> 
                           <void method="add"> 
@@ -179,6 +182,26 @@
                           </void> 
                          </object> 
                         </void> 
+                        <void property="neededColumnIDs"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <int>0</int> 
+                          </void> 
+                          <void method="add"> 
+                           <int>1</int> 
+                          </void> 
+                         </object> 
+                        </void> 
+                        <void property="neededColumns"> 
+                         <object class="java.util.ArrayList"> 
+                          <void method="add"> 
+                           <string>_col0</string> 
+                          </void> 
+                          <void method="add"> 
+                           <string>_col1</string> 
+                          </void> 
+                         </object> 
+                        </void> 
                         <void property="operatorId"> 
                          <string>TS_11</string> 
                         </void> 
diff --git a/src/serde/src/java/org/apache/hadoop/hive/serde2/ColumnProjectionUtils.java b/src/serde/src/java/org/apache/hadoop/hive/serde2/ColumnProjectionUtils.java
index 0b3ef7b..fecae56 100644
--- a/src/serde/src/java/org/apache/hadoop/hive/serde2/ColumnProjectionUtils.java
+++ b/src/serde/src/java/org/apache/hadoop/hive/serde2/ColumnProjectionUtils.java
@@ -32,87 +32,57 @@
 
   public static final String READ_COLUMN_IDS_CONF_STR = "hive.io.file.readcolumn.ids";
   public static final String READ_COLUMN_NAMES_CONF_STR = "hive.io.file.readcolumn.names";
+  private static final String READ_COLUMN_IDS_CONF_STR_DEFAULT = "";
+  private static final String READ_ALL_COLUMNS = "hive.io.file.read.all.columns";
+  private static final boolean READ_ALL_COLUMNS_DEFAULT = true;
 
   /**
-   * Sets read columns' ids(start from zero) for RCFile's Reader. Once a column
-   * is included in the list, RCFile's reader will not skip its value.
-   * 
+   * Sets the <em>READ_ALL_COLUMNS</em> flag and removes any previously
+   * set column ids.
    */
-  public static void setReadColumnIDs(Configuration conf, List<Integer> ids) {
-    String id = toReadColumnIDString(ids);
-    setReadColumnIDConf(conf, id);
+  public static void setReadAllColumns(Configuration conf) {
+    conf.setBoolean(READ_ALL_COLUMNS, true);
+    setReadColumnIDConf(conf, READ_COLUMN_IDS_CONF_STR_DEFAULT);
   }
 
   /**
-   * Sets read columns' ids(start from zero) for RCFile's Reader. Once a column
-   * is included in the list, RCFile's reader will not skip its value.
-   * 
+   * Returns the <em>READ_ALL_COLUMNS</em> columns flag.
    */
-  public static void appendReadColumnIDs(Configuration conf, List<Integer> ids) {
-    String id = toReadColumnIDString(ids);
-    if (id != null) {
-      String old = conf.get(READ_COLUMN_IDS_CONF_STR, null);
-      String newConfStr = id;
-      if (old != null) {
-        newConfStr = newConfStr + StringUtils.COMMA_STR + old;
-      }
-
-      setReadColumnIDConf(conf, newConfStr);
-    }
+  public static boolean isReadAllColumns(Configuration conf) {
+    return conf.getBoolean(READ_ALL_COLUMNS, READ_ALL_COLUMNS_DEFAULT);
   }
 
-  public static void appendReadColumnNames(Configuration conf,
-                                           List<String> cols) {
-    if (cols != null) {
-      String old = conf.get(READ_COLUMN_NAMES_CONF_STR, "");
-      StringBuilder result = new StringBuilder(old);
-      boolean first = old.isEmpty();
-      for(String col: cols) {
-        if (first) {
-          first = false;
-        } else {
-          result.append(',');
-        }
-        result.append(col);
-      }
-      conf.set(READ_COLUMN_NAMES_CONF_STR, result.toString());
+  /**
+   * Appends read columns' ids (start from zero). Once a column
+   * is included in the list, a underlying record reader of a columnar file format
+   * (e.g. RCFile and ORC) can know what columns are needed.
+   */
+  public static void appendReadColumns(Configuration conf, List<Integer> ids) {
+    String id = toReadColumnIDString(ids);
+    String old = conf.get(READ_COLUMN_IDS_CONF_STR, null);
+    String newConfStr = id;
+    if (old != null) {
+      newConfStr = newConfStr + StringUtils.COMMA_STR + old;
     }
+    setReadColumnIDConf(conf, newConfStr);
+    // Set READ_ALL_COLUMNS to false
+    conf.setBoolean(READ_ALL_COLUMNS, false);
   }
 
-  private static void setReadColumnIDConf(Configuration conf, String id) {
-    if (id == null || id.length() <= 0) {
-      conf.set(READ_COLUMN_IDS_CONF_STR, "");
-      return;
-    }
-
-    conf.set(READ_COLUMN_IDS_CONF_STR, id);
-  }
-
-  private static String toReadColumnIDString(List<Integer> ids) {
-    String id = null;
-    if (ids != null) {
-      for (int i = 0; i < ids.size(); i++) {
-        if (i == 0) {
-          id = "" + ids.get(i);
-        } else {
-          id = id + StringUtils.COMMA_STR + ids.get(i);
-        }
-      }
-    }
-    return id;
+  public static void appendReadColumns(
+      Configuration conf, List<Integer> ids, List<String> names) {
+    appendReadColumns(conf, ids);
+    appendReadColumnNames(conf, names);
   }
 
   /**
    * Returns an array of column ids(start from zero) which is set in the given
    * parameter <tt>conf</tt>.
    */
-  public static ArrayList<Integer> getReadColumnIDs(Configuration conf) {
-    if (conf == null) {
-      return new ArrayList<Integer>(0);
-    }
-    String skips = conf.get(READ_COLUMN_IDS_CONF_STR, "");
+  public static List<Integer> getReadColumnIDs(Configuration conf) {
+    String skips = conf.get(READ_COLUMN_IDS_CONF_STR, READ_COLUMN_IDS_CONF_STR_DEFAULT);
     String[] list = StringUtils.split(skips);
-    ArrayList<Integer> result = new ArrayList<Integer>(list.length);
+    List<Integer> result = new ArrayList<Integer>(list.length);
     for (String element : list) {
       // it may contain duplicates, remove duplicates
       Integer toAdd = Integer.parseInt(element);
@@ -123,11 +93,39 @@ private static String toReadColumnIDString(List<Integer> ids) {
     return result;
   }
 
-  /**
-   * Clears the read column ids set in the conf, and will read all columns.
-   */
-  public static void setFullyReadColumns(Configuration conf) {
-    conf.set(READ_COLUMN_IDS_CONF_STR, "");
+  private static void setReadColumnIDConf(Configuration conf, String id) {
+    if (id.trim().isEmpty()) {
+      conf.set(READ_COLUMN_IDS_CONF_STR, READ_COLUMN_IDS_CONF_STR_DEFAULT);
+    } else {
+      conf.set(READ_COLUMN_IDS_CONF_STR, id);
+    }
+  }
+
+  private static void appendReadColumnNames(Configuration conf, List<String> cols) {
+    String old = conf.get(READ_COLUMN_NAMES_CONF_STR, "");
+    StringBuilder result = new StringBuilder(old);
+    boolean first = old.isEmpty();
+    for(String col: cols) {
+      if (first) {
+        first = false;
+      } else {
+        result.append(',');
+      }
+      result.append(col);
+    }
+    conf.set(READ_COLUMN_NAMES_CONF_STR, result.toString());
+  }
+
+  private static String toReadColumnIDString(List<Integer> ids) {
+    String id = "";
+    for (int i = 0; i < ids.size(); i++) {
+      if (i == 0) {
+        id = id + ids.get(i);
+      } else {
+        id = id + StringUtils.COMMA_STR + ids.get(i);
+      }
+    }
+    return id;
   }
 
   private ColumnProjectionUtils() {
diff --git a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarSerDe.java b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarSerDe.java
index 11f5f07..70bc7e8 100644
--- a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarSerDe.java
+++ b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarSerDe.java
@@ -19,6 +19,7 @@
 package org.apache.hadoop.hive.serde2.columnar;
 
 import java.io.IOException;
+import java.util.ArrayList;
 import java.util.Arrays;
 import java.util.List;
 import java.util.Properties;
@@ -26,11 +27,9 @@
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.hive.serde2.ByteStream;
 import org.apache.hadoop.hive.serde2.ColumnProjectionUtils;
 import org.apache.hadoop.hive.serde2.SerDe;
 import org.apache.hadoop.hive.serde2.SerDeException;
-import org.apache.hadoop.hive.serde2.SerDeStats;
 import org.apache.hadoop.hive.serde2.SerDeUtils;
 import org.apache.hadoop.hive.serde2.lazy.LazyFactory;
 import org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe;
@@ -79,9 +78,10 @@ public ColumnarSerDe() throws SerDeException {
    *
    * @see SerDe#initialize(Configuration, Properties)
    */
-  public void initialize(Configuration job, Properties tbl) throws SerDeException {
+  @Override
+  public void initialize(Configuration conf, Properties tbl) throws SerDeException {
 
-    serdeParams = LazySimpleSerDe.initSerdeParams(job, tbl, getClass().getName());
+    serdeParams = LazySimpleSerDe.initSerdeParams(conf, tbl, getClass().getName());
 
     // Create the ObjectInspectors for the fields. Note: Currently
     // ColumnarObject uses same ObjectInpector as LazyStruct
@@ -90,14 +90,20 @@ public void initialize(Configuration job, Properties tbl) throws SerDeException 
             .getSeparators(), serdeParams.getNullSequence(), serdeParams
             .isEscaped(), serdeParams.getEscapeChar());
 
-    java.util.ArrayList<Integer> notSkipIDs = ColumnProjectionUtils.getReadColumnIDs(job);
-
-    cachedLazyStruct = new ColumnarStruct(cachedObjectInspector, notSkipIDs,
-        serdeParams.getNullSequence());
-
     int size = serdeParams.getColumnTypes().size();
+    List<Integer> notSkipIDs = new ArrayList<Integer>();
+    if (conf == null || ColumnProjectionUtils.isReadAllColumns(conf)) {
+      for (int i = 0; i < size; i++ ) {
+        notSkipIDs.add(i);
+      }
+    } else {
+      notSkipIDs = ColumnProjectionUtils.getReadColumnIDs(conf);
+    }
+    cachedLazyStruct = new ColumnarStruct(
+        cachedObjectInspector, notSkipIDs, serdeParams.getNullSequence());
+
     super.initialize(size);
-    LOG.debug("ColumnarSerDe initialized with: columnNames="
+    LOG.info("ColumnarSerDe initialized with: columnNames="
         + serdeParams.getColumnNames() + " columnTypes="
         + serdeParams.getColumnTypes() + " separator="
         + Arrays.asList(serdeParams.getSeparators()) + " nullstring="
@@ -114,6 +120,7 @@ public void initialize(Configuration job, Properties tbl) throws SerDeException 
    * @return The serialized Writable object
    * @see SerDe#serialize(Object, ObjectInspector)
    */
+  @Override
   public Writable serialize(Object obj, ObjectInspector objInspector) throws SerDeException {
 
     if (objInspector.getCategory() != Category.STRUCT) {
diff --git a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStruct.java b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStruct.java
index 1335446..157600e 100644
--- a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStruct.java
+++ b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStruct.java
@@ -18,7 +18,7 @@
 
 package org.apache.hadoop.hive.serde2.columnar;
 
-import java.util.ArrayList;
+import java.util.List;
 
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
@@ -49,22 +49,10 @@
    *
    * @param oi
    *          the ObjectInspector representing the type of this LazyStruct.
-   */
-  public ColumnarStruct(ObjectInspector oi) {
-    this(oi, null, null);
-  }
-
-  /**
-   * Construct a ColumnarStruct object with the TypeInfo. It creates the first
-   * level object at the first place
-   *
-   * @param oi
-   *          the ObjectInspector representing the type of this LazyStruct.
    * @param notSkippedColumnIDs
    *          the column ids that should not be skipped
    */
-  public ColumnarStruct(ObjectInspector oi,
-      ArrayList<Integer> notSkippedColumnIDs, Text nullSequence) {
+  public ColumnarStruct(ObjectInspector oi, List<Integer> notSkippedColumnIDs, Text nullSequence) {
     super(oi, notSkippedColumnIDs);
     if (nullSequence != null) {
       this.nullSequence = nullSequence;
@@ -84,7 +72,7 @@ protected int getLength(ObjectInspector objectInspector, ByteArrayRef cachedByte
     }
     return fieldLen;
   }
-  
+
   @Override
   protected LazyObjectBase createLazyObjectBase(ObjectInspector objectInspector) {
     return LazyFactory.createLazyObject(objectInspector);
diff --git a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStructBase.java b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStructBase.java
index e1270cc..0bc2c8f 100644
--- a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStructBase.java
+++ b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/ColumnarStructBase.java
@@ -122,22 +122,13 @@ protected Object uncheckedGetField() {
   private FieldInfo[] fieldInfoList = null;
   private ArrayList<Object> cachedList;
 
-  public ColumnarStructBase(ObjectInspector oi,
-      ArrayList<Integer> notSkippedColumnIDs) {
+  public ColumnarStructBase(ObjectInspector oi, List<Integer> notSkippedColumnIDs) {
     List<? extends StructField> fieldRefs = ((StructObjectInspector) oi)
         .getAllStructFieldRefs();
     int num = fieldRefs.size();
 
     fieldInfoList = new FieldInfo[num];
 
-    // if no columns is set to be skipped, add all columns in
-    // 'notSkippedColumnIDs'
-    if (notSkippedColumnIDs == null || notSkippedColumnIDs.size() == 0) {
-      for (int i = 0; i < num; i++) {
-        notSkippedColumnIDs.add(i);
-      }
-    }
-
     for (int i = 0; i < num; i++) {
       ObjectInspector foi = fieldRefs.get(i).getFieldObjectInspector();
       fieldInfoList[i] = new FieldInfo(
diff --git a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarSerDe.java b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarSerDe.java
index b717278..bab505e 100644
--- a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarSerDe.java
+++ b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarSerDe.java
@@ -17,22 +17,23 @@
  */
 package org.apache.hadoop.hive.serde2.columnar;
 
+import java.util.ArrayList;
 import java.util.List;
 import java.util.Properties;
 
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.hive.serde2.ColumnProjectionUtils;
 import org.apache.hadoop.hive.serde2.SerDeException;
-import org.apache.hadoop.hive.serde2.lazy.LazyUtils;
 import org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe.SerDeParameters;
+import org.apache.hadoop.hive.serde2.lazy.LazyUtils;
 import org.apache.hadoop.hive.serde2.lazybinary.LazyBinaryFactory;
 import org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector.Category;
-import org.apache.hadoop.hive.serde2.objectinspector.primitive.StringObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.StructField;
 import org.apache.hadoop.hive.serde2.objectinspector.StructObjectInspector;
+import org.apache.hadoop.hive.serde2.objectinspector.primitive.StringObjectInspector;
 import org.apache.hadoop.hive.serde2.typeinfo.TypeInfo;
 import org.apache.hadoop.io.Writable;
 
@@ -66,9 +67,17 @@ public void initialize(Configuration conf, Properties tbl) throws SerDeException
 
     cachedObjectInspector = LazyBinaryFactory.createColumnarStructInspector(
         columnNames, columnTypes);
-    java.util.ArrayList<Integer> notSkipIDs = ColumnProjectionUtils.getReadColumnIDs(conf);
-    cachedLazyStruct = new LazyBinaryColumnarStruct(cachedObjectInspector, notSkipIDs);
     int size = columnTypes.size();
+    List<Integer> notSkipIDs = new ArrayList<Integer>();
+    if (conf == null || ColumnProjectionUtils.isReadAllColumns(conf)) {
+      for (int i = 0; i < size; i++ ) {
+        notSkipIDs.add(i);
+      }
+    } else {
+      notSkipIDs = ColumnProjectionUtils.getReadColumnIDs(conf);
+    }
+    cachedLazyStruct = new LazyBinaryColumnarStruct(cachedObjectInspector, notSkipIDs);
+
     super.initialize(size);
   }
 
diff --git a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarStruct.java b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarStruct.java
index 0317024..6d9715a 100644
--- a/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarStruct.java
+++ b/src/serde/src/java/org/apache/hadoop/hive/serde2/columnar/LazyBinaryColumnarStruct.java
@@ -18,26 +18,22 @@
 
 package org.apache.hadoop.hive.serde2.columnar;
 
-import java.util.ArrayList;
+import java.util.List;
 
 import org.apache.hadoop.hive.serde2.lazy.ByteArrayRef;
 import org.apache.hadoop.hive.serde2.lazy.LazyObjectBase;
 import org.apache.hadoop.hive.serde2.lazybinary.LazyBinaryFactory;
-import org.apache.hadoop.hive.serde2.lazybinary.LazyBinaryUtils;
-import org.apache.hadoop.hive.serde2.lazybinary.LazyBinaryUtils.VInt;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector;
-import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.ObjectInspector.Category;
+import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector;
 import org.apache.hadoop.hive.serde2.objectinspector.PrimitiveObjectInspector.PrimitiveCategory;
 
 public class LazyBinaryColumnarStruct extends ColumnarStructBase {
 
-  public LazyBinaryColumnarStruct(ObjectInspector oi, ArrayList<Integer> notSkippedColumnIDs) {
+  public LazyBinaryColumnarStruct(ObjectInspector oi, List<Integer> notSkippedColumnIDs) {
     super(oi, notSkippedColumnIDs);
   }
 
-  static VInt vInt = new LazyBinaryUtils.VInt();
-
   @Override
   protected int getLength(ObjectInspector objectInspector, ByteArrayRef cachedByteArrayRef,
       int start, int length) {
@@ -48,8 +44,8 @@ protected int getLength(ObjectInspector objectInspector, ByteArrayRef cachedByte
     if (category.equals(Category.PRIMITIVE)) {
       PrimitiveCategory primitiveCategory = ((PrimitiveObjectInspector) objectInspector)
           .getPrimitiveCategory();
-      if (primitiveCategory.equals(PrimitiveCategory.STRING) && (length == 1) && 
-            (cachedByteArrayRef.getData()[start] 
+      if (primitiveCategory.equals(PrimitiveCategory.STRING) && (length == 1) &&
+            (cachedByteArrayRef.getData()[start]
               == LazyBinaryColumnarSerDe.INVALID_UTF__SINGLE_BYTE[0])) {
         return 0;
       }
diff --git a/src/serde/src/test/org/apache/hadoop/hive/serde2/TestColumnProjectionUtils.java b/src/serde/src/test/org/apache/hadoop/hive/serde2/TestColumnProjectionUtils.java
new file mode 100644
index 0000000..b14c640
--- /dev/null
+++ b/src/serde/src/test/org/apache/hadoop/hive/serde2/TestColumnProjectionUtils.java
@@ -0,0 +1,86 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.serde2;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.Collections;
+import java.util.List;
+
+import org.apache.hadoop.conf.Configuration;
+import org.junit.Before;
+import org.junit.Test;
+
+public class TestColumnProjectionUtils {
+
+  private Configuration conf;
+
+  @Before
+  public void setUp() throws Exception {
+    conf = new Configuration();
+  }
+
+  @Test
+  public void testReadAllColumns() {
+    // test that the all columns will be read by default
+    assertTrue(ColumnProjectionUtils.isReadAllColumns(conf));
+    // test that setting read all resets column ids
+    ColumnProjectionUtils.appendReadColumns(conf, Arrays.asList(new Integer[]{0, 1, 2}));
+    ColumnProjectionUtils.setReadAllColumns(conf);
+    assertEquals(Collections.EMPTY_LIST, ColumnProjectionUtils.getReadColumnIDs(conf));
+    assertTrue(ColumnProjectionUtils.isReadAllColumns(conf));
+  }
+
+  @Test
+  public void testReadColumnIds() {
+    List<Integer> columnIds = new ArrayList<Integer>();
+    List<Integer> actual;
+
+    assertEquals(Collections.EMPTY_LIST, ColumnProjectionUtils.getReadColumnIDs(conf));
+
+    // test that read columns are initially an empty list
+    actual = ColumnProjectionUtils.getReadColumnIDs(conf);
+    assertEquals(Collections.EMPTY_LIST, actual);
+    // set setting read column ids with an empty list
+    ColumnProjectionUtils.appendReadColumns(conf, columnIds);
+    actual = ColumnProjectionUtils.getReadColumnIDs(conf);
+    assertEquals(Collections.EMPTY_LIST, actual);
+    // test that setting read column ids set read all columns to false
+    assertFalse(ColumnProjectionUtils.isReadAllColumns(conf));
+    // add needed columns
+    columnIds.add(1);
+    ColumnProjectionUtils.appendReadColumns(conf, Collections.singletonList(1));
+    assertEquals(columnIds, ColumnProjectionUtils.getReadColumnIDs(conf));
+    columnIds.add(2);
+    ColumnProjectionUtils.appendReadColumns(conf, Collections.singletonList(2));
+    actual = ColumnProjectionUtils.getReadColumnIDs(conf);
+    Collections.sort(actual);
+    assertEquals(columnIds, actual);
+    columnIds.add(3);
+    ColumnProjectionUtils.appendReadColumns(conf, Collections.singletonList(3));
+    actual = ColumnProjectionUtils.getReadColumnIDs(conf);
+    Collections.sort(actual);
+    assertEquals(columnIds, actual);
+    assertFalse(ColumnProjectionUtils.isReadAllColumns(conf));
+  }
+}
-- 
1.7.0.4

