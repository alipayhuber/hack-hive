From 38cf597da1c333ab61363490d432b6b643e0a3ce Mon Sep 17 00:00:00 2001
From: Ashutosh Chauhan <hashutosh@apache.org>
Date: Sat, 5 Oct 2013 16:38:20 +0000
Subject: [PATCH 070/375] HIVE-5428 : Direct SQL check fails during tests (Sergey Shelukhin via Ashutosh Chauhan)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1529479 13f79535-47bb-0310-9956-ffa450edef68
---
 .../hadoop/hive/metastore/MetaStoreDirectSql.java  |    5 ++-
 .../apache/hadoop/hive/metastore/ObjectStore.java  |   31 ++++++++++---------
 2 files changed, 20 insertions(+), 16 deletions(-)

diff --git a/src/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreDirectSql.java b/src/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreDirectSql.java
index 164b904..102e876 100644
--- a/src/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreDirectSql.java
+++ b/src/metastore/src/java/org/apache/hadoop/hive/metastore/MetaStoreDirectSql.java
@@ -46,6 +46,7 @@
 import org.apache.hadoop.hive.metastore.api.SkewedInfo;
 import org.apache.hadoop.hive.metastore.api.StorageDescriptor;
 import org.apache.hadoop.hive.metastore.api.Table;
+import org.apache.hadoop.hive.metastore.model.MDatabase;
 import org.apache.hadoop.hive.metastore.parser.ExpressionTree;
 import org.apache.hadoop.hive.metastore.parser.ExpressionTree.FilterBuilder;
 import org.apache.hadoop.hive.metastore.parser.ExpressionTree.LeafNode;
@@ -102,7 +103,9 @@ public MetaStoreDirectSql(PersistenceManager pm) {
       tx = pm.currentTransaction();
       tx.begin();
     }
-    // This should work. If it doesn't, we will self-disable. What a PITA...
+    // Force the underlying db to initialize.
+    pm.newQuery(MDatabase.class, "name == ''").execute();
+    // Self-test query. If it doesn't work, we will self-disable. What a PITA...
     boolean isCompatibleDatastore = false;
     String selfTestQuery = "select \"DB_ID\" from \"DBS\"";
     try {
diff --git a/src/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java b/src/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java
index 8455c34..010cbd4 100644
--- a/src/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java
+++ b/src/metastore/src/java/org/apache/hadoop/hive/metastore/ObjectStore.java
@@ -1424,7 +1424,7 @@ private boolean dropPartitionCommon(MPartition part) throws NoSuchObjectExceptio
       int maxParts, boolean allowSql, boolean allowJdo) throws MetaException {
     assert allowSql || allowJdo;
     boolean doTrace = LOG.isDebugEnabled();
-    boolean doUseDirectSql = canUseDirectSql(allowSql);
+    boolean doUseDirectSql = canUseDirectSql(allowSql, allowJdo);
 
     boolean success = false;
     List<Partition> parts = null;
@@ -1754,7 +1754,7 @@ private Collection getPartitionPsQueryResults(String dbName, String tableName,
     dbName = dbName.toLowerCase();
     tblName = tblName.toLowerCase();
     boolean doTrace = LOG.isDebugEnabled();
-    boolean doUseDirectSql = canUseDirectSql(allowSql);
+    boolean doUseDirectSql = canUseDirectSql(allowSql, allowJdo);
 
     boolean success = false;
     List<Partition> results = null;
@@ -1819,7 +1819,7 @@ protected boolean getPartitionsByExprInternal(String dbName, String tblName,
     //       Filter.g stuff. That way this method and ...ByFilter would just be merged.
     ExpressionTree exprTree = makeExpressionTree(filter);
 
-    boolean doUseDirectSql = allowSql && isDirectSqlEnabled(maxParts);
+    boolean doUseDirectSql = canUseDirectSql(allowSql, allowJdo);
     boolean doTrace = LOG.isDebugEnabled();
     List<Partition> partitions = null;
     boolean hasUnknownPartitions = false;
@@ -1877,12 +1877,6 @@ protected boolean getPartitionsByExprInternal(String dbName, String tblName,
     return hasUnknownPartitions;
   }
 
-  private boolean isDirectSqlEnabled(short maxParts) {
-    // There's no portable SQL limit. It doesn't make a lot of sense w/o offset anyway.
-    return (maxParts < 0)
-        && HiveConf.getBoolVar(getConf(), ConfVars.METASTORE_TRY_DIRECT_SQL);
-  }
-
   private class LikeChecker extends ExpressionTree.TreeVisitor {
     private boolean hasLike;
 
@@ -2062,7 +2056,7 @@ private void handleDirectSqlError(boolean allowJdo, Exception ex) throws MetaExc
       throws MetaException, NoSuchObjectException {
     assert allowSql || allowJdo;
     boolean doTrace = LOG.isDebugEnabled();
-    boolean doUseDirectSql = canUseDirectSql(allowSql);
+    boolean doUseDirectSql = canUseDirectSql(allowSql, allowJdo);
 
     dbName = dbName.toLowerCase();
     tblName = tblName.toLowerCase();
@@ -2108,15 +2102,22 @@ private void handleDirectSqlError(boolean allowJdo, Exception ex) throws MetaExc
     }
   }
 
-  private boolean canUseDirectSql(boolean allowSql) {
+  /**
+   * @param allowSql Whether SQL usage is allowed (always true outside test).
+   * @param allowJdo Whether JDO usage is allowed (always true outside test).
+   * @return Whether we can use direct SQL.
+   */
+  private boolean canUseDirectSql(boolean allowSql, boolean allowJdo) throws MetaException {
     // We don't allow direct SQL usage if we are inside a larger transaction (e.g. droptable).
     // That is because some databases (e.g. Postgres) abort the entire transaction when
     // any query fails, so the fallback from failed SQL to JDO is not possible.
     // TODO: Drop table can be very slow on large tables, we might want to address this.
-    return allowSql
-      && HiveConf.getBoolVar(getConf(), ConfVars.METASTORE_TRY_DIRECT_SQL)
-      && directSql.isCompatibleDatastore()
-      && !isActiveTransaction();
+    boolean isEnabled = !isActiveTransaction()
+        && HiveConf.getBoolVar(getConf(), ConfVars.METASTORE_TRY_DIRECT_SQL);
+    if (!allowJdo && isEnabled && !directSql.isCompatibleDatastore()) {
+      throw new MetaException("SQL is not operational"); // test path; SQL is enabled and broken.
+    }
+    return allowSql && isEnabled && directSql.isCompatibleDatastore();
   }
 
   /**
-- 
1.7.0.4

