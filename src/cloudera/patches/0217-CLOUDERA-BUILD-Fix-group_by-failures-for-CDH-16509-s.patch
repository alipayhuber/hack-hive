From 449a1e952e789a109a39e8a8670847c3d0fd9520 Mon Sep 17 00:00:00 2001
From: Szehon Ho <szehon@cloudera.com>
Date: Thu, 2 Jan 2014 17:37:43 -0800
Subject: [PATCH 217/375] CLOUDERA-BUILD: Fix group_by failures for CDH-16509 subset of MR2 failures.

---
 .../queries/clientpositive/groupby1_map_skew.q     |    2 +-
 .../test/queries/clientpositive/groupby1_noskew.q  |    2 +-
 .../test/queries/clientpositive/groupby2_limit.q   |    4 +-
 ql/src/test/queries/clientpositive/groupby2_map.q  |    2 +-
 .../clientpositive/groupby2_map_multi_distinct.q   |    4 +-
 .../queries/clientpositive/groupby2_map_skew.q     |    2 +-
 .../test/queries/clientpositive/groupby4_noskew.q  |    2 +-
 .../queries/clientpositive/groupby6_map_skew.q     |    2 +-
 .../test/queries/clientpositive/groupby6_noskew.q  |    2 +-
 ql/src/test/queries/clientpositive/groupby7_map.q  |    4 +-
 .../groupby7_map_multi_single_reducer.q            |    4 +-
 .../queries/clientpositive/groupby7_map_skew.q     |    4 +-
 .../groupby7_noskew_multi_single_reducer.q         |    8 +-
 .../queries/clientpositive/groupby8_map_skew.q     |    4 +-
 .../test/queries/clientpositive/groupby8_noskew.q  |    4 +-
 .../groupby_map_ppr_multi_distinct.q               |    2 +-
 .../results/clientpositive/groupby1_map_skew.q.out |  114 ++++++------
 .../results/clientpositive/groupby1_noskew.q.out   |  114 ++++++------
 .../results/clientpositive/groupby2_limit.q.out    |   53 ++++--
 .../test/results/clientpositive/groupby2_map.q.out |    4 +-
 .../groupby2_map_multi_distinct.q.out              |    8 +-
 .../results/clientpositive/groupby2_map_skew.q.out |    4 +-
 .../results/clientpositive/groupby4_noskew.q.out   |    4 +-
 .../results/clientpositive/groupby6_noskew.q.out   |    4 +-
 .../test/results/clientpositive/groupby7_map.q.out |  192 ++++++++++----------
 .../groupby7_map_multi_single_reducer.q.out        |  192 ++++++++++----------
 .../results/clientpositive/groupby7_map_skew.q.out |  192 ++++++++++----------
 .../groupby7_noskew_multi_single_reducer.q.out     |   58 +++---
 .../results/clientpositive/groupby8_map_skew.q.out |  192 ++++++++++----------
 .../results/clientpositive/groupby8_noskew.q.out   |  192 ++++++++++----------
 .../groupby_map_ppr_multi_distinct.q.out           |    4 +-
 31 files changed, 705 insertions(+), 674 deletions(-)

diff --git a/src/ql/src/test/queries/clientpositive/groupby1_map_skew.q b/src/ql/src/test/queries/clientpositive/groupby1_map_skew.q
index 8749958..f346cb7 100644
--- a/src/ql/src/test/queries/clientpositive/groupby1_map_skew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby1_map_skew.q
@@ -9,4 +9,4 @@ FROM src INSERT OVERWRITE TABLE dest1 SELECT src.key, sum(substr(src.value,5)) G
 
 FROM src INSERT OVERWRITE TABLE dest1 SELECT src.key, sum(substr(src.value,5)) GROUP BY src.key;
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby1_noskew.q b/src/ql/src/test/queries/clientpositive/groupby1_noskew.q
index 1b10f1e..c587b5f 100644
--- a/src/ql/src/test/queries/clientpositive/groupby1_noskew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby1_noskew.q
@@ -9,4 +9,4 @@ FROM src INSERT OVERWRITE TABLE dest_g1 SELECT src.key, sum(substr(src.value,5))
 
 FROM src INSERT OVERWRITE TABLE dest_g1 SELECT src.key, sum(substr(src.value,5)) GROUP BY src.key;
 
-SELECT dest_g1.* FROM dest_g1;
+SELECT dest_g1.* FROM dest_g1 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby2_limit.q b/src/ql/src/test/queries/clientpositive/groupby2_limit.q
index 4bc263c..084dd5e 100644
--- a/src/ql/src/test/queries/clientpositive/groupby2_limit.q
+++ b/src/ql/src/test/queries/clientpositive/groupby2_limit.q
@@ -1,7 +1,7 @@
 set mapred.reduce.tasks=31;
 
 EXPLAIN
-SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key LIMIT 5;
+SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key ORDER BY key LIMIT 5;
 
-SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key LIMIT 5;
+SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key ORDER BY key LIMIT 5;
 
diff --git a/src/ql/src/test/queries/clientpositive/groupby2_map.q b/src/ql/src/test/queries/clientpositive/groupby2_map.q
index c3cf598..794ec75 100644
--- a/src/ql/src/test/queries/clientpositive/groupby2_map.q
+++ b/src/ql/src/test/queries/clientpositive/groupby2_map.q
@@ -11,4 +11,4 @@ INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(s
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(src.key,1,1),sum(substr(src.value,5))) GROUP BY substr(src.key,1,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby2_map_multi_distinct.q b/src/ql/src/test/queries/clientpositive/groupby2_map_multi_distinct.q
index 26071d6..55d1a34 100644
--- a/src/ql/src/test/queries/clientpositive/groupby2_map_multi_distinct.q
+++ b/src/ql/src/test/queries/clientpositive/groupby2_map_multi_distinct.q
@@ -11,7 +11,7 @@ INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(s
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(src.key,1,1),sum(substr(src.value,5))), sum(DISTINCT substr(src.value, 5)), count(src.value) GROUP BY substr(src.key,1,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY key;
 
 -- HIVE-5560 when group by key is used in distinct funtion, invalid result are returned
 
@@ -22,4 +22,4 @@ INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(s
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(src.key,1,1)), concat(substr(src.key,1,1),sum(substr(src.value,5))), sum(DISTINCT substr(src.value, 5)), count(src.value) GROUP BY substr(src.key,1,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby2_map_skew.q b/src/ql/src/test/queries/clientpositive/groupby2_map_skew.q
index 39a2a17..bcea077 100644
--- a/src/ql/src/test/queries/clientpositive/groupby2_map_skew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby2_map_skew.q
@@ -11,4 +11,4 @@ INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(s
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(src.key,1,1),sum(substr(src.value,5))) GROUP BY substr(src.key,1,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby4_noskew.q b/src/ql/src/test/queries/clientpositive/groupby4_noskew.q
index 99c2d2d..a1ebf90 100644
--- a/src/ql/src/test/queries/clientpositive/groupby4_noskew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby4_noskew.q
@@ -12,5 +12,5 @@ INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1) GROUP BY substr(src.key,
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT substr(src.key,1,1) GROUP BY substr(src.key,1,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY c1;
 
diff --git a/src/ql/src/test/queries/clientpositive/groupby6_map_skew.q b/src/ql/src/test/queries/clientpositive/groupby6_map_skew.q
index ac79a28..0d3727b 100644
--- a/src/ql/src/test/queries/clientpositive/groupby6_map_skew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby6_map_skew.q
@@ -11,6 +11,6 @@ INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(src.value,5,1);
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(src.value,5,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY c1;
 
 
diff --git a/src/ql/src/test/queries/clientpositive/groupby6_noskew.q b/src/ql/src/test/queries/clientpositive/groupby6_noskew.q
index 2c99d36..466c132 100644
--- a/src/ql/src/test/queries/clientpositive/groupby6_noskew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby6_noskew.q
@@ -12,6 +12,6 @@ INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(src.value,5,1);
 FROM src
 INSERT OVERWRITE TABLE dest1 SELECT DISTINCT substr(src.value,5,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY c1;
 
 
diff --git a/src/ql/src/test/queries/clientpositive/groupby7_map.q b/src/ql/src/test/queries/clientpositive/groupby7_map.q
index b1457d9..2b8c5db 100644
--- a/src/ql/src/test/queries/clientpositive/groupby7_map.q
+++ b/src/ql/src/test/queries/clientpositive/groupby7_map.q
@@ -18,5 +18,5 @@ FROM SRC
 INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key
 INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key;
 
-SELECT DEST1.* FROM DEST1;
-SELECT DEST2.* FROM DEST2;
+SELECT DEST1.* FROM DEST1 ORDER BY key;
+SELECT DEST2.* FROM DEST2 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby7_map_multi_single_reducer.q b/src/ql/src/test/queries/clientpositive/groupby7_map_multi_single_reducer.q
index 481b3cd..5895ed4 100644
--- a/src/ql/src/test/queries/clientpositive/groupby7_map_multi_single_reducer.q
+++ b/src/ql/src/test/queries/clientpositive/groupby7_map_multi_single_reducer.q
@@ -17,5 +17,5 @@ FROM SRC
 INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key
 INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key;
 
-SELECT DEST1.* FROM DEST1;
-SELECT DEST2.* FROM DEST2;
+SELECT DEST1.* FROM DEST1 ORDER BY key;
+SELECT DEST2.* FROM DEST2 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby7_map_skew.q b/src/ql/src/test/queries/clientpositive/groupby7_map_skew.q
index a34ac8f..ee6d7bf 100644
--- a/src/ql/src/test/queries/clientpositive/groupby7_map_skew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby7_map_skew.q
@@ -17,5 +17,5 @@ FROM SRC
 INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key
 INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key;
 
-SELECT DEST1.* FROM DEST1;
-SELECT DEST2.* FROM DEST2;
+SELECT DEST1.* FROM DEST1 ORDER BY key;
+SELECT DEST2.* FROM DEST2 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby7_noskew_multi_single_reducer.q b/src/ql/src/test/queries/clientpositive/groupby7_noskew_multi_single_reducer.q
index 802aea2..d636016 100644
--- a/src/ql/src/test/queries/clientpositive/groupby7_noskew_multi_single_reducer.q
+++ b/src/ql/src/test/queries/clientpositive/groupby7_noskew_multi_single_reducer.q
@@ -10,12 +10,12 @@ SET hive.exec.compress.output=true;
 
 EXPLAIN
 FROM SRC
-INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
-INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10;
+INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
+INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10;
 
 FROM SRC
-INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
-INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10;
+INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
+INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10;
 
 SELECT DEST1.* FROM DEST1 ORDER BY key ASC, value ASC;
 SELECT DEST2.* FROM DEST2 ORDER BY key ASC, value ASC;
diff --git a/src/ql/src/test/queries/clientpositive/groupby8_map_skew.q b/src/ql/src/test/queries/clientpositive/groupby8_map_skew.q
index 846fd01..b5e1f63 100644
--- a/src/ql/src/test/queries/clientpositive/groupby8_map_skew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby8_map_skew.q
@@ -14,6 +14,6 @@ FROM SRC
 INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, COUNT(DISTINCT SUBSTR(SRC.value,5)) GROUP BY SRC.key
 INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, COUNT(DISTINCT SUBSTR(SRC.value,5)) GROUP BY SRC.key;
 
-SELECT DEST1.* FROM DEST1;
-SELECT DEST2.* FROM DEST2;
+SELECT DEST1.* FROM DEST1 ORDER BY key;
+SELECT DEST2.* FROM DEST2 ORDER BY key;
 
diff --git a/src/ql/src/test/queries/clientpositive/groupby8_noskew.q b/src/ql/src/test/queries/clientpositive/groupby8_noskew.q
index 20c8bef..da85504 100644
--- a/src/ql/src/test/queries/clientpositive/groupby8_noskew.q
+++ b/src/ql/src/test/queries/clientpositive/groupby8_noskew.q
@@ -15,5 +15,5 @@ FROM SRC
 INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, COUNT(DISTINCT SUBSTR(SRC.value,5)) GROUP BY SRC.key
 INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, COUNT(DISTINCT SUBSTR(SRC.value,5)) GROUP BY SRC.key;
 
-SELECT DEST1.* FROM DEST1;
-SELECT DEST2.* FROM DEST2;
+SELECT DEST1.* FROM DEST1 ORDER BY key;
+SELECT DEST2.* FROM DEST2 ORDER BY key;
diff --git a/src/ql/src/test/queries/clientpositive/groupby_map_ppr_multi_distinct.q b/src/ql/src/test/queries/clientpositive/groupby_map_ppr_multi_distinct.q
index b863344..cb3ee82 100644
--- a/src/ql/src/test/queries/clientpositive/groupby_map_ppr_multi_distinct.q
+++ b/src/ql/src/test/queries/clientpositive/groupby_map_ppr_multi_distinct.q
@@ -17,4 +17,4 @@ SELECT substr(src.key,1,1), count(DISTINCT substr(src.value,5)), concat(substr(s
 WHERE src.ds = '2008-04-08'
 GROUP BY substr(src.key,1,1);
 
-SELECT dest1.* FROM dest1;
+SELECT dest1.* FROM dest1 ORDER BY key;
diff --git a/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out
index cf1f9de..9052b92 100644
--- a/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby1_map_skew.q.out
@@ -138,30 +138,83 @@ POSTHOOK: Input: default@src
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	0.0
+2	2.0
+4	4.0
+5	15.0
+8	8.0
+9	9.0
 10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
+51	102.0
+53	53.0
+54	54.0
+57	57.0
+58	116.0
+64	64.0
+65	65.0
+66	66.0
+67	134.0
+69	69.0
+70	210.0
+72	144.0
+74	74.0
+76	152.0
+77	77.0
+78	78.0
+80	80.0
+82	82.0
+83	166.0
+84	168.0
+85	85.0
+86	86.0
+87	87.0
+90	270.0
+92	92.0
+95	190.0
+96	96.0
+97	194.0
+98	196.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -177,7 +230,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -194,7 +246,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -203,14 +254,12 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -220,8 +269,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -249,7 +296,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -261,20 +307,17 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -289,7 +332,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -307,7 +349,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -315,13 +356,11 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -333,7 +372,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -351,7 +389,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -360,19 +397,16 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -381,7 +415,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -401,7 +434,6 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -425,35 +457,3 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	496.0
 497	497.0
 498	1494.0
-5	15.0
-51	102.0
-53	53.0
-54	54.0
-57	57.0
-58	116.0
-64	64.0
-65	65.0
-66	66.0
-67	134.0
-69	69.0
-70	210.0
-72	144.0
-74	74.0
-76	152.0
-77	77.0
-78	78.0
-8	8.0
-80	80.0
-82	82.0
-83	166.0
-84	168.0
-85	85.0
-86	86.0
-87	87.0
-9	9.0
-90	270.0
-92	92.0
-95	190.0
-96	96.0
-97	194.0
-98	196.0
diff --git a/src/ql/src/test/results/clientpositive/groupby1_noskew.q.out b/src/ql/src/test/results/clientpositive/groupby1_noskew.q.out
index 896f72c..eac9ed0 100644
--- a/src/ql/src/test/results/clientpositive/groupby1_noskew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby1_noskew.q.out
@@ -93,30 +93,83 @@ POSTHOOK: Input: default@src
 POSTHOOK: Output: default@dest_g1
 POSTHOOK: Lineage: dest_g1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT dest_g1.* FROM dest_g1
+PREHOOK: query: SELECT dest_g1.* FROM dest_g1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest_g1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest_g1.* FROM dest_g1
+POSTHOOK: query: SELECT dest_g1.* FROM dest_g1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest_g1
 #### A masked pattern was here ####
 POSTHOOK: Lineage: dest_g1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	0.0
+2	2.0
+4	4.0
+5	15.0
+8	8.0
+9	9.0
 10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
+51	102.0
+53	53.0
+54	54.0
+57	57.0
+58	116.0
+64	64.0
+65	65.0
+66	66.0
+67	134.0
+69	69.0
+70	210.0
+72	144.0
+74	74.0
+76	152.0
+77	77.0
+78	78.0
+80	80.0
+82	82.0
+83	166.0
+84	168.0
+85	85.0
+86	86.0
+87	87.0
+90	270.0
+92	92.0
+95	190.0
+96	96.0
+97	194.0
+98	196.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -132,7 +185,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -149,7 +201,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -158,14 +209,12 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -175,8 +224,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -204,7 +251,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -216,20 +262,17 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -244,7 +287,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -262,7 +304,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -270,13 +311,11 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -288,7 +327,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -306,7 +344,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -315,19 +352,16 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -336,7 +370,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -356,7 +389,6 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -380,35 +412,3 @@ POSTHOOK: Lineage: dest_g1.value EXPRESSION [(src)src.FieldSchema(name:value, ty
 496	496.0
 497	497.0
 498	1494.0
-5	15.0
-51	102.0
-53	53.0
-54	54.0
-57	57.0
-58	116.0
-64	64.0
-65	65.0
-66	66.0
-67	134.0
-69	69.0
-70	210.0
-72	144.0
-74	74.0
-76	152.0
-77	77.0
-78	78.0
-8	8.0
-80	80.0
-82	82.0
-83	166.0
-84	168.0
-85	85.0
-86	86.0
-87	87.0
-9	9.0
-90	270.0
-92	92.0
-95	190.0
-96	96.0
-97	194.0
-98	196.0
diff --git a/src/ql/src/test/results/clientpositive/groupby2_limit.q.out b/src/ql/src/test/results/clientpositive/groupby2_limit.q.out
index 2e28ab1..18d127d 100644
--- a/src/ql/src/test/results/clientpositive/groupby2_limit.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby2_limit.q.out
@@ -1,14 +1,15 @@
 PREHOOK: query: EXPLAIN
-SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key LIMIT 5
+SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key ORDER BY key LIMIT 5
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN
-SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key LIMIT 5
+SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key ORDER BY key LIMIT 5
 POSTHOOK: type: QUERY
 ABSTRACT SYNTAX TREE:
-  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key)) (TOK_LIMIT 5)))
+  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME src))) (TOK_INSERT (TOK_DESTINATION (TOK_DIR TOK_TMP_FILE)) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL src) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION substr (. (TOK_TABLE_OR_COL src) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL src) key)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key))) (TOK_LIMIT 5)))
 
 STAGE DEPENDENCIES:
   Stage-1 is a root stage
+  Stage-2 depends on stages: Stage-1
   Stage-0 is a root stage
 
 STAGE PLANS:
@@ -63,25 +64,51 @@ STAGE PLANS:
                   expr: _col1
                   type: double
             outputColumnNames: _col0, _col1
-            Limit
-              File Output Operator
-                compressed: false
-                GlobalTableId: 0
-                table:
-                    input format: org.apache.hadoop.mapred.TextInputFormat
-                    output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
-                    serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
+            File Output Operator
+              compressed: false
+              GlobalTableId: 0
+              table:
+                  input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+                  output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
+                  serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
+
+  Stage: Stage-2
+    Map Reduce
+      Alias -> Map Operator Tree:
+#### A masked pattern was here ####
+          TableScan
+            Reduce Output Operator
+              key expressions:
+                    expr: _col0
+                    type: string
+              sort order: +
+              tag: -1
+              value expressions:
+                    expr: _col0
+                    type: string
+                    expr: _col1
+                    type: double
+      Reduce Operator Tree:
+        Extract
+          Limit
+            File Output Operator
+              compressed: false
+              GlobalTableId: 0
+              table:
+                  input format: org.apache.hadoop.mapred.TextInputFormat
+                  output format: org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat
+                  serde: org.apache.hadoop.hive.serde2.lazy.LazySimpleSerDe
 
   Stage: Stage-0
     Fetch Operator
       limit: 5
 
 
-PREHOOK: query: SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key LIMIT 5
+PREHOOK: query: SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key ORDER BY key LIMIT 5
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key LIMIT 5
+POSTHOOK: query: SELECT src.key, sum(substr(src.value,5)) FROM src GROUP BY src.key ORDER BY key LIMIT 5
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/groupby2_map.q.out b/src/ql/src/test/results/clientpositive/groupby2_map.q.out
index 392463f..848ed32 100644
--- a/src/ql/src/test/results/clientpositive/groupby2_map.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby2_map.q.out
@@ -117,11 +117,11 @@ POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.c1 EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.c2 EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/groupby2_map_multi_distinct.q.out b/src/ql/src/test/results/clientpositive/groupby2_map_multi_distinct.q.out
index 8de3728..654b820 100644
--- a/src/ql/src/test/results/clientpositive/groupby2_map_multi_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby2_map_multi_distinct.q.out
@@ -131,11 +131,11 @@ POSTHOOK: Lineage: dest1.c2 EXPRESSION [(src)src.FieldSchema(name:key, type:stri
 POSTHOOK: Lineage: dest1.c3 EXPRESSION [(src)src.null, ]
 POSTHOOK: Lineage: dest1.c4 EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
@@ -296,11 +296,11 @@ POSTHOOK: Lineage: dest1.c4 EXPRESSION [(src)src.FieldSchema(name:value, type:st
 POSTHOOK: Lineage: dest1.c4 EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/groupby2_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby2_map_skew.q.out
index a495aa6..17bd654 100644
--- a/src/ql/src/test/results/clientpositive/groupby2_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby2_map_skew.q.out
@@ -117,11 +117,11 @@ POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.c1 EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.c2 EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), (src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/groupby4_noskew.q.out b/src/ql/src/test/results/clientpositive/groupby4_noskew.q.out
index a4ccfe2..3bfa1b4 100644
--- a/src/ql/src/test/results/clientpositive/groupby4_noskew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby4_noskew.q.out
@@ -87,11 +87,11 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.c1 EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY c1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY c1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/groupby6_noskew.q.out b/src/ql/src/test/results/clientpositive/groupby6_noskew.q.out
index 5899b19..0e6eade 100644
--- a/src/ql/src/test/results/clientpositive/groupby6_noskew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby6_noskew.q.out
@@ -87,11 +87,11 @@ POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Output: default@dest1
 POSTHOOK: Lineage: dest1.c1 EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY c1
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY c1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/groupby7_map.q.out b/src/ql/src/test/results/clientpositive/groupby7_map.q.out
index 7c0ac7c..8f369cc 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_map.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_map.q.out
@@ -201,11 +201,11 @@ POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT DEST1.* FROM DEST1
+PREHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST1.* FROM DEST1
+POSTHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
@@ -214,19 +214,72 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	0.0
+2	2.0
+4	4.0
+5	15.0
+8	8.0
+9	9.0
 10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
+51	102.0
+53	53.0
+54	54.0
+57	57.0
+58	116.0
+64	64.0
+65	65.0
+66	66.0
+67	134.0
+69	69.0
+70	210.0
+72	144.0
+74	74.0
+76	152.0
+77	77.0
+78	78.0
+80	80.0
+82	82.0
+83	166.0
+84	168.0
+85	85.0
+86	86.0
+87	87.0
+90	270.0
+92	92.0
+95	190.0
+96	96.0
+97	194.0
+98	196.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -242,7 +295,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -259,7 +311,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -268,14 +319,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -285,8 +334,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -314,7 +361,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -326,20 +372,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -354,7 +397,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -372,7 +414,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -380,13 +421,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -398,7 +437,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -416,7 +454,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -425,19 +462,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -446,7 +480,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -466,7 +499,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -490,7 +522,46 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	496.0
 497	497.0
 498	1494.0
+PREHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+PREHOOK: type: QUERY
+PREHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+0	0.0
+2	2.0
+4	4.0
 5	15.0
+8	8.0
+9	9.0
+10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
 51	102.0
 53	53.0
 54	54.0
@@ -507,7 +578,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 76	152.0
 77	77.0
 78	78.0
-8	8.0
 80	80.0
 82	82.0
 83	166.0
@@ -515,39 +585,22 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 85	85.0
 86	86.0
 87	87.0
-9	9.0
 90	270.0
 92	92.0
 95	190.0
 96	96.0
 97	194.0
 98	196.0
-PREHOOK: query: SELECT DEST2.* FROM DEST2
-PREHOOK: type: QUERY
-PREHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST2.* FROM DEST2
-POSTHOOK: type: QUERY
-POSTHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-0	0.0
-10	10.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -563,7 +616,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -580,7 +632,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -589,14 +640,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -606,8 +655,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -635,7 +682,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -647,20 +693,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -675,7 +718,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -693,7 +735,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -701,13 +742,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -719,7 +758,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -737,7 +775,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -746,19 +783,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -767,7 +801,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -787,7 +820,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -811,35 +843,3 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	496.0
 497	497.0
 498	1494.0
-5	15.0
-51	102.0
-53	53.0
-54	54.0
-57	57.0
-58	116.0
-64	64.0
-65	65.0
-66	66.0
-67	134.0
-69	69.0
-70	210.0
-72	144.0
-74	74.0
-76	152.0
-77	77.0
-78	78.0
-8	8.0
-80	80.0
-82	82.0
-83	166.0
-84	168.0
-85	85.0
-86	86.0
-87	87.0
-9	9.0
-90	270.0
-92	92.0
-95	190.0
-96	96.0
-97	194.0
-98	196.0
diff --git a/src/ql/src/test/results/clientpositive/groupby7_map_multi_single_reducer.q.out b/src/ql/src/test/results/clientpositive/groupby7_map_multi_single_reducer.q.out
index d7e6040..0fdd66e 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_map_multi_single_reducer.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_map_multi_single_reducer.q.out
@@ -150,11 +150,11 @@ POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT DEST1.* FROM DEST1
+PREHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST1.* FROM DEST1
+POSTHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
@@ -163,19 +163,72 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	0.0
+2	2.0
+4	4.0
+5	15.0
+8	8.0
+9	9.0
 10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
+51	102.0
+53	53.0
+54	54.0
+57	57.0
+58	116.0
+64	64.0
+65	65.0
+66	66.0
+67	134.0
+69	69.0
+70	210.0
+72	144.0
+74	74.0
+76	152.0
+77	77.0
+78	78.0
+80	80.0
+82	82.0
+83	166.0
+84	168.0
+85	85.0
+86	86.0
+87	87.0
+90	270.0
+92	92.0
+95	190.0
+96	96.0
+97	194.0
+98	196.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -191,7 +244,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -208,7 +260,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -217,14 +268,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -234,8 +283,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -263,7 +310,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -275,20 +321,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -303,7 +346,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -321,7 +363,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -329,13 +370,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -347,7 +386,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -365,7 +403,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -374,19 +411,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -395,7 +429,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -415,7 +448,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -439,7 +471,46 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	496.0
 497	497.0
 498	1494.0
+PREHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+PREHOOK: type: QUERY
+PREHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+0	0.0
+2	2.0
+4	4.0
 5	15.0
+8	8.0
+9	9.0
+10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
 51	102.0
 53	53.0
 54	54.0
@@ -456,7 +527,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 76	152.0
 77	77.0
 78	78.0
-8	8.0
 80	80.0
 82	82.0
 83	166.0
@@ -464,39 +534,22 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 85	85.0
 86	86.0
 87	87.0
-9	9.0
 90	270.0
 92	92.0
 95	190.0
 96	96.0
 97	194.0
 98	196.0
-PREHOOK: query: SELECT DEST2.* FROM DEST2
-PREHOOK: type: QUERY
-PREHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST2.* FROM DEST2
-POSTHOOK: type: QUERY
-POSTHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-0	0.0
-10	10.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -512,7 +565,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -529,7 +581,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -538,14 +589,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -555,8 +604,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -584,7 +631,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -596,20 +642,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -624,7 +667,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -642,7 +684,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -650,13 +691,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -668,7 +707,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -686,7 +724,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -695,19 +732,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -716,7 +750,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -736,7 +769,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -760,35 +792,3 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	496.0
 497	497.0
 498	1494.0
-5	15.0
-51	102.0
-53	53.0
-54	54.0
-57	57.0
-58	116.0
-64	64.0
-65	65.0
-66	66.0
-67	134.0
-69	69.0
-70	210.0
-72	144.0
-74	74.0
-76	152.0
-77	77.0
-78	78.0
-8	8.0
-80	80.0
-82	82.0
-83	166.0
-84	168.0
-85	85.0
-86	86.0
-87	87.0
-9	9.0
-90	270.0
-92	92.0
-95	190.0
-96	96.0
-97	194.0
-98	196.0
diff --git a/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out
index 05012ee..fbaa317 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_map_skew.q.out
@@ -273,11 +273,11 @@ POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT DEST1.* FROM DEST1
+PREHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST1.* FROM DEST1
+POSTHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
@@ -286,19 +286,72 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	0.0
+2	2.0
+4	4.0
+5	15.0
+8	8.0
+9	9.0
 10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
+51	102.0
+53	53.0
+54	54.0
+57	57.0
+58	116.0
+64	64.0
+65	65.0
+66	66.0
+67	134.0
+69	69.0
+70	210.0
+72	144.0
+74	74.0
+76	152.0
+77	77.0
+78	78.0
+80	80.0
+82	82.0
+83	166.0
+84	168.0
+85	85.0
+86	86.0
+87	87.0
+90	270.0
+92	92.0
+95	190.0
+96	96.0
+97	194.0
+98	196.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -314,7 +367,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -331,7 +383,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -340,14 +391,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -357,8 +406,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -386,7 +433,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -398,20 +444,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -426,7 +469,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -444,7 +486,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -452,13 +493,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -470,7 +509,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -488,7 +526,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -497,19 +534,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -518,7 +552,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -538,7 +571,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -562,7 +594,46 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	496.0
 497	497.0
 498	1494.0
+PREHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+PREHOOK: type: QUERY
+PREHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+0	0.0
+2	2.0
+4	4.0
 5	15.0
+8	8.0
+9	9.0
+10	10.0
+11	11.0
+12	24.0
+15	30.0
+17	17.0
+18	36.0
+19	19.0
+20	20.0
+24	48.0
+26	52.0
+27	27.0
+28	28.0
+30	30.0
+33	33.0
+34	34.0
+35	105.0
+37	74.0
+41	41.0
+42	84.0
+43	43.0
+44	44.0
+47	47.0
 51	102.0
 53	53.0
 54	54.0
@@ -579,7 +650,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 76	152.0
 77	77.0
 78	78.0
-8	8.0
 80	80.0
 82	82.0
 83	166.0
@@ -587,39 +657,22 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 85	85.0
 86	86.0
 87	87.0
-9	9.0
 90	270.0
 92	92.0
 95	190.0
 96	96.0
 97	194.0
 98	196.0
-PREHOOK: query: SELECT DEST2.* FROM DEST2
-PREHOOK: type: QUERY
-PREHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST2.* FROM DEST2
-POSTHOOK: type: QUERY
-POSTHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-0	0.0
-10	10.0
 100	200.0
 103	206.0
 104	208.0
 105	105.0
-11	11.0
 111	111.0
 113	226.0
 114	114.0
 116	116.0
 118	236.0
 119	357.0
-12	24.0
 120	240.0
 125	250.0
 126	126.0
@@ -635,7 +688,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	145.0
 146	292.0
 149	298.0
-15	30.0
 150	150.0
 152	304.0
 153	153.0
@@ -652,7 +704,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	501.0
 168	168.0
 169	676.0
-17	17.0
 170	170.0
 172	344.0
 174	348.0
@@ -661,14 +712,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	177.0
 178	178.0
 179	358.0
-18	36.0
 180	180.0
 181	181.0
 183	183.0
 186	186.0
 187	561.0
 189	189.0
-19	19.0
 190	190.0
 191	382.0
 192	192.0
@@ -678,8 +727,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	196.0
 197	394.0
 199	597.0
-2	2.0
-20	20.0
 200	400.0
 201	201.0
 202	202.0
@@ -707,7 +754,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	474.0
 238	476.0
 239	478.0
-24	48.0
 241	241.0
 242	484.0
 244	244.0
@@ -719,20 +765,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	512.0
 257	257.0
 258	258.0
-26	52.0
 260	260.0
 262	262.0
 263	263.0
 265	530.0
 266	266.0
-27	27.0
 272	544.0
 273	819.0
 274	274.0
 275	275.0
 277	1108.0
 278	556.0
-28	28.0
 280	560.0
 281	562.0
 282	564.0
@@ -747,7 +790,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	292.0
 296	296.0
 298	894.0
-30	30.0
 302	302.0
 305	305.0
 306	306.0
@@ -765,7 +807,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	323.0
 325	650.0
 327	981.0
-33	33.0
 331	662.0
 332	332.0
 333	666.0
@@ -773,13 +814,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	336.0
 338	338.0
 339	339.0
-34	34.0
 341	341.0
 342	684.0
 344	688.0
 345	345.0
 348	1740.0
-35	105.0
 351	351.0
 353	706.0
 356	356.0
@@ -791,7 +830,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	734.0
 368	368.0
 369	1107.0
-37	74.0
 373	373.0
 374	374.0
 375	375.0
@@ -809,7 +847,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1188.0
 397	794.0
 399	798.0
-4	4.0
 400	400.0
 401	2005.0
 402	402.0
@@ -818,19 +855,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1624.0
 407	407.0
 409	1227.0
-41	41.0
 411	411.0
 413	826.0
 414	828.0
 417	1251.0
 418	418.0
 419	419.0
-42	84.0
 421	421.0
 424	848.0
 427	427.0
 429	858.0
-43	43.0
 430	1290.0
 431	1293.0
 432	432.0
@@ -839,7 +873,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	437.0
 438	1314.0
 439	878.0
-44	44.0
 443	443.0
 444	444.0
 446	446.0
@@ -859,7 +892,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	467.0
 468	1872.0
 469	2345.0
-47	47.0
 470	470.0
 472	472.0
 475	475.0
@@ -883,35 +915,3 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	496.0
 497	497.0
 498	1494.0
-5	15.0
-51	102.0
-53	53.0
-54	54.0
-57	57.0
-58	116.0
-64	64.0
-65	65.0
-66	66.0
-67	134.0
-69	69.0
-70	210.0
-72	144.0
-74	74.0
-76	152.0
-77	77.0
-78	78.0
-8	8.0
-80	80.0
-82	82.0
-83	166.0
-84	168.0
-85	85.0
-86	86.0
-87	87.0
-9	9.0
-90	270.0
-92	92.0
-95	190.0
-96	96.0
-97	194.0
-98	196.0
diff --git a/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out b/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out
index fe0f1f5..a386ba5 100644
--- a/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby7_noskew_multi_single_reducer.q.out
@@ -10,16 +10,16 @@ POSTHOOK: type: CREATETABLE
 POSTHOOK: Output: default@DEST2
 PREHOOK: query: EXPLAIN
 FROM SRC
-INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
-INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
+INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
+INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
 PREHOOK: type: QUERY
 POSTHOOK: query: EXPLAIN
 FROM SRC
-INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
-INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
+INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
+INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
 POSTHOOK: type: QUERY
 ABSTRACT SYNTAX TREE:
-  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME SRC))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME DEST1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL SRC) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION SUBSTR (. (TOK_TABLE_OR_COL SRC) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL SRC) key)) (TOK_LIMIT 10)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME DEST2))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL SRC) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION SUBSTR (. (TOK_TABLE_OR_COL SRC) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL SRC) key)) (TOK_LIMIT 10)))
+  (TOK_QUERY (TOK_FROM (TOK_TABREF (TOK_TABNAME SRC))) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME DEST1))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL SRC) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION SUBSTR (. (TOK_TABLE_OR_COL SRC) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL SRC) key)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key))) (TOK_LIMIT 10)) (TOK_INSERT (TOK_DESTINATION (TOK_TAB (TOK_TABNAME DEST2))) (TOK_SELECT (TOK_SELEXPR (. (TOK_TABLE_OR_COL SRC) key)) (TOK_SELEXPR (TOK_FUNCTION sum (TOK_FUNCTION SUBSTR (. (TOK_TABLE_OR_COL SRC) value) 5)))) (TOK_GROUPBY (. (TOK_TABLE_OR_COL SRC) key)) (TOK_ORDERBY (TOK_TABSORTCOLNAMEASC (TOK_TABLE_OR_COL key))) (TOK_LIMIT 10)))
 
 STAGE DEPENDENCIES:
   Stage-2 is a root stage
@@ -74,14 +74,13 @@ STAGE PLANS:
                     expr: _col1
                     type: double
               outputColumnNames: _col0, _col1
-              Limit
-                File Output Operator
-                  compressed: true
-                  GlobalTableId: 0
-                  table:
-                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
-                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
-                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
+              File Output Operator
+                compressed: true
+                GlobalTableId: 0
+                table:
+                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
+                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
           Group By Operator
             aggregations:
                   expr: sum(VALUE._col0)
@@ -98,14 +97,13 @@ STAGE PLANS:
                     expr: _col1
                     type: double
               outputColumnNames: _col0, _col1
-              Limit
-                File Output Operator
-                  compressed: true
-                  GlobalTableId: 0
-                  table:
-                      input format: org.apache.hadoop.mapred.SequenceFileInputFormat
-                      output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
-                      serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
+              File Output Operator
+                compressed: true
+                GlobalTableId: 0
+                table:
+                    input format: org.apache.hadoop.mapred.SequenceFileInputFormat
+                    output format: org.apache.hadoop.hive.ql.io.HiveSequenceFileOutputFormat
+                    serde: org.apache.hadoop.hive.serde2.lazybinary.LazyBinarySerDe
 
   Stage: Stage-3
     Map Reduce
@@ -113,7 +111,10 @@ STAGE PLANS:
 #### A masked pattern was here ####
           TableScan
             Reduce Output Operator
-              sort order: 
+              key expressions:
+                    expr: _col0
+                    type: string
+              sort order: +
               tag: -1
               value expressions:
                     expr: _col0
@@ -158,7 +159,10 @@ STAGE PLANS:
 #### A masked pattern was here ####
           TableScan
             Reduce Output Operator
-              sort order: 
+              key expressions:
+                    expr: _col0
+                    type: string
+              sort order: +
               tag: -1
               value expressions:
                     expr: _col0
@@ -199,15 +203,15 @@ STAGE PLANS:
 
 
 PREHOOK: query: FROM SRC
-INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
-INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
+INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
+INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src
 PREHOOK: Output: default@dest1
 PREHOOK: Output: default@dest2
 POSTHOOK: query: FROM SRC
-INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
-INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key limit 10
+INSERT OVERWRITE TABLE DEST1 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
+INSERT OVERWRITE TABLE DEST2 SELECT SRC.key, sum(SUBSTR(SRC.value,5)) GROUP BY SRC.key ORDER BY key limit 10
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 POSTHOOK: Output: default@dest1
diff --git a/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out b/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out
index 2f94e6f..eaf06f0 100644
--- a/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby8_map_skew.q.out
@@ -215,11 +215,11 @@ POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT DEST1.* FROM DEST1
+PREHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST1.* FROM DEST1
+POSTHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
@@ -228,19 +228,72 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	1
+2	1
+4	1
+5	1
+8	1
+9	1
 10	1
+11	1
+12	1
+15	1
+17	1
+18	1
+19	1
+20	1
+24	1
+26	1
+27	1
+28	1
+30	1
+33	1
+34	1
+35	1
+37	1
+41	1
+42	1
+43	1
+44	1
+47	1
+51	1
+53	1
+54	1
+57	1
+58	1
+64	1
+65	1
+66	1
+67	1
+69	1
+70	1
+72	1
+74	1
+76	1
+77	1
+78	1
+80	1
+82	1
+83	1
+84	1
+85	1
+86	1
+87	1
+90	1
+92	1
+95	1
+96	1
+97	1
+98	1
 100	1
 103	1
 104	1
 105	1
-11	1
 111	1
 113	1
 114	1
 116	1
 118	1
 119	1
-12	1
 120	1
 125	1
 126	1
@@ -256,7 +309,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	1
 146	1
 149	1
-15	1
 150	1
 152	1
 153	1
@@ -273,7 +325,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	1
 168	1
 169	1
-17	1
 170	1
 172	1
 174	1
@@ -282,14 +333,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	1
 178	1
 179	1
-18	1
 180	1
 181	1
 183	1
 186	1
 187	1
 189	1
-19	1
 190	1
 191	1
 192	1
@@ -299,8 +348,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	1
 197	1
 199	1
-2	1
-20	1
 200	1
 201	1
 202	1
@@ -328,7 +375,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	1
 238	1
 239	1
-24	1
 241	1
 242	1
 244	1
@@ -340,20 +386,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	1
 257	1
 258	1
-26	1
 260	1
 262	1
 263	1
 265	1
 266	1
-27	1
 272	1
 273	1
 274	1
 275	1
 277	1
 278	1
-28	1
 280	1
 281	1
 282	1
@@ -368,7 +411,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	1
 296	1
 298	1
-30	1
 302	1
 305	1
 306	1
@@ -386,7 +428,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	1
 325	1
 327	1
-33	1
 331	1
 332	1
 333	1
@@ -394,13 +435,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	1
 338	1
 339	1
-34	1
 341	1
 342	1
 344	1
 345	1
 348	1
-35	1
 351	1
 353	1
 356	1
@@ -412,7 +451,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	1
 368	1
 369	1
-37	1
 373	1
 374	1
 375	1
@@ -430,7 +468,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1
 397	1
 399	1
-4	1
 400	1
 401	1
 402	1
@@ -439,19 +476,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1
 407	1
 409	1
-41	1
 411	1
 413	1
 414	1
 417	1
 418	1
 419	1
-42	1
 421	1
 424	1
 427	1
 429	1
-43	1
 430	1
 431	1
 432	1
@@ -460,7 +494,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	1
 438	1
 439	1
-44	1
 443	1
 444	1
 446	1
@@ -480,7 +513,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	1
 468	1
 469	1
-47	1
 470	1
 472	1
 475	1
@@ -504,7 +536,46 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	1
 497	1
 498	1
+PREHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+PREHOOK: type: QUERY
+PREHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+0	1
+2	1
+4	1
 5	1
+8	1
+9	1
+10	1
+11	1
+12	1
+15	1
+17	1
+18	1
+19	1
+20	1
+24	1
+26	1
+27	1
+28	1
+30	1
+33	1
+34	1
+35	1
+37	1
+41	1
+42	1
+43	1
+44	1
+47	1
 51	1
 53	1
 54	1
@@ -521,7 +592,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 76	1
 77	1
 78	1
-8	1
 80	1
 82	1
 83	1
@@ -529,39 +599,22 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 85	1
 86	1
 87	1
-9	1
 90	1
 92	1
 95	1
 96	1
 97	1
 98	1
-PREHOOK: query: SELECT DEST2.* FROM DEST2
-PREHOOK: type: QUERY
-PREHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST2.* FROM DEST2
-POSTHOOK: type: QUERY
-POSTHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-0	1
-10	1
 100	1
 103	1
 104	1
 105	1
-11	1
 111	1
 113	1
 114	1
 116	1
 118	1
 119	1
-12	1
 120	1
 125	1
 126	1
@@ -577,7 +630,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	1
 146	1
 149	1
-15	1
 150	1
 152	1
 153	1
@@ -594,7 +646,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	1
 168	1
 169	1
-17	1
 170	1
 172	1
 174	1
@@ -603,14 +654,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	1
 178	1
 179	1
-18	1
 180	1
 181	1
 183	1
 186	1
 187	1
 189	1
-19	1
 190	1
 191	1
 192	1
@@ -620,8 +669,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	1
 197	1
 199	1
-2	1
-20	1
 200	1
 201	1
 202	1
@@ -649,7 +696,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	1
 238	1
 239	1
-24	1
 241	1
 242	1
 244	1
@@ -661,20 +707,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	1
 257	1
 258	1
-26	1
 260	1
 262	1
 263	1
 265	1
 266	1
-27	1
 272	1
 273	1
 274	1
 275	1
 277	1
 278	1
-28	1
 280	1
 281	1
 282	1
@@ -689,7 +732,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	1
 296	1
 298	1
-30	1
 302	1
 305	1
 306	1
@@ -707,7 +749,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	1
 325	1
 327	1
-33	1
 331	1
 332	1
 333	1
@@ -715,13 +756,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	1
 338	1
 339	1
-34	1
 341	1
 342	1
 344	1
 345	1
 348	1
-35	1
 351	1
 353	1
 356	1
@@ -733,7 +772,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	1
 368	1
 369	1
-37	1
 373	1
 374	1
 375	1
@@ -751,7 +789,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1
 397	1
 399	1
-4	1
 400	1
 401	1
 402	1
@@ -760,19 +797,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1
 407	1
 409	1
-41	1
 411	1
 413	1
 414	1
 417	1
 418	1
 419	1
-42	1
 421	1
 424	1
 427	1
 429	1
-43	1
 430	1
 431	1
 432	1
@@ -781,7 +815,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	1
 438	1
 439	1
-44	1
 443	1
 444	1
 446	1
@@ -801,7 +834,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	1
 468	1
 469	1
-47	1
 470	1
 472	1
 475	1
@@ -825,35 +857,3 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	1
 497	1
 498	1
-5	1
-51	1
-53	1
-54	1
-57	1
-58	1
-64	1
-65	1
-66	1
-67	1
-69	1
-70	1
-72	1
-74	1
-76	1
-77	1
-78	1
-8	1
-80	1
-82	1
-83	1
-84	1
-85	1
-86	1
-87	1
-9	1
-90	1
-92	1
-95	1
-96	1
-97	1
-98	1
diff --git a/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out b/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out
index 2f94e6f..eaf06f0 100644
--- a/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby8_noskew.q.out
@@ -215,11 +215,11 @@ POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:str
 POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-PREHOOK: query: SELECT DEST1.* FROM DEST1
+PREHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST1.* FROM DEST1
+POSTHOOK: query: SELECT DEST1.* FROM DEST1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
@@ -228,19 +228,72 @@ POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type
 POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
 POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
 0	1
+2	1
+4	1
+5	1
+8	1
+9	1
 10	1
+11	1
+12	1
+15	1
+17	1
+18	1
+19	1
+20	1
+24	1
+26	1
+27	1
+28	1
+30	1
+33	1
+34	1
+35	1
+37	1
+41	1
+42	1
+43	1
+44	1
+47	1
+51	1
+53	1
+54	1
+57	1
+58	1
+64	1
+65	1
+66	1
+67	1
+69	1
+70	1
+72	1
+74	1
+76	1
+77	1
+78	1
+80	1
+82	1
+83	1
+84	1
+85	1
+86	1
+87	1
+90	1
+92	1
+95	1
+96	1
+97	1
+98	1
 100	1
 103	1
 104	1
 105	1
-11	1
 111	1
 113	1
 114	1
 116	1
 118	1
 119	1
-12	1
 120	1
 125	1
 126	1
@@ -256,7 +309,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	1
 146	1
 149	1
-15	1
 150	1
 152	1
 153	1
@@ -273,7 +325,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	1
 168	1
 169	1
-17	1
 170	1
 172	1
 174	1
@@ -282,14 +333,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	1
 178	1
 179	1
-18	1
 180	1
 181	1
 183	1
 186	1
 187	1
 189	1
-19	1
 190	1
 191	1
 192	1
@@ -299,8 +348,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	1
 197	1
 199	1
-2	1
-20	1
 200	1
 201	1
 202	1
@@ -328,7 +375,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	1
 238	1
 239	1
-24	1
 241	1
 242	1
 244	1
@@ -340,20 +386,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	1
 257	1
 258	1
-26	1
 260	1
 262	1
 263	1
 265	1
 266	1
-27	1
 272	1
 273	1
 274	1
 275	1
 277	1
 278	1
-28	1
 280	1
 281	1
 282	1
@@ -368,7 +411,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	1
 296	1
 298	1
-30	1
 302	1
 305	1
 306	1
@@ -386,7 +428,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	1
 325	1
 327	1
-33	1
 331	1
 332	1
 333	1
@@ -394,13 +435,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	1
 338	1
 339	1
-34	1
 341	1
 342	1
 344	1
 345	1
 348	1
-35	1
 351	1
 353	1
 356	1
@@ -412,7 +451,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	1
 368	1
 369	1
-37	1
 373	1
 374	1
 375	1
@@ -430,7 +468,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1
 397	1
 399	1
-4	1
 400	1
 401	1
 402	1
@@ -439,19 +476,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1
 407	1
 409	1
-41	1
 411	1
 413	1
 414	1
 417	1
 418	1
 419	1
-42	1
 421	1
 424	1
 427	1
 429	1
-43	1
 430	1
 431	1
 432	1
@@ -460,7 +494,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	1
 438	1
 439	1
-44	1
 443	1
 444	1
 446	1
@@ -480,7 +513,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	1
 468	1
 469	1
-47	1
 470	1
 472	1
 475	1
@@ -504,7 +536,46 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	1
 497	1
 498	1
+PREHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+PREHOOK: type: QUERY
+PREHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: query: SELECT DEST2.* FROM DEST2 ORDER BY key
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@dest2
+#### A masked pattern was here ####
+POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
+POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
+0	1
+2	1
+4	1
 5	1
+8	1
+9	1
+10	1
+11	1
+12	1
+15	1
+17	1
+18	1
+19	1
+20	1
+24	1
+26	1
+27	1
+28	1
+30	1
+33	1
+34	1
+35	1
+37	1
+41	1
+42	1
+43	1
+44	1
+47	1
 51	1
 53	1
 54	1
@@ -521,7 +592,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 76	1
 77	1
 78	1
-8	1
 80	1
 82	1
 83	1
@@ -529,39 +599,22 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 85	1
 86	1
 87	1
-9	1
 90	1
 92	1
 95	1
 96	1
 97	1
 98	1
-PREHOOK: query: SELECT DEST2.* FROM DEST2
-PREHOOK: type: QUERY
-PREHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: query: SELECT DEST2.* FROM DEST2
-POSTHOOK: type: QUERY
-POSTHOOK: Input: default@dest2
-#### A masked pattern was here ####
-POSTHOOK: Lineage: dest1.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest1.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.key EXPRESSION [(src)src.FieldSchema(name:key, type:string, comment:default), ]
-POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type:string, comment:default), ]
-0	1
-10	1
 100	1
 103	1
 104	1
 105	1
-11	1
 111	1
 113	1
 114	1
 116	1
 118	1
 119	1
-12	1
 120	1
 125	1
 126	1
@@ -577,7 +630,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 145	1
 146	1
 149	1
-15	1
 150	1
 152	1
 153	1
@@ -594,7 +646,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 167	1
 168	1
 169	1
-17	1
 170	1
 172	1
 174	1
@@ -603,14 +654,12 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 177	1
 178	1
 179	1
-18	1
 180	1
 181	1
 183	1
 186	1
 187	1
 189	1
-19	1
 190	1
 191	1
 192	1
@@ -620,8 +669,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 196	1
 197	1
 199	1
-2	1
-20	1
 200	1
 201	1
 202	1
@@ -649,7 +696,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 237	1
 238	1
 239	1
-24	1
 241	1
 242	1
 244	1
@@ -661,20 +707,17 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 256	1
 257	1
 258	1
-26	1
 260	1
 262	1
 263	1
 265	1
 266	1
-27	1
 272	1
 273	1
 274	1
 275	1
 277	1
 278	1
-28	1
 280	1
 281	1
 282	1
@@ -689,7 +732,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 292	1
 296	1
 298	1
-30	1
 302	1
 305	1
 306	1
@@ -707,7 +749,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 323	1
 325	1
 327	1
-33	1
 331	1
 332	1
 333	1
@@ -715,13 +756,11 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 336	1
 338	1
 339	1
-34	1
 341	1
 342	1
 344	1
 345	1
 348	1
-35	1
 351	1
 353	1
 356	1
@@ -733,7 +772,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 367	1
 368	1
 369	1
-37	1
 373	1
 374	1
 375	1
@@ -751,7 +789,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 396	1
 397	1
 399	1
-4	1
 400	1
 401	1
 402	1
@@ -760,19 +797,16 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 406	1
 407	1
 409	1
-41	1
 411	1
 413	1
 414	1
 417	1
 418	1
 419	1
-42	1
 421	1
 424	1
 427	1
 429	1
-43	1
 430	1
 431	1
 432	1
@@ -781,7 +815,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 437	1
 438	1
 439	1
-44	1
 443	1
 444	1
 446	1
@@ -801,7 +834,6 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 467	1
 468	1
 469	1
-47	1
 470	1
 472	1
 475	1
@@ -825,35 +857,3 @@ POSTHOOK: Lineage: dest2.value EXPRESSION [(src)src.FieldSchema(name:value, type
 496	1
 497	1
 498	1
-5	1
-51	1
-53	1
-54	1
-57	1
-58	1
-64	1
-65	1
-66	1
-67	1
-69	1
-70	1
-72	1
-74	1
-76	1
-77	1
-78	1
-8	1
-80	1
-82	1
-83	1
-84	1
-85	1
-86	1
-87	1
-9	1
-90	1
-92	1
-95	1
-96	1
-97	1
-98	1
diff --git a/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out b/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out
index 507a17a..4aeea6b 100644
--- a/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out
+++ b/src/ql/src/test/results/clientpositive/groupby_map_ppr_multi_distinct.q.out
@@ -280,11 +280,11 @@ POSTHOOK: Lineage: dest1.c2 EXPRESSION [(srcpart)src.FieldSchema(name:key, type:
 POSTHOOK: Lineage: dest1.c3 EXPRESSION [(srcpart)src.null, ]
 POSTHOOK: Lineage: dest1.c4 EXPRESSION [(srcpart)src.FieldSchema(name:value, type:string, comment:default), ]
 POSTHOOK: Lineage: dest1.key EXPRESSION [(srcpart)src.FieldSchema(name:key, type:string, comment:default), ]
-PREHOOK: query: SELECT dest1.* FROM dest1
+PREHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 PREHOOK: type: QUERY
 PREHOOK: Input: default@dest1
 #### A masked pattern was here ####
-POSTHOOK: query: SELECT dest1.* FROM dest1
+POSTHOOK: query: SELECT dest1.* FROM dest1 ORDER BY key
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@dest1
 #### A masked pattern was here ####
-- 
1.7.0.4

