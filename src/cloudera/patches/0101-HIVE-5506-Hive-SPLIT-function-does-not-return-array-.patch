From 746eb8ece60ab35c7f1ded25c546f92d24046832 Mon Sep 17 00:00:00 2001
From: Ashutosh Chauhan <hashutosh@apache.org>
Date: Tue, 22 Oct 2013 20:37:46 +0000
Subject: [PATCH 101/375] HIVE-5506 : Hive SPLIT function does not return array correctly (Vikram Dixit via Ashutosh Chauhan)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1534775 13f79535-47bb-0310-9956-ffa450edef68
---
 data/files/input.txt                               |    7 ++++
 .../hive/ql/udf/generic/GenericUDFSplit.java       |    2 +-
 ql/src/test/queries/clientpositive/split.q         |    8 +++++
 ql/src/test/results/clientpositive/split.q.out     |   34 ++++++++++++++++++++
 ql/src/test/results/clientpositive/udf_split.q.out |    2 +-
 5 files changed, 51 insertions(+), 2 deletions(-)
 create mode 100644 data/files/input.txt
 create mode 100644 ql/src/test/queries/clientpositive/split.q
 create mode 100644 ql/src/test/results/clientpositive/split.q.out

diff --git a/src/data/files/input.txt b/src/data/files/input.txt
new file mode 100644
index 0000000..caea991
--- /dev/null
+++ b/src/data/files/input.txt
@@ -0,0 +1,7 @@
+a	b	c	d	e	f	g
+a	b	c	d	e	f	g
+a	b	c	d	e	f	g
+			d	e	f	g
+a	b	c	d			
+a				e	f	g
+a			d			g
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java b/src/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java
index 1fe611d..e11f6c1 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/udf/generic/GenericUDFSplit.java
@@ -72,7 +72,7 @@ public Object evaluate(DeferredObject[] arguments) throws HiveException {
 
     ArrayList<Text> result = new ArrayList<Text>();
 
-    for (String str : s.toString().split(regex.toString())) {
+    for (String str : s.toString().split(regex.toString(), -1)) {
       result.add(new Text(str));
     }
 
diff --git a/src/ql/src/test/queries/clientpositive/split.q b/src/ql/src/test/queries/clientpositive/split.q
new file mode 100644
index 0000000..9960fd6
--- /dev/null
+++ b/src/ql/src/test/queries/clientpositive/split.q
@@ -0,0 +1,8 @@
+DROP TABLE tmp_jo_tab_test;
+CREATE table tmp_jo_tab_test (message_line STRING)
+STORED AS TEXTFILE;
+
+LOAD DATA LOCAL INPATH '../data/files/input.txt'
+OVERWRITE INTO TABLE tmp_jo_tab_test;
+
+select size(split(message_line, '\t')) from tmp_jo_tab_test;
diff --git a/src/ql/src/test/results/clientpositive/split.q.out b/src/ql/src/test/results/clientpositive/split.q.out
new file mode 100644
index 0000000..e9b53f1
--- /dev/null
+++ b/src/ql/src/test/results/clientpositive/split.q.out
@@ -0,0 +1,34 @@
+PREHOOK: query: DROP TABLE tmp_jo_tab_test
+PREHOOK: type: DROPTABLE
+POSTHOOK: query: DROP TABLE tmp_jo_tab_test
+POSTHOOK: type: DROPTABLE
+PREHOOK: query: CREATE table tmp_jo_tab_test (message_line STRING)
+STORED AS TEXTFILE
+PREHOOK: type: CREATETABLE
+POSTHOOK: query: CREATE table tmp_jo_tab_test (message_line STRING)
+STORED AS TEXTFILE
+POSTHOOK: type: CREATETABLE
+POSTHOOK: Output: default@tmp_jo_tab_test
+PREHOOK: query: LOAD DATA LOCAL INPATH '../data/files/input.txt'
+OVERWRITE INTO TABLE tmp_jo_tab_test
+PREHOOK: type: LOAD
+PREHOOK: Output: default@tmp_jo_tab_test
+POSTHOOK: query: LOAD DATA LOCAL INPATH '../data/files/input.txt'
+OVERWRITE INTO TABLE tmp_jo_tab_test
+POSTHOOK: type: LOAD
+POSTHOOK: Output: default@tmp_jo_tab_test
+PREHOOK: query: select size(split(message_line, '\t')) from tmp_jo_tab_test
+PREHOOK: type: QUERY
+PREHOOK: Input: default@tmp_jo_tab_test
+#### A masked pattern was here ####
+POSTHOOK: query: select size(split(message_line, '\t')) from tmp_jo_tab_test
+POSTHOOK: type: QUERY
+POSTHOOK: Input: default@tmp_jo_tab_test
+#### A masked pattern was here ####
+7
+7
+7
+7
+7
+7
+7
diff --git a/src/ql/src/test/results/clientpositive/udf_split.q.out b/src/ql/src/test/results/clientpositive/udf_split.q.out
index ba7f9fe..c8adca6 100644
--- a/src/ql/src/test/results/clientpositive/udf_split.q.out
+++ b/src/ql/src/test/results/clientpositive/udf_split.q.out
@@ -82,4 +82,4 @@ FROM src LIMIT 1
 POSTHOOK: type: QUERY
 POSTHOOK: Input: default@src
 #### A masked pattern was here ####
-["a","b","c"]	["one","two","three"]	[]	["5","4","1","2"]
+["a","b","c"]	["one","two","three",""]	[]	["5","4","1","2",""]
-- 
1.7.0.4

