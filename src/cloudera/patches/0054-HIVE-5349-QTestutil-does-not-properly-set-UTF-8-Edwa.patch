From b80ecf22acebfb218fd24f8af94d88790ac81cba Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Wed, 25 Sep 2013 19:18:40 +0000
Subject: [PATCH 054/375] HIVE-5349 - QTestutil does not properly set UTF-8 (Edward Capriolo via Brock Noland)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1526270 13f79535-47bb-0310-9956-ffa450edef68
---
 .../test/org/apache/hadoop/hive/ql/QTestUtil.java  |   39 +++++++++++---------
 1 files changed, 21 insertions(+), 18 deletions(-)

diff --git a/src/ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java b/src/ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java
index 75b8a5f..fde2c02 100644
--- a/src/ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java
+++ b/src/ql/src/test/org/apache/hadoop/hive/ql/QTestUtil.java
@@ -29,9 +29,11 @@
 import java.io.FileOutputStream;
 import java.io.FileReader;
 import java.io.FileWriter;
+import java.io.IOException;
 import java.io.InputStreamReader;
 import java.io.PrintStream;
 import java.io.Serializable;
+import java.io.StringWriter;
 import java.io.UnsupportedEncodingException;
 import java.util.ArrayList;
 import java.util.Arrays;
@@ -46,6 +48,7 @@
 import java.util.regex.Matcher;
 import java.util.regex.Pattern;
 
+import org.apache.commons.io.IOUtils;
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
 import org.apache.hadoop.fs.FileStatus;
@@ -91,6 +94,7 @@
  */
 public class QTestUtil {
 
+  public static final String UTF_8 = "UTF-8";
   private static final Log LOG = LogFactory.getLog("QTestUtil");
 
   private String testWarehouse;
@@ -324,27 +328,26 @@ public void shutdown() throws Exception {
     }
   }
 
-  public void addFile(String qFile) throws Exception {
-
-    File qf = new File(qFile);
-    addFile(qf);
+  public String readEntireFileIntoString(File queryFile) throws IOException {
+    InputStreamReader isr = new InputStreamReader(
+        new BufferedInputStream(new FileInputStream(queryFile)), QTestUtil.UTF_8);
+    StringWriter sw = new StringWriter();
+    try {
+      IOUtils.copy(isr, sw);
+    } finally {
+      if (isr != null) {
+        isr.close();
+      }
+    }
+    return sw.toString();
   }
 
-  public void addFile(File qf) throws Exception {
-
-    FileInputStream fis = new FileInputStream(qf);
-    BufferedInputStream bis = new BufferedInputStream(fis);
-    BufferedReader br = new BufferedReader(new InputStreamReader(bis, "UTF8"));
-    StringBuilder qsb = new StringBuilder();
-
-    // Read the entire query
-    String line;
-    while ((line = br.readLine()) != null) {
-      qsb.append(line + "\n");
-    }
-    br.close();
+  public void addFile(String queryFile) throws IOException {
+    addFile(new File(queryFile));
+  }
 
-    String query = qsb.toString();
+  public void addFile(File qf) throws IOException  {
+    String query = readEntireFileIntoString(qf);
     qMap.put(qf.getName(), query);
 
     if(checkHadoopVersionExclude(qf.getName(), query)
-- 
1.7.0.4

