From 1838f48378ce479daf38c23b35f69071d8fa82a2 Mon Sep 17 00:00:00 2001
From: Szehon Ho <szehon@cloudera.com>
Date: Fri, 9 May 2014 12:16:47 -0700
Subject: [PATCH 333/375] HIVE-7015: Failing to inherit group/permission should not fail the operation

---
 .../org/apache/hadoop/hive/common/FileUtils.java   |   19 ++++++++++++-------
 .../apache/hadoop/hive/metastore/Warehouse.java    |    2 +-
 .../org/apache/hadoop/hive/ql/exec/CopyTask.java   |    2 +-
 .../org/apache/hadoop/hive/ql/metadata/Hive.java   |    2 +-
 4 files changed, 15 insertions(+), 10 deletions(-)

diff --git a/src/common/src/java/org/apache/hadoop/hive/common/FileUtils.java b/src/common/src/java/org/apache/hadoop/hive/common/FileUtils.java
index 6e6fb00..7447c70 100644
--- a/src/common/src/java/org/apache/hadoop/hive/common/FileUtils.java
+++ b/src/common/src/java/org/apache/hadoop/hive/common/FileUtils.java
@@ -316,10 +316,11 @@ public static void listStatusRecursively(FileSystem fs, FileStatus fileStatus,
    * @param fs FileSystem to use
    * @param f path to create.
    * @param inheritPerms whether directory inherits the permission of the last-existing parent path
+   * @param conf Hive configuration
    * @return true if directory created successfully.  False otherwise, including if it exists.
    * @throws IOException exception in creating the directory
    */
-  public static boolean mkdir(FileSystem fs, Path f, boolean inheritPerms) throws IOException {
+  public static boolean mkdir(FileSystem fs, Path f, boolean inheritPerms, Configuration conf) throws IOException {
     LOG.info("Creating directory if it doesn't exist: " + f);
     if (!inheritPerms) {
       //just create the directory
@@ -344,13 +345,17 @@ public static boolean mkdir(FileSystem fs, Path f, boolean inheritPerms) throws 
         return false;
       } else {
         FsPermission parentPerm = fs.getFileStatus(path).getPermission();
-        String parentGroup = fs.getFileStatus(path).getGroup();
+        String permString = Integer.toString(parentPerm.toShort(), 8);
         for (Path pathToSet : pathsToSet) {
-          String currOwner = fs.getFileStatus(pathToSet).getOwner();
-          LOG.info("Setting permission and group of parent directory: " + path.toString() +
+          LOG.info("Setting permission of parent directory: " + path.toString() +
             " on new directory: " + pathToSet.toString());
-          fs.setPermission(pathToSet, parentPerm);
-          fs.setOwner(pathToSet, currOwner, parentGroup);
+          try {
+            FsShell fshell = new FsShell();
+            fshell.setConf(conf);
+            fshell.run(new String[]{"-chmod", "-R", permString, pathToSet.toString()});
+          } catch (Exception e) {
+            LOG.warn("Error setting permissions of " + pathToSet, e);
+          }
         }
         return true;
       }
@@ -379,7 +384,7 @@ public static boolean copy(FileSystem srcFS, Path src,
         fshell.run(new String[]{"-chgrp", "-R", group, dst.toString()});
         fshell.run(new String[]{"-chmod", "-R", permString, dst.toString()});
       } catch (Exception e) {
-        throw new IOException("Unable to set permissions of " + dst, e);
+        LOG.warn("Error setting permissions or group of " + dst, e);
       }
     }
     return copied;
diff --git a/src/metastore/src/java/org/apache/hadoop/hive/metastore/Warehouse.java b/src/metastore/src/java/org/apache/hadoop/hive/metastore/Warehouse.java
index be29984..62f0186 100755
--- a/src/metastore/src/java/org/apache/hadoop/hive/metastore/Warehouse.java
+++ b/src/metastore/src/java/org/apache/hadoop/hive/metastore/Warehouse.java
@@ -183,7 +183,7 @@ public boolean mkdirs(Path f, boolean inheritPermCandidate) throws MetaException
     FileSystem fs = null;
     try {
       fs = getFs(f);
-      return FileUtils.mkdir(fs, f, inheritPerms);
+      return FileUtils.mkdir(fs, f, inheritPerms, conf);
     } catch (IOException e) {
       closeFs(fs);
       MetaStoreUtils.logAndThrowMetaException(e);
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/CopyTask.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/CopyTask.java
index 43064b3..865613a 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/CopyTask.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/CopyTask.java
@@ -71,7 +71,7 @@ public int execute(DriverContext driverContext) {
       }
 
       boolean inheritPerms = conf.getBoolVar(HiveConf.ConfVars.HIVE_WAREHOUSE_SUBDIR_INHERIT_PERMS);
-      if (!FileUtils.mkdir(dstFs, toPath, inheritPerms)) {
+      if (!FileUtils.mkdir(dstFs, toPath, inheritPerms, conf)) {
         console.printError("Cannot make target directory: " + toPath.toString());
         return 2;
       }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java b/src/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java
index b1aa586..84a901a 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/metadata/Hive.java
@@ -2227,7 +2227,7 @@ static protected void copyFiles(HiveConf conf, Path srcf, Path destf, FileSystem
     try {
       // create the destination if it does not exist
       if (!fs.exists(destf)) {
-        FileUtils.mkdir(fs, destf, inheritPerms);
+        FileUtils.mkdir(fs, destf, inheritPerms, conf);
       }
     } catch (IOException e) {
       throw new HiveException(
-- 
1.7.0.4

