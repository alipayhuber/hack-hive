From 00b358812e05fdc9204d914883ec8781329c3336 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@cloudera.com>
Date: Wed, 23 Oct 2013 13:45:20 -0500
Subject: [PATCH 109/375] FIXUP: HIVE-4844 : Add varchar data type (Jason Dere via Ashutosh Chauhan) (three methods were pulled twice in TestFunctionRegistry

---
 .../hadoop/hive/ql/exec/TestFunctionRegistry.java  |   27 --------------------
 1 files changed, 0 insertions(+), 27 deletions(-)

diff --git a/src/ql/src/test/org/apache/hadoop/hive/ql/exec/TestFunctionRegistry.java b/src/ql/src/test/org/apache/hadoop/hive/ql/exec/TestFunctionRegistry.java
index e8387be..50613f3 100644
--- a/src/ql/src/test/org/apache/hadoop/hive/ql/exec/TestFunctionRegistry.java
+++ b/src/ql/src/test/org/apache/hadoop/hive/ql/exec/TestFunctionRegistry.java
@@ -328,33 +328,6 @@ public void testGetTypeInfoForPrimitiveCategory() {
         PrimitiveCategory.DOUBLE));
   }
 
-  private void unionAll(TypeInfo a, TypeInfo b, TypeInfo result) {
-    assertEquals(result, FunctionRegistry.getCommonClassForUnionAll(a,b));
-  }
-
-  public void testCommonClassUnionAll() {
-    unionAll(TypeInfoFactory.intTypeInfo, TypeInfoFactory.decimalTypeInfo,
-        TypeInfoFactory.decimalTypeInfo);
-    unionAll(TypeInfoFactory.stringTypeInfo, TypeInfoFactory.decimalTypeInfo,
-        TypeInfoFactory.decimalTypeInfo);
-    unionAll(TypeInfoFactory.doubleTypeInfo, TypeInfoFactory.decimalTypeInfo,
-        TypeInfoFactory.decimalTypeInfo);
-    unionAll(TypeInfoFactory.doubleTypeInfo, TypeInfoFactory.stringTypeInfo,
-        TypeInfoFactory.stringTypeInfo);
-  }
-
-  public void testGetTypeInfoForPrimitiveCategory() {
-    // non-qualified types should simply return the TypeInfo associated with that type
-    assertEquals(TypeInfoFactory.stringTypeInfo, FunctionRegistry.getTypeInfoForPrimitiveCategory(
-        (PrimitiveTypeInfo) TypeInfoFactory.stringTypeInfo,
-        (PrimitiveTypeInfo) TypeInfoFactory.stringTypeInfo,
-        PrimitiveCategory.STRING));
-    assertEquals(TypeInfoFactory.doubleTypeInfo, FunctionRegistry.getTypeInfoForPrimitiveCategory(
-        (PrimitiveTypeInfo) TypeInfoFactory.doubleTypeInfo,
-        (PrimitiveTypeInfo) TypeInfoFactory.stringTypeInfo,
-        PrimitiveCategory.DOUBLE));
-  }
-
   @Override
   protected void tearDown() {
   }
-- 
1.7.0.4

