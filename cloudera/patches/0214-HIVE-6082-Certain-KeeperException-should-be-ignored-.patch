From 95734d73f1af9404f5589dcb786f1e541bcfe259 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Mon, 30 Dec 2013 20:46:12 +0000
Subject: [PATCH 214/375] HIVE-6082 - Certain KeeperException should be ignored in ZooKeeperHiveLockManage.unlockPrimitive (Chaoyu Tang via Brock Noland)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1554316 13f79535-47bb-0310-9956-ffa450edef68
---
 .../zookeeper/ZooKeeperHiveLockManager.java        |   29 ++++++++++++-------
 1 files changed, 18 insertions(+), 11 deletions(-)

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/lockmgr/zookeeper/ZooKeeperHiveLockManager.java b/src/ql/src/java/org/apache/hadoop/hive/ql/lockmgr/zookeeper/ZooKeeperHiveLockManager.java
index 735e745..15a448a 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/lockmgr/zookeeper/ZooKeeperHiveLockManager.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/lockmgr/zookeeper/ZooKeeperHiveLockManager.java
@@ -428,6 +428,8 @@ private void unlockWithRetry(HiveConf conf, ZooKeeper zkpClient,
         break;
       } catch (Exception e) {
         if (tryNum >= numRetriesForUnLock) {
+          String name = ((ZooKeeperHiveLock)hiveLock).getPath();
+          LOG.error("Node " + name + " can not be deleted after " + numRetriesForUnLock + " attempts.");  
           throw new LockException(e);
         }
       }
@@ -441,23 +443,28 @@ private void unlockWithRetry(HiveConf conf, ZooKeeper zkpClient,
   static void unlockPrimitive(HiveConf conf, ZooKeeper zkpClient,
                              HiveLock hiveLock, String parent) throws LockException {
     ZooKeeperHiveLock zLock = (ZooKeeperHiveLock)hiveLock;
+    HiveLockObject obj = zLock.getHiveLockObject();
+    String name  = getLastObjectName(parent, obj);
     try {
-      // can throw KeeperException.NoNodeException, which might mean something is wrong
       zkpClient.delete(zLock.getPath(), -1);
 
       // Delete the parent node if all the children have been deleted
-      HiveLockObject obj = zLock.getHiveLockObject();
-      String name  = getLastObjectName(parent, obj);
-
-      try {
-        List<String> children = zkpClient.getChildren(name, false);
-        if (children == null || children.isEmpty()) {
-          zkpClient.delete(name, -1);
-        }
-      } catch (KeeperException.NoNodeException e) {
-        LOG.debug("Node " + name + " previously deleted when attempting to delete.");
-      }
+      List<String> children = zkpClient.getChildren(name, false);
+      if (children == null || children.isEmpty()) {
+        zkpClient.delete(name, -1);
+      }
+    } catch (KeeperException.NoNodeException nne) {
+      //can happen in retrying deleting the zLock after exceptions like InterruptedException 
+      //or in a race condition where parent has already been deleted by other process when it
+      //is to be deleted. Both cases should not raise error
+      LOG.debug("Node " + zLock.getPath() + " or its parent has already been deleted.");
+    } catch (KeeperException.NotEmptyException nee) {
+      //can happen in a race condition where another process adds a zLock under this parent
+      //just before it is about to be deleted. It should not be a problem since this parent
+      //can eventually be deleted by the process which hold its last child zLock
+      LOG.debug("Node " + name + " to be deleted is not empty.");  
     } catch (Exception e) {
+      //exceptions including InterruptException and other KeeperException
       LOG.error("Failed to release ZooKeeper lock: ", e);
       throw new LockException(e);
     }
-- 
1.7.0.4

