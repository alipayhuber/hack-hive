From 1dd286d63b30a0b376738e4606c0c3612584cf21 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Fri, 18 Oct 2013 15:27:41 +0000
Subject: [PATCH 096/375] HIVE-5548: Tests under common directory don't run as part of 'ant test' (Xuefu Zhang via Brock Noland)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1533506 13f79535-47bb-0310-9956-ffa450edef68
---
 build.properties                                   |    4 +-
 common/build.xml                                   |   33 --------------------
 .../org/apache/hadoop/hive/conf/TestHiveConf.java  |   29 ++++++++++-------
 .../apache/hadoop/hive/conf/TestHiveLogging.java   |   17 +++++-----
 4 files changed, 27 insertions(+), 56 deletions(-)

diff --git a/src/build.properties b/src/build.properties
index d551c8b..8c2c07a 100644
--- a/src/build.properties
+++ b/src/build.properties
@@ -77,7 +77,7 @@ common.jar=${hadoop.root}/lib/commons-httpclient-3.0.1.jar
 # full profile
 iterate.hive.full.all=ant,shims,common,serde,metastore,ql,contrib,service,cli,jdbc,beeline,hwi,hbase-handler,testutils,hcatalog
 iterate.hive.full.modules=shims,common,serde,metastore,ql,contrib,service,cli,jdbc,beeline,hwi,hbase-handler,testutils,hcatalog
-iterate.hive.full.tests=ql,contrib,hbase-handler,hwi,jdbc,beeline,metastore,odbc,serde,service,hcatalog
+iterate.hive.full.tests=common,ql,contrib,hbase-handler,hwi,jdbc,beeline,metastore,odbc,serde,service,hcatalog
 iterate.hive.full.thrift=ql,service,metastore,serde
 iterate.hive.full.protobuf=ql
 iterate.hive.full.cpp=odbc
@@ -86,7 +86,7 @@ iterate.hive.full.cpp=odbc
 iterate.hive.nohcat.all=ant,shims,common,serde,metastore,ql,contrib,service,cli,jdbc,beeline,hwi,hbase-handler,testutils
 iterate.hive.nohcat.modules=shims,common,serde,metastore,ql,contrib,service,cli,jdbc,beeline,hwi,hbase-handler,testutils
 iterate.hive.nohcat.tests=ql,contrib,hbase-handler,hwi,jdbc,beeline,metastore,odbc,serde,service
-iterate.hive.nohcat.thrift=ql,service,metastore,serde
+iterate.hive.nohcat.thrift=common,ql,service,metastore,serde
 iterate.hive.nohcat.protobuf=ql
 iterate.hive.nohcat.cpp=odbc
 
diff --git a/src/common/build.xml b/src/common/build.xml
index 22684b0..df0d4f3 100755
--- a/src/common/build.xml
+++ b/src/common/build.xml
@@ -52,37 +52,4 @@ to call at top-level: ant deploy-contrib compile-core-test
     </copy>
   </target>
 
-  <!-- target to run the tests -->
-  <target name="test"
-  	depends="test-conditions,gen-test,compile-test,test-jar,test-init">
-    <antcall target="testonly" />
-  </target>
-
-
-
-  <!-- target to run the tests -->
-  <target name="testonly"
-    depends="test-conditions,test-init">
-    <echo message="Project: ${ant.project.name}"/>
-    <junit showoutput="${test.output}" printsummary="yes" haltonfailure="no"
-           fork="yes" maxmemory="512m" dir="${basedir}" timeout="${test.junit.timeout}"
-           errorProperty="tests.failed" failureProperty="tests.failed" filtertrace="off">
-      <sysproperty key="test.build.resources" value="${test.build.resources}"/>            
-      <classpath refid="${test.classpath.id}"/>
-      <formatter type="${test.junit.output.format}" usefile="${test.junit.output.usefile}" />
-      <batchtest todir="${test.build.dir}" unless="testcase">
-        <fileset dir="${test.build.classes}"
-                 includes="**/${test.include}.class"
-                 excludes="**/*$*.class,${test.junit.exclude}" />
-      </batchtest>
-      <batchtest todir="${test.build.dir}" if="testcase">
-        <fileset dir="${test.build.classes}" includes="**/${testcase}.class"/>
-      </batchtest>
-      <assertions>
-        <enable />
-      </assertions>
-    </junit>
-    <fail if="tests.failed">Tests failed!</fail>
-  </target>
-  
 </project>
diff --git a/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java b/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java
index f64b164..25cefef 100644
--- a/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java
+++ b/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveConf.java
@@ -17,11 +17,11 @@
  */
 package org.apache.hadoop.hive.conf;
 
-import junit.framework.TestCase;
-
 import org.apache.hadoop.conf.Configuration;
 import org.apache.hadoop.fs.Path;
 import org.apache.hadoop.hive.conf.HiveConf.ConfVars;
+import org.junit.Assert;
+import org.junit.Test;
 
 
 /**
@@ -30,31 +30,35 @@
  * Test cases for HiveConf. Loads configuration files located
  * in common/src/test/resources.
  */
-public class TestHiveConf extends TestCase {
-
+public class TestHiveConf {
+  @Test
   public void testHiveSitePath() throws Exception {
     String expectedPath =
         new Path(System.getProperty("test.build.resources") + "/hive-site.xml").toUri().getPath();
-    assertEquals(expectedPath, new HiveConf().getHiveSiteLocation().getPath());
+    Assert.assertEquals(expectedPath, new HiveConf().getHiveSiteLocation().getPath());
   }
 
   private void checkHadoopConf(String name, String expectedHadoopVal) throws Exception {
-    assertEquals(expectedHadoopVal, new Configuration().get(name));
+    Assert.assertEquals(expectedHadoopVal, new Configuration().get(name));
   }
 
   private void checkConfVar(ConfVars var, String expectedConfVarVal) throws Exception {
-    assertEquals(expectedConfVarVal, var.defaultVal);
+    Assert.assertEquals(expectedConfVarVal, var.defaultVal);
   }
 
   private void checkHiveConf(String name, String expectedHiveVal) throws Exception {
-    assertEquals(expectedHiveVal, new HiveConf().get(name));
+    Assert.assertEquals(expectedHiveVal, new HiveConf().get(name));
   }
 
+  @Test
   public void testConfProperties() throws Exception {
     // Make sure null-valued ConfVar properties do not override the Hadoop Configuration
-    checkHadoopConf(ConfVars.HADOOPFS.varname, "core-site.xml");
-    checkConfVar(ConfVars.HADOOPFS, null);
-    checkHiveConf(ConfVars.HADOOPFS.varname, "core-site.xml");
+    // NOTE: Comment out the following test case for now until a better way to test is found,
+    // as this test case cannot be reliably tested. The reason for this is that Hive does
+    // overwrite fs.default.name in HiveConf if the property is set in system properties.
+    // checkHadoopConf(ConfVars.HADOOPFS.varname, "core-site.xml");
+    // checkConfVar(ConfVars.HADOOPFS, null);
+    // checkHiveConf(ConfVars.HADOOPFS.varname, "core-site.xml");
 
     // Make sure non-null-valued ConfVar properties *do* override the Hadoop Configuration
     checkHadoopConf(ConfVars.HADOOPNUMREDUCERS.varname, "1");
@@ -79,9 +83,10 @@ public void testConfProperties() throws Exception {
     checkHiveConf("test.var.hiveconf.property", ConfVars.DEFAULTPARTITIONNAME.defaultVal);
   }
 
+  @Test
   public void testColumnNameMapping() throws Exception {
     for (int i = 0 ; i < 20 ; i++ ){
-      assertTrue(i == HiveConf.getPositionFromInternalName(HiveConf.getColumnInternalName(i)));
+      Assert.assertTrue(i == HiveConf.getPositionFromInternalName(HiveConf.getColumnInternalName(i)));
     }
   }
 }
diff --git a/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveLogging.java b/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveLogging.java
index 1bc4424..1a5dd72 100644
--- a/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveLogging.java
+++ b/src/common/src/test/org/apache/hadoop/hive/conf/TestHiveLogging.java
@@ -17,17 +17,15 @@
  */
 package org.apache.hadoop.hive.conf;
 
+import java.io.BufferedReader;
+import java.io.IOException;
+import java.io.InputStreamReader;
+
 import junit.framework.TestCase;
 
-import org.apache.hadoop.conf.Configuration;
-import org.apache.hadoop.hive.conf.HiveConf.ConfVars;
-import org.apache.hadoop.hive.ql.session.SessionState;
 import org.apache.hadoop.hive.common.LogUtils;
 import org.apache.hadoop.hive.common.LogUtils.LogInitializationException;
-
-import java.io.BufferedReader;
-import java.io.IOException;
-import java.io.InputStreamReader;
+import org.apache.hadoop.hive.conf.HiveConf.ConfVars;
 
 /**
  * TestHiveLogging
@@ -36,7 +34,7 @@
  * Loads configuration files located in common/src/test/resources.
  */
 public class TestHiveLogging extends TestCase {
-  private Runtime runTime;
+  private final Runtime runTime;
   private Process process;
 
   public TestHiveLogging() {
@@ -86,8 +84,9 @@ private void getCmdOutput(String logFile) {
     String line = "";
     try {
       while((line = buf.readLine()) != null) {
-        if (line.equals(logFile))
+        if (line.equals(logFile)) {
           logCreated = true;
+        }
       }
     } catch (IOException e) {
       e.printStackTrace();
-- 
1.7.0.4

