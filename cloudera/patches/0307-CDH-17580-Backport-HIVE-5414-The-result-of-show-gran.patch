From 4e818251e65ec6e78f68cf928543dd60af03be15 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Wed, 12 Mar 2014 09:25:44 -0500
Subject: [PATCH 307/375] CDH-17580 - Backport HIVE-5414 - The result of show grant is not visible via JDBC

---
 .../apache/hadoop/hive/jdbc/TestJdbcDriver.java    |   44 ++
 .../java/org/apache/hive/jdbc/TestJdbcDriver2.java |   46 ++
 .../org/apache/hadoop/hive/ql/exec/DDLTask.java    |  206 +++-----
 .../hadoop/hive/ql/parse/DDLSemanticAnalyzer.java  |    4 +
 .../apache/hadoop/hive/ql/plan/RoleDDLDesc.java    |    9 +
 .../apache/hadoop/hive/ql/plan/ShowGrantDesc.java  |   11 +-
 .../clientnegative/authorization_fail_3.q.out      |   13 +-
 .../clientnegative/authorization_fail_4.q.out      |   56 +-
 .../clientnegative/authorization_fail_5.q.out      |  114 ++---
 .../clientnegative/authorization_fail_7.q.out      |   16 +-
 .../clientnegative/authorization_part.q.out        |   77 ++--
 .../clientnegative/unset_table_property.q.out      |    1 -
 .../clientnegative/unset_view_property.q.out       |    1 -
 .../alter_rename_partition_authorization.q.out     |   73 ++--
 .../results/clientpositive/authorization_1.q.out   |   87 ++--
 .../results/clientpositive/authorization_2.q.out   |  565 +++++++++-----------
 .../results/clientpositive/authorization_3.q.out   |   65 +--
 .../results/clientpositive/authorization_4.q.out   |   13 +-
 .../results/clientpositive/authorization_5.q.out   |   47 +-
 .../results/clientpositive/authorization_6.q.out   |  129 ++---
 ql/src/test/results/clientpositive/keyword_1.q.out |   26 +-
 .../clientpositive/show_tblproperties.q.out        |    1 -
 .../clientpositive/unset_table_view_property.q.out |   17 -
 23 files changed, 783 insertions(+), 838 deletions(-)

diff --git a/src/itests/hive-unit/src/test/java/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java b/src/itests/hive-unit/src/test/java/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java
index a9e49ae..6079a0d 100644
--- a/src/itests/hive-unit/src/test/java/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java
+++ b/src/itests/hive-unit/src/test/java/org/apache/hadoop/hive/jdbc/TestJdbcDriver.java
@@ -20,6 +20,9 @@
 
 import static org.apache.hadoop.hive.ql.exec.ExplainTask.EXPL_COLUMN_NAME;
 import static org.apache.hadoop.hive.ql.processors.SetProcessor.SET_COLUMN_NAME;
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertFalse;
+import static org.junit.Assert.assertTrue;
 
 import java.sql.Connection;
 import java.sql.DatabaseMetaData;
@@ -1140,4 +1143,45 @@ public void testSetCommand() throws SQLException {
     stmt.close();
   }
 
+  public void testShowGrant() throws SQLException {
+    Statement stmt = con.createStatement();
+    stmt.execute("grant select on table " + dataTypeTableName + " to user hive_test_user");
+    stmt.execute("show grant user hive_test_user on table " + dataTypeTableName);
+
+    ResultSet res = stmt.getResultSet();
+    assertTrue(res.next());
+    assertEquals("database", res.getString(1));
+    assertEquals("default", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("table", res.getString(1));
+    assertEquals(dataTypeTableName, res.getString(2));
+    assertTrue(res.next());
+    assertEquals("principalName", res.getString(1));
+    assertEquals("hive_test_user", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("principalType", res.getString(1));
+    assertEquals("USER", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("privilege", res.getString(1));
+    assertEquals("Select", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("grantTime", res.getString(1));
+    assertTrue(res.next());
+    assertEquals("grantor", res.getString(1));
+    assertFalse(res.next());
+    res.close();
+  }
+
+  public void testShowRoleGrant() throws SQLException {
+    Statement stmt = con.createStatement();
+    stmt.execute("create role role1");
+    stmt.execute("grant role role1 to user hive_test_user");
+    stmt.execute("show role grant user hive_test_user");
+
+    ResultSet res = stmt.getResultSet();
+    assertTrue(res.next());
+    assertEquals("role1", res.getString(1));
+    assertFalse(res.next());
+    res.close();
+  }
 }
diff --git a/src/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java b/src/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java
index afc6844..3a22d89 100644
--- a/src/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java
+++ b/src/itests/hive-unit/src/test/java/org/apache/hive/jdbc/TestJdbcDriver2.java
@@ -1899,4 +1899,50 @@ private void execFetchFirst(String sqlStmt, String colName, boolean oneRowOnly)
     }
   }
 
+  public void testShowGrant() throws SQLException {
+    Statement stmt = con.createStatement();
+    stmt.execute("grant select on table " + dataTypeTableName + " to user hive_test_user");
+    stmt.execute("show grant user hive_test_user on table " + dataTypeTableName);
+
+    ResultSet res = stmt.getResultSet();
+    ResultSetMetaData metaData = res.getMetaData();
+
+    assertEquals("property", metaData.getColumnName(1));
+    assertEquals("value", metaData.getColumnName(2));
+
+    assertTrue(res.next());
+    assertEquals("database", res.getString(1));
+    assertEquals("default", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("table", res.getString(1));
+    assertEquals(dataTypeTableName, res.getString(2));
+    assertTrue(res.next());
+    assertEquals("principalName", res.getString(1));
+    assertEquals("hive_test_user", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("principalType", res.getString(1));
+    assertEquals("USER", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("privilege", res.getString(1));
+    assertEquals("Select", res.getString(2));
+    assertTrue(res.next());
+    assertEquals("grantTime", res.getString(1));
+    assertTrue(res.next());
+    assertEquals("grantor", res.getString(1));
+    assertFalse(res.next());
+    res.close();
+  }
+
+  public void testShowRoleGrant() throws SQLException {
+    Statement stmt = con.createStatement();
+    stmt.execute("create role role1");
+    stmt.execute("grant role role1 to user hive_test_user");
+    stmt.execute("show role grant user hive_test_user");
+
+    ResultSet res = stmt.getResultSet();
+    assertTrue(res.next());
+    assertEquals("role1", res.getString(1));
+    assertFalse(res.next());
+    res.close();
+  }
 }
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
index 5a2698b..63b9628 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/exec/DDLTask.java
@@ -496,11 +496,8 @@ private int grantOrRevokeRole(GrantRevokeRoleDDL grantOrRevokeRoleDDL)
   }
 
   private int showGrants(ShowGrantDesc showGrantDesc) throws HiveException {
-    DataOutput outStream = null;
+    StringBuilder builder = new StringBuilder();
     try {
-      Path resFile = new Path(showGrantDesc.getResFile());
-      FileSystem fs = resFile.getFileSystem(conf);
-      outStream = fs.create(resFile);
       PrincipalDesc principalDesc = showGrantDesc.getPrincipalDesc();
       PrivilegeObjectDesc hiveObjectDesc = showGrantDesc.getHiveObj();
       String principalName = principalDesc.getName();
@@ -508,21 +505,8 @@ private int showGrants(ShowGrantDesc showGrantDesc) throws HiveException {
         List<HiveObjectPrivilege> users = db.showPrivilegeGrant(
             HiveObjectType.GLOBAL, principalName, principalDesc.getType(),
             null, null, null, null);
-        if (users != null && users.size() > 0) {
-          boolean first = true;
-          sortPrivileges(users);
-          for (HiveObjectPrivilege usr : users) {
-            if (!first) {
-              outStream.write(terminator);
-            } else {
-              first = false;
-            }
-
-            writeGrantInfo(outStream, principalDesc.getType(), principalName,
-                null, null, null, null, usr.getGrantInfo());
-
-          }
-        }
+        writeGrantInfo(builder, principalDesc.getType(), principalName,
+            null, null, null, null, users);
       } else {
         String obj = hiveObjectDesc.getObject();
         boolean notFound = true;
@@ -564,22 +548,8 @@ private int showGrants(ShowGrantDesc showGrantDesc) throws HiveException {
           // show database level privileges
           List<HiveObjectPrivilege> dbs = db.showPrivilegeGrant(HiveObjectType.DATABASE, principalName,
               principalDesc.getType(), dbName, null, null, null);
-          if (dbs != null && dbs.size() > 0) {
-            boolean first = true;
-            sortPrivileges(dbs);
-            for (HiveObjectPrivilege db : dbs) {
-              if (!first) {
-                outStream.write(terminator);
-              } else {
-                first = false;
-              }
-
-              writeGrantInfo(outStream, principalDesc.getType(), principalName,
-                  dbName, null, null, null, db.getGrantInfo());
-
-            }
-          }
-
+          writeGrantInfo(builder, principalDesc.getType(), principalName,
+              dbName, null, null, null, dbs);
         } else {
           if (showGrantDesc.getColumns() != null) {
             // show column level privileges
@@ -588,67 +558,28 @@ private int showGrants(ShowGrantDesc showGrantDesc) throws HiveException {
                   HiveObjectType.COLUMN, principalName,
                   principalDesc.getType(), dbName, tableName, partValues,
                   columnName);
-              if (columnss != null && columnss.size() > 0) {
-                boolean first = true;
-                sortPrivileges(columnss);
-                for (HiveObjectPrivilege col : columnss) {
-                  if (!first) {
-                    outStream.write(terminator);
-                  } else {
-                    first = false;
-                  }
-
-                  writeGrantInfo(outStream, principalDesc.getType(),
-                      principalName, dbName, tableName, partName, columnName,
-                      col.getGrantInfo());
-                }
-              }
+              writeGrantInfo(builder, principalDesc.getType(),
+                  principalName, dbName, tableName, partName, columnName,
+                  columnss);
             }
           } else if (hiveObjectDesc.getPartSpec() != null) {
             // show partition level privileges
             List<HiveObjectPrivilege> parts = db.showPrivilegeGrant(
                 HiveObjectType.PARTITION, principalName, principalDesc
                     .getType(), dbName, tableName, partValues, null);
-            if (parts != null && parts.size() > 0) {
-              boolean first = true;
-              sortPrivileges(parts);
-              for (HiveObjectPrivilege part : parts) {
-                if (!first) {
-                  outStream.write(terminator);
-                } else {
-                  first = false;
-                }
-
-                writeGrantInfo(outStream, principalDesc.getType(),
-                    principalName, dbName, tableName, partName, null, part.getGrantInfo());
-
-              }
-            }
+            writeGrantInfo(builder, principalDesc.getType(),
+                principalName, dbName, tableName, partName, null, parts);
           } else {
             // show table level privileges
             List<HiveObjectPrivilege> tbls = db.showPrivilegeGrant(
                 HiveObjectType.TABLE, principalName, principalDesc.getType(),
                 dbName, tableName, null, null);
-            if (tbls != null && tbls.size() > 0) {
-              boolean first = true;
-              sortPrivileges(tbls);
-              for (HiveObjectPrivilege tbl : tbls) {
-                if (!first) {
-                  outStream.write(terminator);
-                } else {
-                  first = false;
-                }
-
-                writeGrantInfo(outStream, principalDesc.getType(),
-                    principalName, dbName, tableName, null, null, tbl.getGrantInfo());
-
-              }
-            }
+            writeGrantInfo(builder, principalDesc.getType(),
+                principalName, dbName, tableName, null, null, tbls);
           }
         }
       }
-      ((FSDataOutputStream) outStream).close();
-      outStream = null;
+      writeToFile(builder.toString(), showGrantDesc.getResFile());
     } catch (FileNotFoundException e) {
       LOG.info("show table status: " + stringifyException(e));
       return 1;
@@ -658,8 +589,6 @@ private int showGrants(ShowGrantDesc showGrantDesc) throws HiveException {
     } catch (Exception e) {
       e.printStackTrace();
       throw new HiveException(e);
-    } finally {
-      IOUtils.closeStream((FSDataOutputStream) outStream);
     }
     return 0;
   }
@@ -828,7 +757,7 @@ private int roleDDL(RoleDDLDesc roleDDLDesc) {
           FileSystem fs = resFile.getFileSystem(conf);
           outStream = fs.create(resFile);
           for (Role role : roles) {
-            outStream.writeBytes("role name:" + role.getRoleName());
+            outStream.writeBytes(role.getRoleName());
             outStream.write(terminator);
           }
           ((FSDataOutputStream) outStream).close();
@@ -2729,43 +2658,36 @@ private int showTableProperties(Hive db, ShowTblPropertiesDesc showTblPrpt) thro
 
     // show table properties - populate the output stream
     Table tbl = db.getTable(tableName, false);
-    DataOutput outStream = null;
     try {
-      Path resFile = new Path(showTblPrpt.getResFile());
-      FileSystem fs = resFile.getFileSystem(conf);
-      outStream = fs.create(resFile);
-
       if (tbl == null) {
         String errMsg = "Table " + tableName + " does not exist";
-        outStream.write(errMsg.getBytes("UTF-8"));
-        ((FSDataOutputStream) outStream).close();
-        outStream = null;
+        writeToFile(errMsg, showTblPrpt.getResFile());
         return 0;
       }
 
       LOG.info("DDLTask: show properties for " + tbl.getTableName());
 
+      StringBuilder builder = new StringBuilder();
       String propertyName = showTblPrpt.getPropertyName();
       if (propertyName != null) {
         String propertyValue = tbl.getProperty(propertyName);
         if (propertyValue == null) {
           String errMsg = "Table " + tableName + " does not have property: " + propertyName;
-          outStream.write(errMsg.getBytes("UTF-8"));
+          builder.append(errMsg);
         }
         else {
-          outStream.writeBytes(propertyValue);
+          builder.append(propertyValue);
         }
       }
       else {
         Map<String, String> properties = tbl.getParameters();
         for (String key : properties.keySet()) {
-          writeKeyValuePair(outStream, key, properties.get(key));
+          writeKeyValuePair(builder, key, properties.get(key));
         }
       }
 
       LOG.info("DDLTask: written data for showing properties of " + tbl.getTableName());
-      ((FSDataOutputStream) outStream).close();
-      outStream = null;
+      writeToFile(builder.toString(), showTblPrpt.getResFile());
 
     } catch (FileNotFoundException e) {
       LOG.info("show table properties: " + stringifyException(e));
@@ -2775,12 +2697,27 @@ private int showTableProperties(Hive db, ShowTblPropertiesDesc showTblPrpt) thro
       return 1;
     } catch (Exception e) {
       throw new HiveException(e);
-    } finally {
-      IOUtils.closeStream((FSDataOutputStream) outStream);
     }
 
     return 0;
   }
+
+  private void writeToFile(String data, String file) throws IOException {
+    Path resFile = new Path(file);
+    FileSystem fs = resFile.getFileSystem(conf);
+    FSDataOutputStream out = fs.create(resFile);
+    try {
+      if (data != null && !data.isEmpty()) {
+        OutputStreamWriter writer = new OutputStreamWriter(out, "UTF-8");
+        writer.write(data);
+        writer.write((char) terminator);
+        writer.flush();
+      }
+    } finally {
+      IOUtils.closeStream(out);
+    }
+  }
+
   /**
    * Write the description of a table to a file.
    *
@@ -2881,45 +2818,54 @@ private static void fixDecimalColumnTypeName(List<FieldSchema> cols) {
     }
   }
 
-  public static void writeGrantInfo(DataOutput outStream,
+  public static void writeGrantInfo(StringBuilder builder,
       PrincipalType principalType, String principalName, String dbName,
       String tableName, String partName, String columnName,
-      PrivilegeGrantInfo grantInfo) throws IOException {
+      List<HiveObjectPrivilege> privileges) throws IOException {
+    if (privileges == null || privileges.isEmpty()) {
+      return;
+    }
 
-    String privilege = grantInfo.getPrivilege();
-    long unixTimestamp = grantInfo.getCreateTime() * 1000L;
-    Date createTime = new Date(unixTimestamp);
-    String grantor = grantInfo.getGrantor();
+    sortPrivileges(privileges);
 
-    if (dbName != null) {
-      writeKeyValuePair(outStream, "database", dbName);
-    }
-    if (tableName != null) {
-      writeKeyValuePair(outStream, "table", tableName);
-    }
-    if (partName != null) {
-      writeKeyValuePair(outStream, "partition", partName);
-    }
-    if (columnName != null) {
-      writeKeyValuePair(outStream, "columnName", columnName);
-    }
+    for (HiveObjectPrivilege privilege : privileges) {
+      PrivilegeGrantInfo grantInfo = privilege.getGrantInfo();
+      String privName = grantInfo.getPrivilege();
+      long unixTimestamp = grantInfo.getCreateTime() * 1000L;
+      Date createTime = new Date(unixTimestamp);
+      String grantor = grantInfo.getGrantor();
 
-    writeKeyValuePair(outStream, "principalName", principalName);
-    writeKeyValuePair(outStream, "principalType", "" + principalType);
-    writeKeyValuePair(outStream, "privilege", privilege);
-    writeKeyValuePair(outStream, "grantTime", "" + createTime);
-    if (grantor != null) {
-      writeKeyValuePair(outStream, "grantor", grantor);
+      if (dbName != null) {
+        writeKeyValuePair(builder, "database", dbName);
+      }
+      if (tableName != null) {
+        writeKeyValuePair(builder, "table", tableName);
+      }
+      if (partName != null) {
+        writeKeyValuePair(builder, "partition", partName);
+      }
+      if (columnName != null) {
+        writeKeyValuePair(builder, "columnName", columnName);
+      }
+
+      writeKeyValuePair(builder, "principalName", principalName);
+      writeKeyValuePair(builder, "principalType", "" + principalType);
+      writeKeyValuePair(builder, "privilege", privName);
+      writeKeyValuePair(builder, "grantTime", "" + createTime);
+      if (grantor != null) {
+        writeKeyValuePair(builder, "grantor", grantor);
+      }
     }
   }
 
-  private static void writeKeyValuePair(DataOutput outStream, String key,
+  private static void writeKeyValuePair(StringBuilder builder, String key,
       String value) throws IOException {
-    outStream.write(terminator);
-    outStream.writeBytes(key);
-    outStream.write(separator);
-    outStream.writeBytes(value);
-    outStream.write(separator);
+    if (builder.length() > 0) {
+      builder.append((char)terminator);
+    }
+    builder.append(key);
+    builder.append((char)separator);
+    builder.append(value);
   }
 
   private void setAlterProtectMode(boolean protectModeEnable,
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
index 81c3247..b8de0dd 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/DDLSemanticAnalyzer.java
@@ -100,10 +100,12 @@
 import org.apache.hadoop.hive.ql.plan.PartitionSpec;
 import org.apache.hadoop.hive.ql.plan.PlanUtils;
 import org.apache.hadoop.hive.ql.plan.RenamePartitionDesc;
+import org.apache.hadoop.hive.ql.plan.RoleDDLDesc;
 import org.apache.hadoop.hive.ql.plan.ShowColumnsDesc;
 import org.apache.hadoop.hive.ql.plan.ShowCreateTableDesc;
 import org.apache.hadoop.hive.ql.plan.ShowDatabasesDesc;
 import org.apache.hadoop.hive.ql.plan.ShowFunctionsDesc;
+import org.apache.hadoop.hive.ql.plan.ShowGrantDesc;
 import org.apache.hadoop.hive.ql.plan.ShowIndexesDesc;
 import org.apache.hadoop.hive.ql.plan.ShowLocksDesc;
 import org.apache.hadoop.hive.ql.plan.ShowPartitionsDesc;
@@ -455,6 +457,7 @@ private void analyzeShowGrant(ASTNode ast) throws SemanticException {
         createShowGrantTask(ast, ctx.getResFile(), getInputs(), getOutputs());
     if(task != null) {
       rootTasks.add(task);
+      setFetchTask(createFetchTask(ShowGrantDesc.getSchema()));
     }
   }
 
@@ -496,6 +499,7 @@ private void analyzeShowRoleGrant(ASTNode ast) throws SemanticException {
         createShowRoleGrantTask(ast, ctx.getResFile(), getInputs(), getOutputs());
     if(task != null) {
       rootTasks.add(task);
+      setFetchTask(createFetchTask(RoleDDLDesc.getSchema()));
     }
   }
 
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/RoleDDLDesc.java b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/RoleDDLDesc.java
index bef1221..99dadb0 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/RoleDDLDesc.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/RoleDDLDesc.java
@@ -39,6 +39,15 @@
   
   private String roleOwnerName;
 
+  /**
+   * thrift ddl for the result of show role.
+   */
+  private static String schema = "role#string";
+
+  public static String getSchema() {
+    return schema;
+  }
+
   public static enum RoleOperation {
     DROP_ROLE("drop_role"), CREATE_ROLE("create_role"), SHOW_ROLE_GRANT("show_roles");
     private String operationName;
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/ShowGrantDesc.java b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/ShowGrantDesc.java
index 7a9888f..de59ec3 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/ShowGrantDesc.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/ShowGrantDesc.java
@@ -30,6 +30,11 @@
 
   private String resFile;
 
+  /**
+   * thrift ddl for the result of show grant.
+   */
+  private static final String schema = "property,value#string:string";
+
   public ShowGrantDesc(){
   }
   
@@ -40,7 +45,11 @@ public ShowGrantDesc(String resFile, PrincipalDesc principalDesc,
     this.hiveObj = subjectObj;
     this.columns = columns;
   }
-  
+
+  public static String getSchema() {
+    return schema;
+  }
+
   @Explain(displayName="principal desc")
   public PrincipalDesc getPrincipalDesc() {
     return principalDesc;
diff --git a/src/ql/src/test/results/clientnegative/authorization_fail_3.q.out b/src/ql/src/test/results/clientnegative/authorization_fail_3.q.out
index 221fcad..aac09df 100644
--- a/src/ql/src/test/results/clientnegative/authorization_fail_3.q.out
+++ b/src/ql/src/test/results/clientnegative/authorization_fail_3.q.out
@@ -24,14 +24,13 @@ PREHOOK: query: show grant user hive_test_user on table authorization_fail_3
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_fail_3
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_fail_3	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_fail_3
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_fail_3 partition (ds='2010')
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_fail_3 partition (ds='2010')
diff --git a/src/ql/src/test/results/clientnegative/authorization_fail_4.q.out b/src/ql/src/test/results/clientnegative/authorization_fail_4.q.out
index 9e5cbe7..8a2f067 100644
--- a/src/ql/src/test/results/clientnegative/authorization_fail_4.q.out
+++ b/src/ql/src/test/results/clientnegative/authorization_fail_4.q.out
@@ -38,42 +38,38 @@ PREHOOK: query: show grant user hive_test_user on table authorization_fail_4
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_fail_4
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_fail_4	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Alter	
+database	default
+table	authorization_fail_4
+principalName	hive_test_user
+principalType	USER
+privilege	Alter
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_fail_4	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+grantor	hive_test_user
+database	default
+table	authorization_fail_4
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_fail_4 partition (ds='2010')
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_fail_4 partition (ds='2010')
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_fail_4	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Alter	
+database	default
+table	authorization_fail_4
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Alter
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_fail_4	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+grantor	hive_test_user
+database	default
+table	authorization_fail_4
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 Authorization failed:No privilege 'Select' found for inputs { database:default, table:authorization_fail_4, partitionName:ds=2010, columnName:key}. Use show grant to get more details.
diff --git a/src/ql/src/test/results/clientnegative/authorization_fail_5.q.out b/src/ql/src/test/results/clientnegative/authorization_fail_5.q.out
index 1b4f189..95938d1 100644
--- a/src/ql/src/test/results/clientnegative/authorization_fail_5.q.out
+++ b/src/ql/src/test/results/clientnegative/authorization_fail_5.q.out
@@ -44,61 +44,55 @@ PREHOOK: query: show grant user hive_test_user on table authorization_fail
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_fail
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_fail	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Alter	
+database	default
+table	authorization_fail
+principalName	hive_test_user
+principalType	USER
+privilege	Alter
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_fail	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+grantor	hive_test_user
+database	default
+table	authorization_fail
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_fail	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	default
+table	authorization_fail
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_fail partition (ds='2010')
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_fail partition (ds='2010')
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_fail	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Alter	
+database	default
+table	authorization_fail
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Alter
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_fail	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+grantor	hive_test_user
+database	default
+table	authorization_fail
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_fail	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	default
+table	authorization_fail
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: revoke Select on table authorization_fail partition (ds='2010') from user hive_test_user
 PREHOOK: type: REVOKE_PRIVILEGE
 PREHOOK: Output: default@authorization_fail@ds=2010
@@ -109,22 +103,20 @@ PREHOOK: query: show grant user hive_test_user on table authorization_fail parti
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_fail partition (ds='2010')
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_fail	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Alter	
+database	default
+table	authorization_fail
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Alter
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_fail	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+grantor	hive_test_user
+database	default
+table	authorization_fail
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 Authorization failed:No privilege 'Select' found for inputs { database:default, table:authorization_fail, partitionName:ds=2010, columnName:key}. Use show grant to get more details.
diff --git a/src/ql/src/test/results/clientnegative/authorization_fail_7.q.out b/src/ql/src/test/results/clientnegative/authorization_fail_7.q.out
index b93d7a2..d63620a 100644
--- a/src/ql/src/test/results/clientnegative/authorization_fail_7.q.out
+++ b/src/ql/src/test/results/clientnegative/authorization_fail_7.q.out
@@ -25,20 +25,18 @@ PREHOOK: query: show role grant user hive_test_user
 PREHOOK: type: SHOW_ROLE_GRANT
 POSTHOOK: query: show role grant user hive_test_user
 POSTHOOK: type: SHOW_ROLE_GRANT
-role name:hive_test_role_fail
-role name:hive_test_role_fail
+hive_test_role_fail
 PREHOOK: query: show grant role hive_test_role_fail on table authorization_fail
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant role hive_test_role_fail on table authorization_fail
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_fail	
-principalName	hive_test_role_fail	
-principalType	ROLE	
-privilege	Select	
+database	default
+table	authorization_fail
+principalName	hive_test_role_fail
+principalType	ROLE
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: drop role hive_test_role_fail
 PREHOOK: type: DROPROLE
 POSTHOOK: query: drop role hive_test_role_fail
diff --git a/src/ql/src/test/results/clientnegative/authorization_part.q.out b/src/ql/src/test/results/clientnegative/authorization_part.q.out
index c45fd4f..0a55dcb 100644
--- a/src/ql/src/test/results/clientnegative/authorization_part.q.out
+++ b/src/ql/src/test/results/clientnegative/authorization_part.q.out
@@ -66,14 +66,13 @@ PREHOOK: query: show grant group hive_test_group1 on table authorization_part_fa
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table authorization_part_fail
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_part_fail	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part_fail
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: insert overwrite table authorization_part_fail partition (ds='2010') select key, value from src_auth
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src_auth
@@ -90,31 +89,29 @@ POSTHOOK: query: show grant group hive_test_group1 on table authorization_part_f
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).key EXPRESSION [(src_auth)src_auth.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).value SIMPLE [(src_auth)src_auth.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part_fail	
-partition	ds=2010	
-columnName	key	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part_fail
+partition	ds=2010
+columnName	key
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant group hive_test_group1 on table authorization_part_fail partition (ds='2010')
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table authorization_part_fail partition (ds='2010')
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).key EXPRESSION [(src_auth)src_auth.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).value SIMPLE [(src_auth)src_auth.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part_fail	
-partition	ds=2010	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part_fail
+partition	ds=2010
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key, value from authorization_part_fail where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part_fail
@@ -167,16 +164,15 @@ POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).key EXPRESSION [(s
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).value SIMPLE [(src_auth)src_auth.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2011).key EXPRESSION [(src_auth)src_auth.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2011).value SIMPLE [(src_auth)src_auth.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part_fail	
-partition	ds=2011	
-columnName	key	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part_fail
+partition	ds=2011
+columnName	key
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant group hive_test_group1 on table authorization_part_fail partition (ds='2011')
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table authorization_part_fail partition (ds='2011')
@@ -185,15 +181,14 @@ POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).key EXPRESSION [(s
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2010).value SIMPLE [(src_auth)src_auth.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2011).key EXPRESSION [(src_auth)src_auth.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part_fail PARTITION(ds=2011).value SIMPLE [(src_auth)src_auth.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part_fail	
-partition	ds=2011	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part_fail
+partition	ds=2011
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key, value from authorization_part_fail where ds='2011' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part_fail
diff --git a/src/ql/src/test/results/clientnegative/unset_table_property.q.out b/src/ql/src/test/results/clientnegative/unset_table_property.q.out
index 94fc389..9dd8034 100644
--- a/src/ql/src/test/results/clientnegative/unset_table_property.q.out
+++ b/src/ql/src/test/results/clientnegative/unset_table_property.q.out
@@ -15,7 +15,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 c	3
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientnegative/unset_view_property.q.out b/src/ql/src/test/results/clientnegative/unset_view_property.q.out
index 487dc63..1e15b47 100644
--- a/src/ql/src/test/results/clientnegative/unset_view_property.q.out
+++ b/src/ql/src/test/results/clientnegative/unset_view_property.q.out
@@ -15,7 +15,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 propA	100
 propB	200
diff --git a/src/ql/src/test/results/clientpositive/alter_rename_partition_authorization.q.out b/src/ql/src/test/results/clientpositive/alter_rename_partition_authorization.q.out
index bc91284..3631763 100644
--- a/src/ql/src/test/results/clientpositive/alter_rename_partition_authorization.q.out
+++ b/src/ql/src/test/results/clientpositive/alter_rename_partition_authorization.q.out
@@ -52,30 +52,27 @@ PREHOOK: query: show grant user hive_test_user on table authorization_part
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: grant select(key) on table authorization_part to user hive_test_user
 PREHOOK: type: GRANT_PRIVILEGE
 PREHOOK: Output: default@authorization_part
@@ -98,16 +95,15 @@ POSTHOOK: query: show grant user hive_test_user on table authorization_part(key)
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: alter table authorization_part partition (ds='2010') rename to partition (ds='2010_tmp')
 PREHOOK: type: ALTERTABLE_RENAMEPART
 PREHOOK: Input: default@authorization_part
@@ -126,16 +122,15 @@ POSTHOOK: query: show grant user hive_test_user on table authorization_part(key)
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010_tmp	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010_tmp
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: drop table authorization_part
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@authorization_part
diff --git a/src/ql/src/test/results/clientpositive/authorization_1.q.out b/src/ql/src/test/results/clientpositive/authorization_1.q.out
index 0970ef6..3391bcd 100644
--- a/src/ql/src/test/results/clientpositive/authorization_1.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_1.q.out
@@ -23,14 +23,13 @@ PREHOOK: query: show grant user hive_test_user on table src_autho_test
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table src_autho_test
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	src_autho_test
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table src_autho_test(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table src_autho_test(key)
@@ -95,15 +94,14 @@ PREHOOK: query: show grant user hive_test_user on table src_autho_test(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table src_autho_test(key)
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	src_autho_test
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from src_autho_test order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src_autho_test
@@ -160,14 +158,13 @@ PREHOOK: query: show grant group hive_test_group1 on table src_autho_test
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table src_autho_test
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	src_autho_test
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant group hive_test_group1 on table src_autho_test(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table src_autho_test(key)
@@ -232,15 +229,14 @@ PREHOOK: query: show grant group hive_test_group1 on table src_autho_test(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table src_autho_test(key)
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-columnName	key	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	src_autho_test
+columnName	key
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from src_autho_test order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src_autho_test
@@ -297,8 +293,7 @@ PREHOOK: query: show role grant user hive_test_user
 PREHOOK: type: SHOW_ROLE_GRANT
 POSTHOOK: query: show role grant user hive_test_user
 POSTHOOK: type: SHOW_ROLE_GRANT
-role name:src_role
-role name:src_role
+src_role
 PREHOOK: query: --column grant to role
 
 grant select(key) on table src_autho_test to role src_role
@@ -317,15 +312,14 @@ PREHOOK: query: show grant role src_role on table src_autho_test(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant role src_role on table src_autho_test(key)
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-columnName	key	
-principalName	src_role	
-principalType	ROLE	
-privilege	Select	
+database	default
+table	src_autho_test
+columnName	key
+principalName	src_role
+principalType	ROLE
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from src_autho_test order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src_autho_test
@@ -402,14 +396,13 @@ PREHOOK: query: show grant role src_role on table src_autho_test
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant role src_role on table src_autho_test
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-principalName	src_role	
-principalType	ROLE	
-privilege	Select	
+database	default
+table	src_autho_test
+principalName	src_role
+principalType	ROLE
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant role src_role on table src_autho_test(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant role src_role on table src_autho_test(key)
diff --git a/src/ql/src/test/results/clientpositive/authorization_2.q.out b/src/ql/src/test/results/clientpositive/authorization_2.q.out
index 20e3df8..460240b 100644
--- a/src/ql/src/test/results/clientpositive/authorization_2.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_2.q.out
@@ -52,30 +52,27 @@ PREHOOK: query: show grant user hive_test_user on table authorization_part
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: alter table authorization_part add partition (ds='2010')
 PREHOOK: type: ALTERTABLE_ADDPARTS
 PREHOOK: Input: default@authorization_part
@@ -87,33 +84,30 @@ PREHOOK: query: show grant user hive_test_user on table authorization_part parti
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part partition (ds='2010')
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: grant select(key) on table authorization_part to user hive_test_user
 PREHOOK: type: GRANT_PRIVILEGE
 PREHOOK: Output: default@authorization_part
@@ -144,31 +138,29 @@ POSTHOOK: query: show grant user hive_test_user on table authorization_part(key)
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_part(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part(key)
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -221,16 +213,15 @@ POSTHOOK: query: show grant user hive_test_user on table authorization_part(key)
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -295,30 +286,27 @@ show grant user hive_test_user on table authorization_part
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: alter table authorization_part add partition (ds='2010')
 PREHOOK: type: ALTERTABLE_ADDPARTS
 PREHOOK: Input: default@authorization_part
@@ -334,33 +322,30 @@ POSTHOOK: query: show grant user hive_test_user on table authorization_part part
 POSTHOOK: type: SHOW_GRANT
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: grant select on table authorization_part to user hive_test_user
 PREHOOK: type: GRANT_PRIVILEGE
 PREHOOK: Output: default@authorization_part
@@ -399,42 +384,38 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_part
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part
@@ -443,38 +424,34 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -527,30 +504,27 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_part partition (ds='2010')
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part partition (ds='2010')
@@ -559,42 +533,38 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -647,33 +617,30 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: alter table authorization_part drop partition (ds='2010')
 PREHOOK: type: ALTERTABLE_DROPPARTS
 PREHOOK: Input: default@authorization_part
@@ -763,16 +730,15 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-columnName	key	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+columnName	key
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant group hive_test_group1 on table authorization_part(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table authorization_part(key)
@@ -783,15 +749,14 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-columnName	key	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part
+columnName	key
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -860,16 +825,15 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-columnName	key	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+columnName	key
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -1031,15 +995,14 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant group hive_test_group1 on table authorization_part
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant group hive_test_group1 on table authorization_part
@@ -1052,14 +1015,13 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -1136,15 +1098,14 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-principalName	hive_test_group1	
-principalType	GROUP	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+principalName	hive_test_group1
+principalType	GROUP
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
diff --git a/src/ql/src/test/results/clientpositive/authorization_3.q.out b/src/ql/src/test/results/clientpositive/authorization_3.q.out
index 4555892..ff42dfb 100644
--- a/src/ql/src/test/results/clientpositive/authorization_3.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_3.q.out
@@ -25,22 +25,20 @@ PREHOOK: query: show grant user hive_test_user on table src_autho_test
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table src_autho_test
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+database	default
+table	src_autho_test
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	default
+table	src_autho_test
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: revoke select on table src_autho_test from user hive_test_user
 PREHOOK: type: REVOKE_PRIVILEGE
 PREHOOK: Output: default@src_autho_test
@@ -63,22 +61,20 @@ PREHOOK: query: show grant user hive_test_user on table src_autho_test
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table src_autho_test
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+database	default
+table	src_autho_test
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	default
+table	src_autho_test
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: revoke drop,select on table src_autho_test from user hive_test_user
 PREHOOK: type: REVOKE_PRIVILEGE
 PREHOOK: Output: default@src_autho_test
@@ -95,14 +91,13 @@ PREHOOK: query: show grant user hive_test_user on table src_autho_test
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table src_autho_test
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+database	default
+table	src_autho_test
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: revoke drop,select(key), select(value) on table src_autho_test from user hive_test_user
 PREHOOK: type: REVOKE_PRIVILEGE
 PREHOOK: Output: default@src_autho_test
diff --git a/src/ql/src/test/results/clientpositive/authorization_4.q.out b/src/ql/src/test/results/clientpositive/authorization_4.q.out
index f80b517..e656213 100644
--- a/src/ql/src/test/results/clientpositive/authorization_4.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_4.q.out
@@ -19,14 +19,13 @@ PREHOOK: query: show grant user hive_test_user on table src_autho_test
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table src_autho_test
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	src_autho_test	
-principalName	hive_test_user	
-principalType	USER	
-privilege	All	
+database	default
+table	src_autho_test
+principalName	hive_test_user
+principalType	USER
+privilege	All
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from src_autho_test order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@src_autho_test
diff --git a/src/ql/src/test/results/clientpositive/authorization_5.q.out b/src/ql/src/test/results/clientpositive/authorization_5.q.out
index 11effa7..2bf48f7 100644
--- a/src/ql/src/test/results/clientpositive/authorization_5.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_5.q.out
@@ -24,20 +24,18 @@ PREHOOK: query: SHOW GRANT USER hive_test_user ON DATABASE test_db
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: SHOW GRANT USER hive_test_user ON DATABASE test_db
 POSTHOOK: type: SHOW_GRANT
-
-database	test_db	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+database	test_db
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	test_db	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+grantor	hive_test_user
+database	test_db
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: CREATE ROLE db_test_role
 PREHOOK: type: CREATEROLE
 POSTHOOK: query: CREATE ROLE db_test_role
@@ -50,8 +48,7 @@ PREHOOK: query: SHOW ROLE GRANT USER hive_test_user
 PREHOOK: type: SHOW_ROLE_GRANT
 POSTHOOK: query: SHOW ROLE GRANT USER hive_test_user
 POSTHOOK: type: SHOW_ROLE_GRANT
-role name:db_test_role
-role name:db_test_role
+db_test_role
 PREHOOK: query: GRANT drop ON DATABASE test_db TO ROLE db_test_role
 PREHOOK: type: GRANT_PRIVILEGE
 POSTHOOK: query: GRANT drop ON DATABASE test_db TO ROLE db_test_role
@@ -64,20 +61,18 @@ PREHOOK: query: SHOW GRANT ROLE db_test_role ON DATABASE test_db
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: SHOW GRANT ROLE db_test_role ON DATABASE test_db
 POSTHOOK: type: SHOW_GRANT
-
-database	test_db	
-principalName	db_test_role	
-principalType	ROLE	
-privilege	Drop	
+database	test_db
+principalName	db_test_role
+principalType	ROLE
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	test_db	
-principalName	db_test_role	
-principalType	ROLE	
-privilege	Select	
+grantor	hive_test_user
+database	test_db
+principalName	db_test_role
+principalType	ROLE
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: DROP DATABASE IF EXISTS test_db
 PREHOOK: type: DROPDATABASE
 POSTHOOK: query: DROP DATABASE IF EXISTS test_db
diff --git a/src/ql/src/test/results/clientpositive/authorization_6.q.out b/src/ql/src/test/results/clientpositive/authorization_6.q.out
index d5fa6e8..0685c1e 100644
--- a/src/ql/src/test/results/clientpositive/authorization_6.q.out
+++ b/src/ql/src/test/results/clientpositive/authorization_6.q.out
@@ -52,30 +52,27 @@ PREHOOK: query: show grant user hive_test_user on table authorization_part
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Drop	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Drop
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: grant select(key) on table authorization_part to user hive_test_user
 PREHOOK: type: GRANT_PRIVILEGE
 PREHOOK: Output: default@authorization_part
@@ -112,16 +109,15 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2010	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2010
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_part(key) partition (ds='2011')
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part(key) partition (ds='2011')
@@ -130,16 +126,15 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-partition	ds=2011	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+partition	ds=2011
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: show grant user hive_test_user on table authorization_part(key)
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test_user on table authorization_part(key)
@@ -148,15 +143,14 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds>='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
@@ -254,22 +248,20 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2010).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Create	
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Create
 #### A masked pattern was here ####
-grantor	hive_test_user	
-
-database	default	
-table	authorization_part	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Update	
+grantor	hive_test_user
+database	default
+table	authorization_part
+principalName	hive_test_user
+principalType	USER
+privilege	Update
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: grant select(key) on table authorization_part to user hive_test_user
 PREHOOK: type: GRANT_PRIVILEGE
 PREHOOK: Output: default@authorization_part
@@ -346,15 +338,14 @@ POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).key EXPRESSION [(src_au
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).key EXPRESSION [(src_auth_tmp)src_auth_tmp.FieldSchema(name:key, type:string, comment:null), ]
 POSTHOOK: Lineage: authorization_part PARTITION(ds=2011).value SIMPLE [(src_auth_tmp)src_auth_tmp.FieldSchema(name:value, type:string, comment:null), ]
-
-database	default	
-table	authorization_part	
-columnName	key	
-principalName	hive_test_user	
-principalType	USER	
-privilege	Select	
+database	default
+table	authorization_part
+columnName	key
+principalName	hive_test_user
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: select key from authorization_part where ds>='2010' order by key limit 20
 PREHOOK: type: QUERY
 PREHOOK: Input: default@authorization_part
diff --git a/src/ql/src/test/results/clientpositive/keyword_1.q.out b/src/ql/src/test/results/clientpositive/keyword_1.q.out
index ce326ad..848de27 100644
--- a/src/ql/src/test/results/clientpositive/keyword_1.q.out
+++ b/src/ql/src/test/results/clientpositive/keyword_1.q.out
@@ -53,14 +53,13 @@ PREHOOK: query: show grant user hive_test on table test_user
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test on table test_user
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	test_user	
-principalName	hive_test	
-principalType	USER	
-privilege	Select	
+database	default
+table	test_user
+principalName	hive_test
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: drop table test_user
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@test_user
@@ -120,14 +119,13 @@ PREHOOK: query: show grant user hive_test on table test_user
 PREHOOK: type: SHOW_GRANT
 POSTHOOK: query: show grant user hive_test on table test_user
 POSTHOOK: type: SHOW_GRANT
-
-database	default	
-table	test_user	
-principalName	hive_test	
-principalType	USER	
-privilege	Select	
+database	default
+table	test_user
+principalName	hive_test
+principalType	USER
+privilege	Select
 #### A masked pattern was here ####
-grantor	hive_test_user	
+grantor	hive_test_user
 PREHOOK: query: drop table test_user
 PREHOOK: type: DROPTABLE
 PREHOOK: Input: default@test_user
diff --git a/src/ql/src/test/results/clientpositive/show_tblproperties.q.out b/src/ql/src/test/results/clientpositive/show_tblproperties.q.out
index 8f84c5c..dab7f75 100644
--- a/src/ql/src/test/results/clientpositive/show_tblproperties.q.out
+++ b/src/ql/src/test/results/clientpositive/show_tblproperties.q.out
@@ -28,7 +28,6 @@ PREHOOK: query: show tblproperties tmpfoo
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: show tblproperties tmpfoo
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 tmp	true
 #### A masked pattern was here ####
diff --git a/src/ql/src/test/results/clientpositive/unset_table_view_property.q.out b/src/ql/src/test/results/clientpositive/unset_table_view_property.q.out
index d39f492..c6985c9 100644
--- a/src/ql/src/test/results/clientpositive/unset_table_view_property.q.out
+++ b/src/ql/src/test/results/clientpositive/unset_table_view_property.q.out
@@ -7,7 +7,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 PREHOOK: query: -- UNSET TABLE PROPERTIES
 ALTER TABLE testTable SET TBLPROPERTIES ('a'='1', 'c'='3')
@@ -23,7 +22,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 c	3
 #### A masked pattern was here ####
@@ -43,7 +41,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 PREHOOK: query: ALTER TABLE testTable SET TBLPROPERTIES ('a'='1', 'c'='3', 'd'='4')
 PREHOOK: type: ALTERTABLE_PROPERTIES
@@ -57,7 +54,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 d	4
 #### A masked pattern was here ####
 c	3
@@ -78,7 +74,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 c	3
 #### A masked pattern was here ####
@@ -96,7 +91,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 PREHOOK: query: ALTER TABLE testTable SET TBLPROPERTIES ('a'='1', 'b' = '2', 'c'='3', 'd'='4')
 PREHOOK: type: ALTERTABLE_PROPERTIES
@@ -110,7 +104,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 d	4
 #### A masked pattern was here ####
 b	2
@@ -132,7 +125,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 c	3
 #### A masked pattern was here ####
@@ -152,7 +144,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testTable
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testTable
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 a	1
 #### A masked pattern was here ####
@@ -175,7 +166,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 propA	100
 propB	200
@@ -194,7 +184,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 PREHOOK: query: ALTER VIEW testView SET TBLPROPERTIES ('propA'='100', 'propC'='300', 'propD'='400')
 PREHOOK: type: ALTERVIEW_PROPERTIES
@@ -208,7 +197,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 propA	100
 #### A masked pattern was here ####
@@ -228,7 +216,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 propD	400
 PREHOOK: query: -- the same property being UNSET multiple times
@@ -245,7 +232,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 PREHOOK: query: ALTER VIEW testView SET TBLPROPERTIES ('propA'='100', 'propB' = '200', 'propC'='300', 'propD'='400')
 PREHOOK: type: ALTERVIEW_PROPERTIES
@@ -259,7 +245,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 propA	100
 propB	200
@@ -280,7 +265,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 propA	100
 propB	200
@@ -299,7 +283,6 @@ PREHOOK: query: SHOW TBLPROPERTIES testView
 PREHOOK: type: SHOW_TBLPROPERTIES
 POSTHOOK: query: SHOW TBLPROPERTIES testView
 POSTHOOK: type: SHOW_TBLPROPERTIES
-	 
 #### A masked pattern was here ####
 propA	100
 #### A masked pattern was here ####
-- 
1.7.0.4

