From 27bf09e5479e0dbc4b3134471795111b0410822f Mon Sep 17 00:00:00 2001
From: Xuefu Zhang <xzhang@xzlt.(none)>
Date: Mon, 3 Feb 2014 06:39:57 -0800
Subject: [PATCH 266/375] CDH-16893: sign(a) UDF is not supported for decimal type

---
 .../hadoop/hive/common/type/HiveDecimal.java       |    8 +++
 .../org/apache/hadoop/hive/ql/udf/UDFSign.java     |   17 +++++++
 .../org/apache/hadoop/hive/ql/udf/TestUDFSign.java |   47 ++++++++++++++++++++
 3 files changed, 72 insertions(+), 0 deletions(-)
 create mode 100644 ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFSign.java

diff --git a/src/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java b/src/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java
index 729908a..29c5168 100644
--- a/src/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java
+++ b/src/common/src/java/org/apache/hadoop/hive/common/type/HiveDecimal.java
@@ -205,6 +205,14 @@ public HiveDecimal divide(HiveDecimal dec) {
     return create(bd.divide(dec.bd, MAX_SCALE, RoundingMode.HALF_UP), true);
   }
 
+  /**
+   * Get the sign of the underlying decimal.
+   * @return 0 if the decimal is equal to 0, -1 if less than zero, and 1 if greater than 0
+   */
+  public int signum() {
+    return bd.signum();
+  }
+
   private static BigDecimal trim(BigDecimal d) {
     if (d.compareTo(BigDecimal.ZERO) == 0) {
       // Special case for 0, because java doesn't strip zeros correctly on that number.
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFSign.java b/src/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFSign.java
index 76b205f..2762bfb 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFSign.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/udf/UDFSign.java
@@ -23,6 +23,8 @@
 import org.apache.hadoop.hive.ql.exec.Description;
 import org.apache.hadoop.hive.ql.exec.UDF;
 import org.apache.hadoop.hive.serde2.io.DoubleWritable;
+import org.apache.hadoop.hive.serde2.io.HiveDecimalWritable;
+import org.apache.hadoop.io.IntWritable;
 
 @Description(
     name = "sign",
@@ -36,6 +38,7 @@
   @SuppressWarnings("unused")
   private static Log LOG = LogFactory.getLog(UDFSign.class.getName());
   DoubleWritable result = new DoubleWritable();
+  IntWritable intWritable = new IntWritable();
 
   public UDFSign() {
   }
@@ -59,4 +62,18 @@ else if (a.get()>0) {
     return result;
   }
 
+  /**
+   * Get the sign of the decimal input
+   * @param dec decimal input
+   * @return -1, 0, or 1 representing the sign of the input decimal
+   */
+  public IntWritable evaluate(HiveDecimalWritable dec)  {
+    if (dec == null || dec.getHiveDecimal() == null) {
+      return null;
+    }
+
+    intWritable.set(dec.getHiveDecimal().signum());
+    return intWritable;
+  }
+
 }
diff --git a/src/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFSign.java b/src/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFSign.java
new file mode 100644
index 0000000..436f913
--- /dev/null
+++ b/src/ql/src/test/org/apache/hadoop/hive/ql/udf/TestUDFSign.java
@@ -0,0 +1,47 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql.udf;
+
+import org.apache.hadoop.hive.common.type.HiveDecimal;
+import org.apache.hadoop.hive.ql.metadata.HiveException;
+import org.apache.hadoop.hive.serde2.io.HiveDecimalWritable;
+import org.apache.hadoop.io.IntWritable;
+import org.junit.Assert;
+import org.junit.Test;
+
+public class TestUDFSign {
+
+  @Test
+  public void testDecimalSign() throws HiveException {
+    UDFSign udf = new UDFSign();
+
+    HiveDecimalWritable input = new HiveDecimalWritable(HiveDecimal.create("32300.004747"));
+    IntWritable res = udf.evaluate(input);
+    Assert.assertEquals(1, res.get());
+
+    input = new HiveDecimalWritable(HiveDecimal.create("-30.047"));
+    res = udf.evaluate(input);
+    Assert.assertEquals(-1, res.get());
+
+    input = new HiveDecimalWritable(HiveDecimal.ZERO);
+    res = udf.evaluate(input);
+    Assert.assertEquals(0, res.get());
+  }
+
+}
-- 
1.7.0.4

