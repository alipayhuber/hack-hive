From 3a2b82084c2bf6099341f9841ccc8583e1f899b8 Mon Sep 17 00:00:00 2001
From: Jarek Jarcec Cecho <jarcec@apache.org>
Date: Sun, 1 Jun 2014 07:58:21 -0700
Subject: [PATCH 349/375] HIVE-7149: Parquet not able to handle negative decimal numbers

---
 .../hadoop/hive/common/type/TestHiveDecimal.java   |   14 ++++++++++++--
 data/files/dec.txt                                 |    4 ++--
 .../hive/ql/io/parquet/serde/ParquetHiveSerDe.java |    8 +++++++-
 .../test/results/clientpositive/avro_decimal.q.out |    4 ++--
 .../results/clientpositive/parquet_decimal.q.out   |    4 ++--
 5 files changed, 25 insertions(+), 9 deletions(-)

diff --git a/src/common/src/test/org/apache/hadoop/hive/common/type/TestHiveDecimal.java b/src/common/src/test/org/apache/hadoop/hive/common/type/TestHiveDecimal.java
index df73c78..1384a45 100644
--- a/src/common/src/test/org/apache/hadoop/hive/common/type/TestHiveDecimal.java
+++ b/src/common/src/test/org/apache/hadoop/hive/common/type/TestHiveDecimal.java
@@ -121,13 +121,23 @@ public void testException() {
 
   @Test
   public void testBinaryConversion() {
-    HiveDecimal dec = HiveDecimal.create("234.79");
+    testBinaryConversion("0.0");
+    testBinaryConversion("-12.25");
+    testBinaryConversion("234.79");
+  }
+
+  private void testBinaryConversion(String num) {
+    HiveDecimal dec = HiveDecimal.create(num);
     int scale = 2;
     byte[] d = dec.setScale(2).unscaledValue().toByteArray();
     Assert.assertEquals(dec, HiveDecimal.create(new BigInteger(d), scale));
     int prec = 5;
-    int len =  (int) (Math.ceil((Math.log(Math.pow(10, prec)) - 1)/Math.log(2) + 1) / 8);
+    int len =  (int)
+        Math.ceil((Math.log(Math.pow(10, prec) - 1) / Math.log(2) + 1) / 8);
     byte[] res = new byte[len];
+    if ( dec.signum() == -1)
+      for (int i = 0; i < len; i++)
+        res[i] |= 0xFF;
     System.arraycopy(d, 0, res, len-d.length, d.length); // Padding leading zeros.
     Assert.assertEquals(dec, HiveDecimal.create(new BigInteger(res), scale));
   }
diff --git a/src/data/files/dec.txt b/src/data/files/dec.txt
index a8f7007..58ff04b 100644
--- a/src/data/files/dec.txt
+++ b/src/data/files/dec.txt
@@ -3,8 +3,8 @@ Beck77.341
 Snow55.71
 Mary4.329
 Cluck5.96
-Tom12.25
+Tom-12.25
 Mary33.33
 Tom19.00
-Beck3.145
+Beck0.0
 Beck79.9
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.java b/src/ql/src/java/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.java
index fefa871..fb2f5a8 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/io/parquet/serde/ParquetHiveSerDe.java
@@ -264,7 +264,13 @@ private Writable createPrimitive(final Object obj, final PrimitiveObjectInspecto
         return new BinaryWritable(Binary.fromByteArray(src));
       }
       byte[] tgt = new byte[bytes];
-      System.arraycopy(src, 0, tgt, bytes - src.length, src.length); // Padding leading zeroes.
+      if ( hd.signum() == -1) {
+        // For negative number, initializing bits to 1
+        for (int i = 0; i < bytes; i++) {
+          tgt[i] |= 0xFF;
+        }
+      }
+      System.arraycopy(src, 0, tgt, bytes - src.length, src.length); // Padding leading zeroes/ones.
       return new BinaryWritable(Binary.fromByteArray(tgt));
     default:
       throw new SerDeException("Unknown primitive : " + inspector.getPrimitiveCategory());
diff --git a/src/ql/src/test/results/clientpositive/avro_decimal.q.out b/src/ql/src/test/results/clientpositive/avro_decimal.q.out
index b3144bd..a9e4787 100644
--- a/src/ql/src/test/results/clientpositive/avro_decimal.q.out
+++ b/src/ql/src/test/results/clientpositive/avro_decimal.q.out
@@ -79,10 +79,10 @@ Beck	77.34
 Snow	55.71
 Mary	4.33
 Cluck	5.96
-Tom	12.25
+Tom	-12.25
 Mary	33.33
 Tom	19
-Beck	3.15
+Beck	0
 Beck	79.9
 PREHOOK: query: DROP TABLE IF EXISTS avro_dec1
 PREHOOK: type: DROPTABLE
diff --git a/src/ql/src/test/results/clientpositive/parquet_decimal.q.out b/src/ql/src/test/results/clientpositive/parquet_decimal.q.out
index 4c9fef6..cca79ad 100644
--- a/src/ql/src/test/results/clientpositive/parquet_decimal.q.out
+++ b/src/ql/src/test/results/clientpositive/parquet_decimal.q.out
@@ -53,10 +53,10 @@ Beck	77.34
 Snow	55.71
 Mary	4.33
 Cluck	5.96
-Tom	12.25
+Tom	-12.25
 Mary	33.33
 Tom	19
-Beck	3.15
+Beck	0
 Beck	79.9
 PREHOOK: query: TRUNCATE TABLE parq_dec
 PREHOOK: type: TRUNCATETABLE
-- 
1.7.0.4

