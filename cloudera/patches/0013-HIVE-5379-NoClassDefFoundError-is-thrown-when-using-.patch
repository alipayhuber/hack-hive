From d111f83d32e4467fd231b3cc782ec713611fe3e6 Mon Sep 17 00:00:00 2001
From: Brock Noland <brock@apache.org>
Date: Fri, 27 Sep 2013 15:08:02 +0000
Subject: [PATCH 013/375] HIVE-5379 - NoClassDefFoundError is thrown when using lead/lag with kryo serialization (Reviewed By Ashutosh, Contributed by Navis)

git-svn-id: https://svn.apache.org/repos/asf/hive/trunk@1526941 13f79535-47bb-0310-9956-ffa450edef68
---
 .../apache/hadoop/hive/ql/parse/LeadLagInfo.java   |   71 ++++++++++++++++++++
 .../apache/hadoop/hive/ql/parse/PTFTranslator.java |   43 ------------
 .../parse/WindowingExprNodeEvaluatorFactory.java   |    1 -
 .../org/apache/hadoop/hive/ql/plan/PTFDesc.java    |    2 +-
 .../hadoop/hive/ql/plan/PTFDeserializer.java       |    2 +-
 5 files changed, 73 insertions(+), 46 deletions(-)
 create mode 100644 ql/src/java/org/apache/hadoop/hive/ql/parse/LeadLagInfo.java

diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/LeadLagInfo.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/LeadLagInfo.java
new file mode 100644
index 0000000..366b74b
--- /dev/null
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/LeadLagInfo.java
@@ -0,0 +1,71 @@
+/**
+ * Licensed to the Apache Software Foundation (ASF) under one
+ * or more contributor license agreements.  See the NOTICE file
+ * distributed with this work for additional information
+ * regarding copyright ownership.  The ASF licenses this file
+ * to you under the Apache License, Version 2.0 (the
+ * "License"); you may not use this file except in compliance
+ * with the License.  You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package org.apache.hadoop.hive.ql.parse;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.apache.hadoop.hive.ql.plan.ExprNodeDesc;
+import org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc;
+
+/**
+ * Lead Lag functionality
+ */
+public class LeadLagInfo {
+
+  /**
+   * list of LL invocations in a Query.
+   */
+  List<ExprNodeGenericFuncDesc> leadLagExprs;
+
+  /**
+   * map from the Select Expr Node to the LL Function invocations in it.
+   */
+  Map<ExprNodeDesc, List<ExprNodeGenericFuncDesc>> mapTopExprToLLFunExprs;
+
+  private void addLeadLagExpr(ExprNodeGenericFuncDesc llFunc) {
+    leadLagExprs = leadLagExprs == null ? new ArrayList<ExprNodeGenericFuncDesc>() : leadLagExprs;
+    leadLagExprs.add(llFunc);
+  }
+
+  public List<ExprNodeGenericFuncDesc> getLeadLagExprs() {
+    return leadLagExprs;
+  }
+
+  public void addLLFuncExprForTopExpr(ExprNodeDesc topExpr, ExprNodeGenericFuncDesc llFuncExpr) {
+    addLeadLagExpr(llFuncExpr);
+    mapTopExprToLLFunExprs = mapTopExprToLLFunExprs == null ?
+        new HashMap<ExprNodeDesc, List<ExprNodeGenericFuncDesc>>() : mapTopExprToLLFunExprs;
+    List<ExprNodeGenericFuncDesc> funcList = mapTopExprToLLFunExprs.get(topExpr);
+    if (funcList == null) {
+      funcList = new ArrayList<ExprNodeGenericFuncDesc>();
+      mapTopExprToLLFunExprs.put(topExpr, funcList);
+    }
+    funcList.add(llFuncExpr);
+  }
+
+  public List<ExprNodeGenericFuncDesc> getLLFuncExprsInTopExpr(ExprNodeDesc topExpr) {
+    if (mapTopExprToLLFunExprs == null) {
+      return null;
+    }
+    return mapTopExprToLLFunExprs.get(topExpr);
+  }
+}
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/PTFTranslator.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/PTFTranslator.java
index 7682860..4dac2e3 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/PTFTranslator.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/PTFTranslator.java
@@ -1097,49 +1097,6 @@ private static void _visit(Object t, Object parent, int childIndex, ContextVisit
     return componentInvocations;
   }
 
-
-  /*
-   * Lead Lag functionality
-   */
-  public static class LeadLagInfo {
-    /*
-     * list of LL invocations in a Query.
-     */
-    List<ExprNodeGenericFuncDesc> leadLagExprs;
-    /*
-     * map from the Select Expr Node to the LL Function invocations in it.
-     */
-    Map<ExprNodeDesc, List<ExprNodeGenericFuncDesc>> mapTopExprToLLFunExprs;
-
-    private void addLeadLagExpr(ExprNodeGenericFuncDesc llFunc) {
-      leadLagExprs = leadLagExprs == null ? new ArrayList<ExprNodeGenericFuncDesc>() : leadLagExprs;
-      leadLagExprs.add(llFunc);
-    }
-
-    public List<ExprNodeGenericFuncDesc> getLeadLagExprs() {
-      return leadLagExprs;
-    }
-
-    public void addLLFuncExprForTopExpr(ExprNodeDesc topExpr, ExprNodeGenericFuncDesc llFuncExpr) {
-      addLeadLagExpr(llFuncExpr);
-      mapTopExprToLLFunExprs = mapTopExprToLLFunExprs == null ?
-          new HashMap<ExprNodeDesc, List<ExprNodeGenericFuncDesc>>() : mapTopExprToLLFunExprs;
-      List<ExprNodeGenericFuncDesc> funcList = mapTopExprToLLFunExprs.get(topExpr);
-      if (funcList == null) {
-        funcList = new ArrayList<ExprNodeGenericFuncDesc>();
-        mapTopExprToLLFunExprs.put(topExpr, funcList);
-      }
-      funcList.add(llFuncExpr);
-    }
-
-    public List<ExprNodeGenericFuncDesc> getLLFuncExprsInTopExpr(ExprNodeDesc topExpr) {
-      if (mapTopExprToLLFunExprs == null) {
-        return null;
-      }
-      return mapTopExprToLLFunExprs.get(topExpr);
-    }
-  }
-
   public static void validateNoLeadLagInValueBoundarySpec(ASTNode node)
       throws SemanticException {
     String errMsg = "Lead/Lag not allowed in ValueBoundary Spec";
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/WindowingExprNodeEvaluatorFactory.java b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/WindowingExprNodeEvaluatorFactory.java
index f14a603..81039cf 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/parse/WindowingExprNodeEvaluatorFactory.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/parse/WindowingExprNodeEvaluatorFactory.java
@@ -23,7 +23,6 @@
 import org.apache.hadoop.hive.ql.exec.ExprNodeEvaluator;
 import org.apache.hadoop.hive.ql.exec.ExprNodeEvaluatorFactory;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
-import org.apache.hadoop.hive.ql.parse.PTFTranslator.LeadLagInfo;
 import org.apache.hadoop.hive.ql.plan.ExprNodeDesc;
 import org.apache.hadoop.hive.ql.plan.ExprNodeGenericFuncDesc;
 import org.apache.hadoop.hive.ql.udf.generic.GenericUDF;
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDesc.java b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDesc.java
index aaf9ff9..c1fbc62 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDesc.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDesc.java
@@ -26,9 +26,9 @@
 import org.apache.hadoop.hive.conf.HiveConf;
 import org.apache.hadoop.hive.ql.exec.ExprNodeEvaluator;
 import org.apache.hadoop.hive.ql.exec.PTFUtils;
+import org.apache.hadoop.hive.ql.parse.LeadLagInfo;
 import org.apache.hadoop.hive.ql.parse.PTFInvocationSpec.Order;
 import org.apache.hadoop.hive.ql.parse.PTFInvocationSpec.PTFQueryInputType;
-import org.apache.hadoop.hive.ql.parse.PTFTranslator.LeadLagInfo;
 import org.apache.hadoop.hive.ql.parse.RowResolver;
 import org.apache.hadoop.hive.ql.parse.TypeCheckCtx;
 import org.apache.hadoop.hive.ql.parse.WindowingSpec.Direction;
diff --git a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDeserializer.java b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDeserializer.java
index 08e3165..19e5ec2 100644
--- a/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDeserializer.java
+++ b/src/ql/src/java/org/apache/hadoop/hive/ql/plan/PTFDeserializer.java
@@ -29,7 +29,7 @@
 import org.apache.hadoop.hive.ql.exec.ExprNodeEvaluator;
 import org.apache.hadoop.hive.ql.exec.PTFPartition;
 import org.apache.hadoop.hive.ql.metadata.HiveException;
-import org.apache.hadoop.hive.ql.parse.PTFTranslator.LeadLagInfo;
+import org.apache.hadoop.hive.ql.parse.LeadLagInfo;
 import org.apache.hadoop.hive.ql.parse.WindowingExprNodeEvaluatorFactory;
 import org.apache.hadoop.hive.ql.plan.PTFDesc.BoundaryDef;
 import org.apache.hadoop.hive.ql.plan.PTFDesc.PTFExpressionDef;
-- 
1.7.0.4

